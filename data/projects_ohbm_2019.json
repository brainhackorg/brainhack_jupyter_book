[
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/100",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/100/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/100/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/100/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/100",
        "id": 455744698,
        "node_id": "MDU6SXNzdWU0NTU3NDQ2OTg=",
        "number": 100,
        "title": "Collaborate review Top 10 FAIR things for imaging",
        "user": {
            "login": "orchid00",
            "id": 9795785,
            "node_id": "MDQ6VXNlcjk3OTU3ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9795785?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orchid00",
            "html_url": "https://github.com/orchid00",
            "followers_url": "https://api.github.com/users/orchid00/followers",
            "following_url": "https://api.github.com/users/orchid00/following{/other_user}",
            "gists_url": "https://api.github.com/users/orchid00/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orchid00/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orchid00/subscriptions",
            "organizations_url": "https://api.github.com/users/orchid00/orgs",
            "repos_url": "https://api.github.com/users/orchid00/repos",
            "events_url": "https://api.github.com/users/orchid00/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orchid00/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-06-13T13:32:49Z",
        "updated_at": "2022-11-28T16:16:35Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Top 10 FAIR things for imaging\r\n\r\n## Project Description\r\n\r\nThis document aims to promote the use of FAIR principles in the bioimaging community. We will start by describing what are the FAIR principles, and then linking questions to examples of application. This guide is to enhance research data quality and empower researchers, scientists and health professionals to incorporate best data practices throughout the research cycle. \r\nThis is a continuation of Top 10 FAIR Data & Software Things\r\nhttps://www.go-fair.org/2019/02/20/top-10-fair-data-software-things-published/ \r\n \r\nTo inform data producers and data users about the FAIR principles applied to imaging and suggest activities to apply to their research.\r\n\r\n\r\n## Skills required to participate\r\nAnyone should be able to read and provide all kinds all feedback, I welcome more activities to be added and examples and resources.\r\n\r\n## Integration\r\nHow would your project integrate a neuroimager/clinician/psychologist/computational scientist?\r\nthe top 10 FAIR things for imaging is a broad but simple guide\r\n\r\n## Preparation material\r\nhave a look https://osf.io/preprints/xs9nh/\r\n\r\n\r\n## how to contribute\r\nI'm looking for reviewers until end of june 2019\r\n\r\n## Communication\r\nplease email me, you can find my email in the document\r\n\r\nhttps://osf.io/preprints/xs9nh/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/100/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/100/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/99",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/99/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/99/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/99/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/99",
        "id": 453661380,
        "node_id": "MDU6SXNzdWU0NTM2NjEzODA=",
        "number": 99,
        "title": "Correction of signal intensity fluctuations in DWI multi-protocol acquisitions",
        "user": {
            "login": "Lestropie",
            "id": 5637955,
            "node_id": "MDQ6VXNlcjU2Mzc5NTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5637955?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lestropie",
            "html_url": "https://github.com/Lestropie",
            "followers_url": "https://api.github.com/users/Lestropie/followers",
            "following_url": "https://api.github.com/users/Lestropie/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lestropie/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lestropie/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lestropie/subscriptions",
            "organizations_url": "https://api.github.com/users/Lestropie/orgs",
            "repos_url": "https://api.github.com/users/Lestropie/repos",
            "events_url": "https://api.github.com/users/Lestropie/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lestropie/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717336,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhmA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 4686717369,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhuQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_type:documentation",
                "name": "project_type:documentation",
                "color": "c5def5",
                "default": false,
                "description": ""
            },
            {
                "id": 4686717374,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhvg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_tools_skills:familiar",
                "name": "project_tools_skills:familiar",
                "color": "c2e0c6",
                "default": false,
                "description": ""
            },
            {
                "id": 4850406945,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWIQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/DWI",
                "name": "DWI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406950,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWJg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRI",
                "name": "MRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406962,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWMg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRtrix",
                "name": "MRtrix",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406968,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWOA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/diffusion",
                "name": "diffusion",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-06-07T19:28:30Z",
        "updated_at": "2022-11-28T16:17:09Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "# Correction of signal intensity fluctuations in DWI multi-protocol acquisitions\r\n\r\n*(Note: Submitting project after completion rather than before; but felt it appropriate to document for prosperity)*\r\n\r\n## Project Description\r\n\r\nMany modern Diffusion-Weighted Imaging (DWI) models rely on what is known as a \"multi-shell\" acquisition: this refers to the acquisition of image volumes where not only the *direction* of diffusion sensitisation is varied, but also the *magnitude* of that sensitisation, with groups of volumes where the sensitisation magnitude is equivalent but the direction differs referred to as \"shells\".\r\n\r\nOn some scanner platforms, acquisition of such data relies on executing multiple acquisition protocols, each with selection of a unique \"*b*-value\" (strength of diffusion sensitisation), rather than the ideal scenario where all image volumes are acquired in a single acquisition.\r\n\r\nThis presents a potential issue in the amalgamation of such data. It is possible for scanner frequency recalibration / ADC gain / FFT multiplication factor / other factors to be adjusted in between protocols. If this occurs, then the quantitative relationships between the different image volumes may be violated.\r\n\r\nThis project is a proposed retrospective fix to this problem. Each DWI acquisition will additionally contain so-called \"*b*=0\" volumes: these are image volumes where no diffusion sensitisation is applied. If there are undesirable differences in signal amplitudes between the different acquisition protocols, this should be evident as differences in the signal amplitudes between the *b*=0 volumes of the various acquisitions. We can therefore use the differences between these images to estimate an appropriate intensity multiplicative factor to then apply to all of the volumes in each acquisition, in order to attempt to correct for any such inter-protocol scaling that may have occurred.\r\n\r\n## Skills required to participate\r\n\r\nAt least some experience with Python is required.\r\n\r\nSome familiarity with performing basic operations on MRI image data.\r\n\r\nKnowledge of *MRtrix3* commands would be ideal, but not necessary. \r\n\r\n## Integration\r\n\r\nContributors to the proposed script will have the opportunity to inherit attribution of the developed code, via `git` contribution history & statistics, authorship of the developed script (which is reported in online & integrated command documentation), and avatar appearance on the main *MRtrix3* website as a contributor to the project.\r\n\r\nAnyone possessing image data that suffers from the described issue who could assist in testing the proposed solution would also be thanked for their contribution in the relevant Pull Request.\r\n\r\n## Preparation material\r\n\r\n- *MRtrix3* preprint: https://www.biorxiv.org/content/10.1101/551739v1\r\n   (provides basic example usage of Python API)\r\n\r\n- Original issue submission on *MRtrix3* repository: https://github.com/MRtrix3/mrtrix3/issues/1428\r\n\r\n## Link to your GitHub repo\r\n\r\n*MRtrix3* repository: https://github.com/MRtrix3/mrtrix3\r\n\r\n## Communication\r\n \r\nProject can be discussed directly on the [relevant GitHub issue](https://github.com/MRtrix3/mrtrix3/issues/1428).\r\n\r\nOngoing private communications regarding the project can be made via private messages on the [*MRtrix3* community forum](http://community.mrtrix.org/) ([link to my account](http://community.mrtrix.org/u/rsmith))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/99/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/99/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/98",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/98/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/98/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/98/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/98",
        "id": 453059910,
        "node_id": "MDU6SXNzdWU0NTMwNTk5MTA=",
        "number": 98,
        "title": "Learning how to publish work online",
        "user": {
            "login": "lnnrtwttkhn",
            "id": 42233065,
            "node_id": "MDQ6VXNlcjQyMjMzMDY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/42233065?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lnnrtwttkhn",
            "html_url": "https://github.com/lnnrtwttkhn",
            "followers_url": "https://api.github.com/users/lnnrtwttkhn/followers",
            "following_url": "https://api.github.com/users/lnnrtwttkhn/following{/other_user}",
            "gists_url": "https://api.github.com/users/lnnrtwttkhn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lnnrtwttkhn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lnnrtwttkhn/subscriptions",
            "organizations_url": "https://api.github.com/users/lnnrtwttkhn/orgs",
            "repos_url": "https://api.github.com/users/lnnrtwttkhn/repos",
            "events_url": "https://api.github.com/users/lnnrtwttkhn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lnnrtwttkhn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717336,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhmA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 4686717369,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhuQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_type:documentation",
                "name": "project_type:documentation",
                "color": "c5def5",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2019-06-06T14:22:33Z",
        "updated_at": "2022-11-28T16:17:24Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Learning how to publish your work online\r\n\r\n## Project Description\r\n\r\nThe main goal is to learn how to make your work available to the world online. This can include, e.g.,\r\n* learning how to create your own personal website where you can tell the world more about yourself and host information about your work\r\n* learning how to create web-pages for your projects where you can display documentation, analysis code, results, etc.\r\n* relatedly, how to render jupyter-notebooks or RMarkdown scripts so that they can be displayed online\r\n* learning how to create a documentation, e.g. using ReadTheDocs, for a specific project / piece of software you developed\r\n\r\n## Skills required to participate\r\nI guess, none of the skills listed below are necessary required but can come in handy:\r\n* some basic knowledge of `git` could be useful, since one way of hosting (static) websites can be done through [github pages](https://pages.github.com/)\r\n* basic shell / bash knowledge could be useful, e.g., to navigate local git repositories etc.\r\n* maybe some html or javascript knowledge could be useful\r\n\r\nideally, it would be very helpful if at least one person would join who knows these things **well** to give help and could answer questions, etc.\r\n\r\n## Integration\r\nThe main goal could be to create (1) an example project website using github pages, (2) display rendered example analysis code on this website and (3) write a project documentation using e.g., Read The Docs\r\n\r\n## Preparation material\r\ntba, if someone knows helpful resources please post them here, thanks\r\n\r\n## Communication\r\ntba\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/98/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/98/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/92",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/92/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/92/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/92/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/92",
        "id": 452933665,
        "node_id": "MDU6SXNzdWU0NTI5MzM2NjU=",
        "number": 92,
        "title": "Neurolibre : A new binder publication platform",
        "user": {
            "login": "ltetrel",
            "id": 37963074,
            "node_id": "MDQ6VXNlcjM3OTYzMDc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/37963074?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ltetrel",
            "html_url": "https://github.com/ltetrel",
            "followers_url": "https://api.github.com/users/ltetrel/followers",
            "following_url": "https://api.github.com/users/ltetrel/following{/other_user}",
            "gists_url": "https://api.github.com/users/ltetrel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ltetrel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ltetrel/subscriptions",
            "organizations_url": "https://api.github.com/users/ltetrel/orgs",
            "repos_url": "https://api.github.com/users/ltetrel/repos",
            "events_url": "https://api.github.com/users/ltetrel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ltetrel/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-06-06T09:44:09Z",
        "updated_at": "2022-11-28T16:46:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Neurolibre : A new binder publication platform\r\n\r\n## Project Description\r\n\r\nNeurolibre is a curated repository of interactive neuroscience notebooks, seamlessly integrating data, text, code and figures. Notebooks can be freely modified and re-executed through the web, offering a fully reproducible, \u201clibre\u201d path from data to figures. Neurolibre is powered by the Binder project, with computational resources provided by CONP, CBRAIN and Compute Canada.\r\n\r\nWe need help to create our publication process. The server is using binderhub technology (docker, kubernetes).\r\n\r\n## Skills required to participate\r\n\r\nKnowledge of jupyter notebooks\r\nKubernetes\r\nDocker\r\n\r\n## Integration\r\nhttps://conp-pcno.github.io/\r\n\r\n## Preparation material\r\nhttps://mybinder.readthedocs.io/en/latest/\r\n\r\n## Link to your GitHub repo\r\nhttps://github.com/neurolibre",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/92/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/92/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/90",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/90/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/90/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/90/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/90",
        "id": 452921498,
        "node_id": "MDU6SXNzdWU0NTI5MjE0OTg=",
        "number": 90,
        "title": "Nipype-ify Denoiser",
        "user": {
            "login": "danlurie",
            "id": 1873103,
            "node_id": "MDQ6VXNlcjE4NzMxMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1873103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danlurie",
            "html_url": "https://github.com/danlurie",
            "followers_url": "https://api.github.com/users/danlurie/followers",
            "following_url": "https://api.github.com/users/danlurie/following{/other_user}",
            "gists_url": "https://api.github.com/users/danlurie/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danlurie/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danlurie/subscriptions",
            "organizations_url": "https://api.github.com/users/danlurie/orgs",
            "repos_url": "https://api.github.com/users/danlurie/repos",
            "events_url": "https://api.github.com/users/danlurie/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danlurie/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717336,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhmA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 4686717369,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhuQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_type:documentation",
                "name": "project_type:documentation",
                "color": "c5def5",
                "default": false,
                "description": ""
            },
            {
                "id": 4686717374,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhvg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_tools_skills:familiar",
                "name": "project_tools_skills:familiar",
                "color": "c2e0c6",
                "default": false,
                "description": ""
            },
            {
                "id": 4850406950,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWJg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRI",
                "name": "MRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850409552,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtgUA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/fMRI",
                "name": "fMRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850409556,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtgVA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Nipype",
                "name": "Nipype",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-06-06T09:18:59Z",
        "updated_at": "2022-11-28T16:17:50Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Nipype-ify Denoiser\r\n\r\n## Project Description\r\nAdapt the [Denoiser nuisance cleaning pipeline](https://github.com/arielletambini/denoiser) to be a Nipype workflow and use existing workflows/nodes (e.g. from Niworkflows). \r\n\r\n## Skills required to participate\r\n\r\nBasic experience with Python programming. You don't need to know Nipype already; we can learn together!\r\n\r\n## Integration\r\nIf you're not a programer, but are familiar with fMRI pre- and post-processing, you can contribute by helping to test the code on your data, helping to write documentation, and by suggesting ideas of new features you would like to see included in future versions.\r\n\r\n## Preparation material\r\n- [Nipype tutorials](https://miykael.github.io/nipype_tutorial/).\r\n\r\n## Link to your GitHub repo\r\n- [Original Denoiser repo](https://github.com/arielletambini/denoiser).\r\n- [My fork of Denoiser](https://github.com/danlurie/denoiser).\r\n\r\n## Communication\r\nIf there's interest in collaborating, reply here and we'll set up a channel on Mattermost!\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/90/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 2,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/90/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/89",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/89/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/89/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/89/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/89",
        "id": 452911771,
        "node_id": "MDU6SXNzdWU0NTI5MTE3NzE=",
        "number": 89,
        "title": "BIDS Execution spec / BIDS Apps 2.0",
        "user": {
            "login": "effigies",
            "id": 83442,
            "node_id": "MDQ6VXNlcjgzNDQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/83442?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/effigies",
            "html_url": "https://github.com/effigies",
            "followers_url": "https://api.github.com/users/effigies/followers",
            "following_url": "https://api.github.com/users/effigies/following{/other_user}",
            "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/effigies/subscriptions",
            "organizations_url": "https://api.github.com/users/effigies/orgs",
            "repos_url": "https://api.github.com/users/effigies/repos",
            "events_url": "https://api.github.com/users/effigies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/effigies/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717442,
                "node_id": "LA_kwDOCUpq1c8AAAABF1miAg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/tools:BIDS",
                "name": "tools:BIDS",
                "color": "0052cc",
                "default": false,
                "description": ""
            },
            {
                "id": 4850410522,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtkGg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/BIDS",
                "name": "BIDS",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-06-06T08:58:37Z",
        "updated_at": "2022-11-28T16:18:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# BIDS Execution spec / BIDS Apps 2.0\r\n\r\n## Project Description\r\n\r\n\r\nI have the start of a draft here: https://docs.google.com/document/d/104HLZedFtx0TaXEUwd7eyWvJUlc0CcSUtCzwjNgmGxE/edit#heading=h.4k1noo90gelw\r\n\r\nIt's based on some notes here: https://docs.google.com/document/d/1NQe5qP0VdfqPI5nl2cIQKzii70ndpPJEzemzK4qn6uY/edit#heading=h.usmuhelpi8fq\r\n\r\n## Skills required to participate\r\n\r\nReading and writing.\r\n\r\n<!-- BIDS -->\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/89/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/89/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/88",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/88/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/88/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/88/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/88",
        "id": 452910926,
        "node_id": "MDU6SXNzdWU0NTI5MTA5MjY=",
        "number": 88,
        "title": "Tutorials for manipulating neuroimaging data in Python (nibabel)",
        "user": {
            "login": "effigies",
            "id": 83442,
            "node_id": "MDQ6VXNlcjgzNDQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/83442?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/effigies",
            "html_url": "https://github.com/effigies",
            "followers_url": "https://api.github.com/users/effigies/followers",
            "following_url": "https://api.github.com/users/effigies/following{/other_user}",
            "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/effigies/subscriptions",
            "organizations_url": "https://api.github.com/users/effigies/orgs",
            "repos_url": "https://api.github.com/users/effigies/repos",
            "events_url": "https://api.github.com/users/effigies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/effigies/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717336,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhmA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 4686717369,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhuQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_type:documentation",
                "name": "project_type:documentation",
                "color": "c5def5",
                "default": false,
                "description": ""
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406962,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWMg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRtrix",
                "name": "MRtrix",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850409556,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtgVA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Nipype",
                "name": "Nipype",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850534752,
                "node_id": "LA_kwDOCUpq1c8AAAABIR1JYA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Jupyter",
                "name": "Jupyter",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-06-06T08:56:48Z",
        "updated_at": "2022-11-28T16:53:57Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Tutorials for manipulating neuroimaging data in Python\r\n\r\n## Project Description\r\n\r\nA large number of file formats used in neuromaging analysis have Python support (many of them in [nibabel](https://github.com/nipy/nibabel), although a number of one-off packages exist). However, documentation may be missing or difficult to find. A useful resource would be a consolidated set of tutorials that walk through loading, modifying, creating, saving and visualizing files.\r\n\r\nIf you have experience with a file format you'd like to share, cool. If you have a file format you want to learn to work with, we can explore them in Jupyter notebooks, and turn those explorations into tutorials.\r\n\r\n## Skills required to participate\r\nAt least one of these would be good to have:\r\n\r\n1) Python (especially Python 3) and [numpy](https://docs.scipy.org/doc/numpy/) experience.\r\n2) Experience working with at least one neuroimaging data format.\r\n\r\nBut neither is necessary.\r\n\r\n## Preparation material\r\n\r\nSome official (or semi-official), non-Python, documentation for existing formats (in no principled order):\r\n\r\n* [NIfTI-1](https://nifti.nimh.nih.gov/nifti-1/)\r\n* [NIfTI-2](https://nifti.nimh.nih.gov/nifti-2/)\r\n* [GIFTI](https://www.nitrc.org/projects/gifti/)\r\n* [CIFTI-2](https://www.nitrc.org/projects/cifti)\r\n* [MINC1](https://en.wikibooks.org/wiki/MINC/SoftwareDevelopment/MINC1_File_Format_Reference)\r\n* [MINC2](https://en.wikibooks.org/wiki/MINC/SoftwareDevelopment/MINC2.0_Users_Guide)\r\n* [BRIK](https://sscc.nimh.nih.gov/afni/doc/faq/39)/[HEAD](https://afni.nimh.nih.gov/pub/dist/doc/program_help/README.attributes.html)\r\n* [MGH](https://surfer.nmr.mgh.harvard.edu/fswiki/FsTutorial/MghFormat), [DICOM](https://www.dicomstandard.org/)\r\n* [TrackVis `.trk`](https://surfer.nmr.mgh.harvard.edu/fswiki/FreeSurferTrackVisTransforms)\r\n* [MRtrix `.tck`](https://mrtrix.readthedocs.io/en/latest/getting_started/image_data.html#tracks-file-format-tck)\r\n\r\nSome existing tutorials/resources:\r\n\r\n* [NiBabel 101](https://www.youtube.com/watch?v=9ffUQo2mF6w&list=PLNt4AJV1JZbfq0vdD4vcITV7x3OqGxLKp&t=0s&index=4) ([notebook](https://github.com/Brainhack-AMX/Brainhacking-101/blob/master/NiBabel%20101.ipynb)) covers NIfTI-1 images\r\n* From the [2017 Nipype workshop](https://nipy.org/workshops/2017-03-boston/index.html):\r\n  * Using Python for neuroimaging](https://github.com/nipy/workshops/blob/master/170327-nipype/notebooks/nibabel_nilearn/nibabel_nilearn.ipynb)\r\n  * [Surface plotting example](https://github.com/nipy/workshops/blob/master/170327-nipype/notebooks/nibabel_nilearn/plot-surfs.ipynb)\r\n\r\nNon-nibabel software:\r\n\r\n* [pdb_files](https://github.com/vistalab/pdb_files)\r\n* [pydicom](https://pydicom.github.io/pydicom/stable/)\r\n\r\nI'll add any suggestions others have. Especially if they use non-NIfTI-1 formats.\r\n\r\nProvide links to preparation material / online tutorials. You can, for example, have a look at our [list of online tutorials](Tutorial_Resources.md).\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/88/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/88/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/87",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/87/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/87/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/87/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/87",
        "id": 452910547,
        "node_id": "MDU6SXNzdWU0NTI5MTA1NDc=",
        "number": 87,
        "title": "Intro do Pydra tutorial",
        "user": {
            "login": "djarecka",
            "id": 1662746,
            "node_id": "MDQ6VXNlcjE2NjI3NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1662746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djarecka",
            "html_url": "https://github.com/djarecka",
            "followers_url": "https://api.github.com/users/djarecka/followers",
            "following_url": "https://api.github.com/users/djarecka/following{/other_user}",
            "gists_url": "https://api.github.com/users/djarecka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djarecka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djarecka/subscriptions",
            "organizations_url": "https://api.github.com/users/djarecka/orgs",
            "repos_url": "https://api.github.com/users/djarecka/repos",
            "events_url": "https://api.github.com/users/djarecka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djarecka/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4850409556,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtgVA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Nipype",
                "name": "Nipype",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850534752,
                "node_id": "LA_kwDOCUpq1c8AAAABIR1JYA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Jupyter",
                "name": "Jupyter",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-06-06T08:55:56Z",
        "updated_at": "2022-11-28T16:54:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Creating a short tutorial for a new workflow engine [Pydra](https://github.com/nipype/pydra) that will be used by new Nipype.\r\n\r\nWe will use Jupyter Notebook.",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/87/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/87/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/86",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/86/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/86/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/86/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/86",
        "id": 452910243,
        "node_id": "MDU6SXNzdWU0NTI5MTAyNDM=",
        "number": 86,
        "title": "survey of github repos in pubmed",
        "user": {
            "login": "riddlet",
            "id": 4789331,
            "node_id": "MDQ6VXNlcjQ3ODkzMzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4789331?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/riddlet",
            "html_url": "https://github.com/riddlet",
            "followers_url": "https://api.github.com/users/riddlet/followers",
            "following_url": "https://api.github.com/users/riddlet/following{/other_user}",
            "gists_url": "https://api.github.com/users/riddlet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/riddlet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/riddlet/subscriptions",
            "organizations_url": "https://api.github.com/users/riddlet/orgs",
            "repos_url": "https://api.github.com/users/riddlet/repos",
            "events_url": "https://api.github.com/users/riddlet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/riddlet/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-06-06T08:55:21Z",
        "updated_at": "2022-11-28T16:55:05Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Survey of github repos in pubmed\r\n\r\n## Project Description\r\n\r\nGithub is increasingly becoming a tool of choice for computational-oriented research. There have been plenty of efforts to get scientists to make use of this valuable tool, but to my awareness there hasn't been any attempt to evaluate how scientists use this resource.\r\n\r\nI pulled full-texts from pubmed and searched them for the presence of the string 'github' and found a bit over 20k papers that contained this string. Using these texts plus the github api I think we could provide some insight to the following:\r\n\r\n1) How many scientific repos contain a README?\r\n2) How often do often to repos contain files that are likely to be data (e.g. csv, json)\r\n3) What are the most popular types of analytic scripts (e.g. .py, .R, .ipynb, etc)?\r\n4) How do the above vary by research area?\r\n\r\n## Skills required to participate\r\n\r\nideally, experience with python or R & web-based APIs. Text analysis experience would be helpful.\r\n\r\n## Integration\r\nTBA\r\n\r\n## Preparation material\r\n\r\n[BioC API](https://www.ncbi.nlm.nih.gov/research/bionlp/APIs/BioC-PubMed/)\r\n\r\n[github API](https://developer.github.com/v3/)\r\n\r\n## Link to your GitHub repo\r\nhttps://github.com/riddlet/gitpubs\r\n\r\n## Communication\r\nWe have a mattermost channel at https://mattermost.brainhack.org/brainhack/channels/gitpubs",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/86/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/86/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/85",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/85/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/85/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/85/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/85",
        "id": 452906079,
        "node_id": "MDU6SXNzdWU0NTI5MDYwNzk=",
        "number": 85,
        "title": "Automated Web-Reports for a FreeSurfer Subjects Directory",
        "user": {
            "login": "seldamat",
            "id": 1558845,
            "node_id": "MDQ6VXNlcjE1NTg4NDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1558845?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seldamat",
            "html_url": "https://github.com/seldamat",
            "followers_url": "https://api.github.com/users/seldamat/followers",
            "following_url": "https://api.github.com/users/seldamat/following{/other_user}",
            "gists_url": "https://api.github.com/users/seldamat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seldamat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seldamat/subscriptions",
            "organizations_url": "https://api.github.com/users/seldamat/orgs",
            "repos_url": "https://api.github.com/users/seldamat/repos",
            "events_url": "https://api.github.com/users/seldamat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seldamat/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717336,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhmA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 4686717369,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhuQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_type:documentation",
                "name": "project_type:documentation",
                "color": "c5def5",
                "default": false,
                "description": ""
            },
            {
                "id": 4850417282,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt-gg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Java",
                "name": "Java",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-06-06T08:46:34Z",
        "updated_at": "2022-11-28T16:48:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Surfer Web-Gems\r\n[Demo](https://seldamat.github.io/Surfer-webgems/)\r\n\r\n## Project Description\r\n\r\nThis software in development takes a FreeSurfer subjects directory, runs some summary routines, spits out meta-information to screen/tsv, compiles papaya web viewers for each subject, and generates a folder of html files running the papaya js to show individual subject brainmasks, edits, atlases, parcellations etc. etc. and across-subject summaries (SNR/p(edit voxel)/morphometrics).\r\n\r\nThis project was somewhat sloppily developed in bits and pieces over the period of a year and needs a bit of consolidation and help from individuals with software packaging experience (I'm a bit of a novice).\r\n\r\n## Skills required to participate\r\nExperience with nipype\r\nStructural imaging (freesurfer?)\r\nBash scripting?\r\nJava scripting\r\n\r\nNeed someone to help compile surface viewers to embed in HTML hereto docs.\r\n\r\n## Integration\r\n\r\nThis package would help groups easily parse output and summary statistics of the FreeSurfer pipeline for large datasets, aiding neurologists, clinicians and scientists to easily parse and view data.\r\n\r\n### Some goals\r\nEverything is was slapped/taped/glued together using bash as a wrapper for calls to various neuroimaging softwares and using HERETO documents to automatically generate HTML webpages.  A bit of clean-up, integration with python, documentation and expansion of functionality are the immediate goals (roughly in that order).\r\n \r\n- Rewrite FreeSurfer subject's directory summaries using nipype\r\n- Consolidate all functions and calls into a singular repository (this bridges two right now)\r\n- Output meta-analytic data to JSON rather tsv\r\n- Complete cross-subject summaries\r\n- Add 3D surface viewers for pial/white surfaces with thickness/morphometric overlay\r\n\r\n## Preparation material\r\n\ud83e\udd37\u200d\u2642\ufe0f\ud83e\udd37\u200d\u2642\ufe0f\ud83e\udd37\u200d\u2642\ufe0f\ud83e\udd37\u200d\u2642\ufe0f\r\n\r\n## Link to your GitHub repo\r\n[Surfer-webgems](https://github.com/seldamat/Surfer-webgems)\r\n[Dependent on Surfer-gems](git clone https://github.com/seldamat/Surfer-gems.git)\r\n\r\n## Communication\r\n[![slack_brainhack_3](https://user-images.githubusercontent.com/6297454/47951457-5b37b780-df61-11e8-9d77-7b5a4c7af875.png)](https://mattermost.brainhack.org/brainhack/channels/surfer-webgems) \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/85/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/85/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/84",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/84/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/84/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/84/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/84",
        "id": 452905375,
        "node_id": "MDU6SXNzdWU0NTI5MDUzNzU=",
        "number": 84,
        "title": "TestKraken and Niflow",
        "user": {
            "login": "djarecka",
            "id": 1662746,
            "node_id": "MDQ6VXNlcjE2NjI3NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1662746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djarecka",
            "html_url": "https://github.com/djarecka",
            "followers_url": "https://api.github.com/users/djarecka/followers",
            "following_url": "https://api.github.com/users/djarecka/following{/other_user}",
            "gists_url": "https://api.github.com/users/djarecka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djarecka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djarecka/subscriptions",
            "organizations_url": "https://api.github.com/users/djarecka/orgs",
            "repos_url": "https://api.github.com/users/djarecka/repos",
            "events_url": "https://api.github.com/users/djarecka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djarecka/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-06-06T08:45:03Z",
        "updated_at": "2022-11-28T16:47:57Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I will be working on integration of [TestKraken](https://github.com/ReproNim/testkraken), a framework for regression testing, with [Niflow package manager tool](https://github.com/niflows/niflow-manager): a tool for packaging and sharing workflows.\r\n\r\n- [Niflow presentation](https://effigies.github.io/niflows-intro/#1)\r\n- [TestKraken presentation](https://github.com/nipype/coco2019-training/blob/master/presentations/testkraken.pdf)",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/84/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/84/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/83",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/83/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/83/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/83/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/83",
        "id": 452643692,
        "node_id": "MDU6SXNzdWU0NTI2NDM2OTI=",
        "number": 83,
        "title": "Tests for AFNI code?",
        "user": {
            "login": "leej3",
            "id": 5418152,
            "node_id": "MDQ6VXNlcjU0MTgxNTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5418152?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leej3",
            "html_url": "https://github.com/leej3",
            "followers_url": "https://api.github.com/users/leej3/followers",
            "following_url": "https://api.github.com/users/leej3/following{/other_user}",
            "gists_url": "https://api.github.com/users/leej3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leej3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leej3/subscriptions",
            "organizations_url": "https://api.github.com/users/leej3/orgs",
            "repos_url": "https://api.github.com/users/leej3/repos",
            "events_url": "https://api.github.com/users/leej3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leej3/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717336,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhmA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 4686717369,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhuQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_type:documentation",
                "name": "project_type:documentation",
                "color": "c5def5",
                "default": false,
                "description": ""
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850515871,
                "node_id": "LA_kwDOCUpq1c8AAAABIRz_nw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/containerization",
                "name": "containerization",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850515874,
                "node_id": "LA_kwDOCUpq1c8AAAABIRz_og",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/AFNI",
                "name": "AFNI",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-06-05T18:10:25Z",
        "updated_at": "2022-11-28T16:48:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "\r\n# Tests for AFNI code?\r\n\r\n## Project Description\r\n\r\nYes they do exist. Currently our report coverage from codecov is a whopping 5%. I'd like to increase this. Let's aim for increasing the coverage by 8.2%!\r\n\r\nSince AFNI is blend of several programming languages, testing the various programs as executables seems like a sensible way to expand the tests to give some basic guarantee of stable functionality across the software suite. I have written some code to facilitate this and would now love some help increasing the test coverage/improving the approach. I have added a few issues to the AFNI github repo (with the \"Testing\") as some example hack items in addition to specifically adding more tests. \r\n\r\n## Skills required to participate\r\n\r\nLots of different parts of this so all are welcome.\r\n\r\n*Beginners*: For beginners there is some opportunies to help write documentation and learn a little about software testing, continuous integration, containerization, and the AFNI neuroimaging analysis software suite in general.\r\n\r\n*Neuroimaging scientists* With some basic python/bash skills a beginner will be able to add tests for any tool. Although not required, the more domain specific knowledge here the better. Having intuitions for what each tool \"should\" be doing without reading through docs etc. will speed up the process.\r\n\r\n*Pythonistas* Some help would be greatly appreciated from more advance python developers (even just dropping by to give some advice). There are some details to the execution of the  tests - for example datalad is used to store saved sample output data - that could do with testing to help with the endeavour. Likely such tests would require experience with mocking and comfort with git/git-annex/datalad.\r\n\r\n## Integration\r\n\r\nMilestones:\r\n+ Increase the testing coverage by 8.2%\r\n+ Increase the testing coverage by another 16.4%\r\n\r\n\r\n## Preparation material\r\nAn overview of adding the tests is [here](https://docs.google.com/document/d/1j8DxfA215sxC77Spcn_Ap0Xd8QYY3CBFCeL6jkxA-RU/edit)\r\n\r\n## Link to your GitHub repo\r\n[The afni codebase](https://github.com/afni/afni)  \r\n\r\n## Communication\r\nThe [matter most channel](https://mattermost.brainhack.org/brainhack/channels/tests_for_afni)\r\nAlso use the testing label in the [github issues](https://github.com/afni/afni/issues?q=is%3Aissue+is%3Aopen+label%3ATesting)",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/83/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/83/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/82",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/82/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/82/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/82/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/82",
        "id": 452522353,
        "node_id": "MDU6SXNzdWU0NTI1MjIzNTM=",
        "number": 82,
        "title": "Misfolded Protein spreading through connectome",
        "user": {
            "login": "alecrimi",
            "id": 16406658,
            "node_id": "MDQ6VXNlcjE2NDA2NjU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/16406658?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alecrimi",
            "html_url": "https://github.com/alecrimi",
            "followers_url": "https://api.github.com/users/alecrimi/followers",
            "following_url": "https://api.github.com/users/alecrimi/following{/other_user}",
            "gists_url": "https://api.github.com/users/alecrimi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alecrimi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alecrimi/subscriptions",
            "organizations_url": "https://api.github.com/users/alecrimi/orgs",
            "repos_url": "https://api.github.com/users/alecrimi/repos",
            "events_url": "https://api.github.com/users/alecrimi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alecrimi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406968,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWOA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/diffusion",
                "name": "diffusion",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850416369,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt68Q",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/FSL",
                "name": "FSL",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850516145,
                "node_id": "LA_kwDOCUpq1c8AAAABIR0AsQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/PET",
                "name": "PET",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850516153,
                "node_id": "LA_kwDOCUpq1c8AAAABIR0AuQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/connectome",
                "name": "connectome",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-06-05T14:07:45Z",
        "updated_at": "2022-11-28T16:48:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Misfolded protein spreading through brain connectome\r\n\r\n## Project Description\r\n\r\nConnectomics have been used so far to look for quantifying global and local differences in the functional or structural brain networks, or alternatively, to simulate/study brain hemodynamics. Very few studies have used connectomes to investigate the spreading of misfolded proteins which is at the basis of Parkinson\u2019s (PD) and Alzheimer\u2019s disease (AD). It is believed that diseases as AD and PD are spread by misfolded proteins or agents which moves along brain connections (axons and dendrides of the neurons) starting from specific regions to others. For instance, AD has a progression of tau pathology consistently beginning in the entorhinal cortex, the locus coeruleus, and other nearby noradrenergic brainstem nuclei, before spreading to the rest of the limbic system as well as the cacingulate and retrosplenial cortices. While Parkinsons starts from the brainstem and spread to the neocortex. A previous study investigated this mechanism on connectome comparing simulated tau deposits on connectome to those detected by PET scans specific for Alzheimer\u2019s. In this project, we aim at carrying out a similar study but for PD relating to brain atrophy. In particular, we want to simulate deposits/spreading of alpha-syn proceeding via the brain\u2019s anatomic connectivity network. We will use human and mice data provided by the supervisors. The main challenge of the project is defining a proper model of spreading along the connectome. Data from the ADNI and PPMI dataset and given by the project supervisors will be given. Those include case (PD and AD patients) and control subjects along with clinical data and genetics (see below).\r\nCurrent challenges also include proper brain extraction (E.g. FSL BET) of PET data. \r\n\r\n## Skills required to participate\r\n\r\nPython : coders \r\nGenetic data: people who can handle SNP dataset\r\nMathematics: people who can manage dynamical models, heat equation and so on\r\n\r\n## Integration\r\nHow would your project integrate a neuroimager/clinician/psychologist/computational scientist/maker/artist as collaborator? \r\nWe want to simulate pathological brian disease comparing simulation of pathogen agents on structual connectomes to known neuroimaging markers as brain-atrophy and deposits from PET data.\r\n\r\nTry to define intermediate goals (milestones).  \r\n1. Compare simulations on Parkinson data  to brain atrophy (after checking that the atrophy has been obtained properly)\r\n2. Compare simulations on Alzheimer data  to BetaAmyloid PET deposits (after checking that the deposits has been obtained properly)\r\n3. Develop or improve existing spreading models.\r\n\r\n## Preparation material\r\n1. Crimi and Kara \"SPREADING MODEL FOR PATIENTS WITH PARKINSON'S DISEASE BASED ON CONNECTIVITY DIFFERENCES\" IEEE ISBI 2019,\r\nhttps://www.researchgate.net/publication/333583009_SPREADING_MODEL_FOR_PATIENTS_WITH_PARKINSON%27S_DISEASE_BASED_ON_CONNECTIVITY_DIFFERENCES\r\n\r\n2. Iturria-Medina, Yasser, et al. \u201cEpidemic spreading model to characterize misfolded proteins propagation in aging and associated neurodegenerative disorders.\u201d PLoS computational biology 10.11 (2014): e1003956. https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1003956\r\n3. Raj, Ashish, Amy Kuceyeski, and Michael Weiner. \u201cA network diffusion model of disease progression in dementia.\u201d Neuron73.6 (2012): 1204-1215. https://www.sciencedirect.com/science/article/pii/S0896627312001353\r\n4. H. Braak et al., \u201cStaging of brain pathology related to sporadic Parkinsons disease,\u201d Neurobiology of aging, vol. 24, no. 2, pp. 197\u2013211, 2003. https://www.sciencedirect.com/science/article/pii/S0197458002000659\r\n\r\n## Link to your GitHub repo\r\nStarting stuff to use:\r\nhttps://github.com/alecrimi/misfoldedproiteins_connectome\r\n\r\n## Communication\r\nSlack channel: https://mattermost.brainhack.org/brainhack/channels/misfoldedproteins\r\n![isbi_poster](https://user-images.githubusercontent.com/16406658/58962576-d4bfae80-87ab-11e9-9a99-c749e5ace4fb.jpg)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/82/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 1,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/82/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/81",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/81/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/81/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/81/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/81",
        "id": 452480919,
        "node_id": "MDU6SXNzdWU0NTI0ODA5MTk=",
        "number": 81,
        "title": "Explorative analysis of fetal cortical surface data",
        "user": {
            "login": "MrBurnst",
            "id": 4426897,
            "node_id": "MDQ6VXNlcjQ0MjY4OTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4426897?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MrBurnst",
            "html_url": "https://github.com/MrBurnst",
            "followers_url": "https://api.github.com/users/MrBurnst/followers",
            "following_url": "https://api.github.com/users/MrBurnst/following{/other_user}",
            "gists_url": "https://api.github.com/users/MrBurnst/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MrBurnst/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MrBurnst/subscriptions",
            "organizations_url": "https://api.github.com/users/MrBurnst/orgs",
            "repos_url": "https://api.github.com/users/MrBurnst/repos",
            "events_url": "https://api.github.com/users/MrBurnst/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MrBurnst/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4850406950,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWJg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRI",
                "name": "MRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850516555,
                "node_id": "LA_kwDOCUpq1c8AAAABIR0CSw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Brainstorm",
                "name": "Brainstorm",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-06-05T12:45:37Z",
        "updated_at": "2022-11-28T16:48:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Explorative analysis of fetal cortical surface data\r\n\r\n## Project Description\r\n\r\nUnderstanding the maturation of the human brain from a smooth surface to its highly convoluted state at birth is an essential quest in the field of neuroscience. In the last decade the development of fast MR imaging protocols and advanced image processing methods has enabled imaging of the fetal brain at unprecedented detail. However, data availability is very limited due to comparatively rare examinations, small study sizes and high population variability.  \r\n \r\nIn the spirit of open and repeatable research, we present the preliminary release of a dataset of 33 pre-processed MRI acquisitions of healthy fetal brains of 26 individuals imaged between GW 20 and GW 36. Furthermore, we provide cortical surface models human fetal cerebral hemispheres consisting of densely sampled surface triangulations that are matched between hemispheres and across time to serve as a standardized reference frame for surface-based analysis of cerebral development in utero.\r\n\r\nDuring the hackaton, I'd welcome anyone interested to do so to get in touch and bounce around ideas how to get the most out of this data.\r\n\r\n## Skills required to participate\r\n\r\nSince this is a very open project, people with all type of skills can contribute, but experience with visualization and maybe computational geometry might come in handy. \r\n\r\n## Aims\r\nBrainstorming on how to visualize and interpret the growth of the fetal brain in utero and what methods to apply for fun and profit.\r\n\r\n## Data availability\r\nUnfortunately, I cannot (yet) put the data online - people interested in working on it will have to provide their names and contact email and I will provide a download link.\r\n\r\n## Communication\r\nhttps://mattermost.brainhack.org/brainhack/channels/ohbm19_hackaton_fetal",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/81/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/81/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/80",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/80/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/80/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/80/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/80",
        "id": 452385932,
        "node_id": "MDU6SXNzdWU0NTIzODU5MzI=",
        "number": 80,
        "title": "Generating BIDS derivatives with (a) Banana",
        "user": {
            "login": "tclose",
            "id": 1054870,
            "node_id": "MDQ6VXNlcjEwNTQ4NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1054870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tclose",
            "html_url": "https://github.com/tclose",
            "followers_url": "https://api.github.com/users/tclose/followers",
            "following_url": "https://api.github.com/users/tclose/following{/other_user}",
            "gists_url": "https://api.github.com/users/tclose/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tclose/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tclose/subscriptions",
            "organizations_url": "https://api.github.com/users/tclose/orgs",
            "repos_url": "https://api.github.com/users/tclose/repos",
            "events_url": "https://api.github.com/users/tclose/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tclose/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717336,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhmA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 4686717369,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhuQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_type:documentation",
                "name": "project_type:documentation",
                "color": "c5def5",
                "default": false,
                "description": ""
            },
            {
                "id": 4686717373,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhvQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_tools_skills:expert",
                "name": "project_tools_skills:expert",
                "color": "c2e0c6",
                "default": false,
                "description": ""
            },
            {
                "id": 4686717374,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhvg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_tools_skills:familiar",
                "name": "project_tools_skills:familiar",
                "color": "c2e0c6",
                "default": false,
                "description": ""
            },
            {
                "id": 4850406950,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWJg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRI",
                "name": "MRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850409556,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtgVA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Nipype",
                "name": "Nipype",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850410522,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtkGg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/BIDS",
                "name": "BIDS",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850416740,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt8ZA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/EEG",
                "name": "EEG",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850416741,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt8ZQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MEG",
                "name": "MEG",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-06-05T08:54:23Z",
        "updated_at": "2022-11-28T16:48:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Generating BIDS derivatives with (a) Banana\r\n\r\n## Project Description\r\n\r\n_Brain imAgiNg Analysis iN Arcana (Banana)_ is a collection of imaging analysis methods implemented in the [Arcana framework](https://www.biorxiv.org/content/10.1101/447649v3), and is proposed as a code-base for collaborative development of neuroimaging workflows. Unlike traditional \"linear\" workflows, analyses implemented in Arcana are constructed on-the-fly from cascades of modular pipelines that generate derivatives from a mixture of acquired data and prequisite derivatives (similar to Makefiles). Given the \"data-centric\" architecture of this approach, there should be a natural harmony between it and the ongoing standardisation of BIDS derivatives.\r\n\r\nThe primary goal of this project is to closely align the analysis methods implemented in Banana with the BIDS standard, in particular BIDS derivatives, in order to make them familiar to new users and interoperable with other packages. Further to this, in cases where a _de facto_ standard for a particular \r\nworkflow exists (e.g. fmriprep) Banana should aim to mirror this standard by default. The extensibility of Arcana's object-orientated architecture could then be utilised to tailor such standard workflows to the needs of specific studies (via class inheritance).\r\n\r\nThere is also plenty of scope to expand the imaging contrasts/modalities supported by Banana, so if you have expertise in a particular area and are interested in implementing it in Banana we can definitely look to do that as well. \r\n\r\n## Skills required to participate\r\n\r\n***Any*** of the following:\r\n\r\n* Python\r\n* Workflow design (preferably some Nipype but not essential)\r\n* Detailed knowledge BIDS specification (or part thereof)\r\n* Domain-specific knowlege of analysis of a particular imaging modality that\r\n  you would like to see implemented in Banana (e.g. EEG, MEG, etc..)\r\n\r\n## Integration\r\n\r\n* Python programmers and workflow designers who are looking to implement and maintain a suite of generic analysis methods should be able to help extend existing classes and implement new ones for different imaging contrast/modalities not currently covered.\r\n* Domain-experts (e.g. EEG, MEG, pre-clinical MRI) who a interested implementing existing workflows within in a portable, extensible framework could help to guide the implementation, check the derivatives they create are correct, etc...\r\n* 1st and 2nd year PhD students who are planning the analysis for their thesis, could look to create their own customised \"study\" classes that extend from the generic base classes in Banana to integrate all their analysis in the same code-base (and re-use common derivatives/QC, maintain provenance records). \r\n\r\n## Preparation material\r\n\r\nSkim through the Arcana paper for the basic concepts,\r\n\r\n[Arcana BioXiv paper](https://www.biorxiv.org/content/10.1101/447649v3) (_in press_  _Neuroinformatics_, to be [10.1007/s12021-019-09430-1](https://doi.org/10.1007/s12021-019-09430-1))\r\n\r\nThere is also some online documentation,\r\n\r\n[arcana docs](http://arcana.readthedocs.io)\r\n\r\nArcana is built on top of Nipype so understanding Nipype concepts would also be useful,\r\n\r\n[nipype docs](https://nipype.readthedocs.io)\r\n\r\n## Link to your GitHub repo\r\n\r\n[Banana Github Repo](https://github.com/MonashBI/banana)\r\n\r\n## Communication\r\n\r\nThere is a new channel on the BrainHack mattermost [here](https://mattermost.brainhack.org/brainhack/channels/banana)",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/80/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/80/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/79",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/79/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/79/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/79/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/79",
        "id": 452378089,
        "node_id": "MDU6SXNzdWU0NTIzNzgwODk=",
        "number": 79,
        "title": "Extending Nobrainer and neuronets org - deep learning MR models",
        "user": {
            "login": "satra",
            "id": 184063,
            "node_id": "MDQ6VXNlcjE4NDA2Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/184063?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/satra",
            "html_url": "https://github.com/satra",
            "followers_url": "https://api.github.com/users/satra/followers",
            "following_url": "https://api.github.com/users/satra/following{/other_user}",
            "gists_url": "https://api.github.com/users/satra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/satra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/satra/subscriptions",
            "organizations_url": "https://api.github.com/users/satra/orgs",
            "repos_url": "https://api.github.com/users/satra/repos",
            "events_url": "https://api.github.com/users/satra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/satra/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 15,
        "created_at": "2019-06-05T08:36:56Z",
        "updated_at": "2022-11-28T16:53:15Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "# Extending Nobrainer - a deep learning framework for neuroimaging\r\n\r\n## Project Description\r\n\r\n[Nobrainer](https://github.com/neuronets/nobrainer) is a tensorflow 2.0 based framework for creating and distributing neural network models for MR image processing. The goal of this project is to discuss the structure of Nobrainer and to make it easy for people to create and [publish reusable models](https://github.com/neuronets/nobrainer-models). Some of the recent work has focused on [generative models for MR](https://docs.google.com/presentation/d/1Tt83AdCsIlU_VlzVv91canZBGev1uNZZ-R_GpM6yIF8/edit#slide=id.g58973cc7e9_0_263).\r\n\r\n## Skills required to participate\r\n\r\n- Python\r\n- Tensorflow 2.0 (Keras layers)\r\n- MR image processing\r\n\r\n## Integration\r\nHow would your project integrate a neuroimager/clinician/psychologist/computational scientist/maker/artist as collaborator?\r\n\r\nWe would love for individuals to post issues describing use cases, feature requests, and contribute code or new models to the project.\r\n\r\nTry to define intermediate goals (milestones).  \r\n- Increase trained models provided by nobrainer\r\n- Increase baseline architectures available\r\n- Provide model comparison\r\n\r\n## Preparation material\r\nIn addition to the code repo, these notebooks are intended to help guide individuals:\r\n\r\nhttps://github.com/neuronets/nobrainer#guide-jupyter-notebooks-\r\n\r\n## Link to your GitHub repo\r\nhttps://github.com/neuronets\r\n\r\n## Communication\r\nIssues on github repo\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/79/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/79/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/78",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/78/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/78/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/78/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/78",
        "id": 452370673,
        "node_id": "MDU6SXNzdWU0NTIzNzA2NzM=",
        "number": 78,
        "title": "Neurofeedback in Python - how to transform Pyff (stimulus delivery) from the old Python 2 into the new Python 3 Realm.",
        "user": {
            "login": "jnvandermeer",
            "id": 2698152,
            "node_id": "MDQ6VXNlcjI2OTgxNTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2698152?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnvandermeer",
            "html_url": "https://github.com/jnvandermeer",
            "followers_url": "https://api.github.com/users/jnvandermeer/followers",
            "following_url": "https://api.github.com/users/jnvandermeer/following{/other_user}",
            "gists_url": "https://api.github.com/users/jnvandermeer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jnvandermeer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jnvandermeer/subscriptions",
            "organizations_url": "https://api.github.com/users/jnvandermeer/orgs",
            "repos_url": "https://api.github.com/users/jnvandermeer/repos",
            "events_url": "https://api.github.com/users/jnvandermeer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jnvandermeer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717336,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhmA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 4686717369,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhuQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_type:documentation",
                "name": "project_type:documentation",
                "color": "c5def5",
                "default": false,
                "description": ""
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-06-05T08:19:21Z",
        "updated_at": "2022-11-28T16:53:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Neurofeedback in Python - how to transform Pyff (stimulus delivery) from the old Python 2 into the new Python 3 Realm.\r\n\r\n\r\n## Background\r\n\r\nPyff is a Python module that can be combined with Psychopy to perform Neurofeedback experiments. Pyff can load in and run stimulus paradigms and communicate via TCP/IP to other computers to update stimuli in real-time. In order to do so, it starts up a seeparate process with a main thread (since all screen refresh/3D/graphical stuff needs to be in a main thread), and a separate thread that monitors incoming network traffic.\r\n\r\nThis spearate thread relies heavily on asyncio/asynchat to prevent the that thread from killing itself if something goes wrong with the network traffic part (which usually does). Asynchat/Asyncio is a type of asynchronous programming where the interpreter can continue with other code while one line dealing with network traffic is waiting. Asynchronous programming has underdone many iterations, and one of the major one is that it is now implemented in python 3's async module and asyncio/asynchat no longer exists in favor of the more general async module. \r\n\r\nThe documentation is however quite bad. The work I propose is to take a look to see if pyff python 2's asyncio/asynchat can be deciphered into equivalent async code, and furthermore to more fully convert pyff into the python 3 realm.\r\n\r\n## knowledge\r\n\r\nPreferably something about async programming\r\n\r\n\r\n## github repository\r\nhttps://github.com/jnvandermeer/nf-stim-review\r\n2to3 program\r\n\r\n\r\nThis would be a good match for the traintrack python2 to python3 issue raised earlier (issue #25)",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/78/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/78/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/77",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/77/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/77/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/77/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/77",
        "id": 452369472,
        "node_id": "MDU6SXNzdWU0NTIzNjk0NzI=",
        "number": 77,
        "title": "Neurofeedback in Python",
        "user": {
            "login": "jnvandermeer",
            "id": 2698152,
            "node_id": "MDQ6VXNlcjI2OTgxNTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2698152?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnvandermeer",
            "html_url": "https://github.com/jnvandermeer",
            "followers_url": "https://api.github.com/users/jnvandermeer/followers",
            "following_url": "https://api.github.com/users/jnvandermeer/following{/other_user}",
            "gists_url": "https://api.github.com/users/jnvandermeer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jnvandermeer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jnvandermeer/subscriptions",
            "organizations_url": "https://api.github.com/users/jnvandermeer/orgs",
            "repos_url": "https://api.github.com/users/jnvandermeer/repos",
            "events_url": "https://api.github.com/users/jnvandermeer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jnvandermeer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850416740,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt8ZA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/EEG",
                "name": "EEG",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-06-05T08:16:17Z",
        "updated_at": "2022-11-28T16:53:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Neurofeedback in Python - the need for speed\r\n\r\n\r\n## Background\r\n\r\nIn EEG neurofeedback timing is perhaps not always so cricial that feedback needs to happen within < 1 miliseconds (for that you'd need real-time Operating systems), but it's still impotant enough that the \"Neurofeedback Loop\" need to happen relatively fast - and consistent, and in pace with the data acquisition. Lag is unavoidable and acceptable, within limits. Lag can be introduced because you need to do some mathematical operation (filtering especially), or because of Input/Output 'clogging'. Acceptable lag in EEG NF is in the order of 150-200 miliseconds, but the faster the better.\r\n\r\nProgramming in C will more likely give you that kind of speed, but making (and compiling) things in Python makes it a bit harder to communicate with the Python community, and Python should (in principle) be fast enough also for Neurofeedback purposes. There are currently (as far as I know) two main repositories of Python-based Neurofeedback software: Pyff/Wyrm, made by Bastian Venthur in 2010 (and since more-or-less abandoned). And nfb (see REF PAPER).\r\n\r\n## Issues\r\n\r\nThe issue is Lag. In python, one type of lag is due to the Global Interpreter Lock. Basically it means that python interpreter can read & interpret only one python line at a time, so all other lines have to wait their turn. So that means if you have something else that needs to be done in the neurofeedback loop - writing a file, updating your screen, keeping track of parameters, or doing an analysis while the NF loop is running, the Neurofeeback loop has to stop - or you delegate work to another python interpreter.\r\n\r\nDelegation is by python's multiprocessing module. There are other ways to do parallel evaluations with threading and asynchronous programming, but the also need to obey the GIL. Basically you start another Python session (and interpreter) - that can run on a separate core and do stuff while the main process hanles the neurofeedback loop, thereby reducing the Lag. The two processes communicate via files (bad), pipes/queues (preferred), or shared memory (probably the fastest, but care is needed).\r\n\r\nHowever... starting a Process takes time. And also, putting stuff into a queue and picking stuff out of a queue ALSO takes time. The bigger the data exchanged the longer it takes. The project I propose is to do some benchmarking/stress testing and measure how long it takes to start up a process, and how much data can you move around at what speeds, in the contesxt of some Neurofeedback and real-time processing that i've been working on. Ideally, the speed should be infinite and the lag 0 of such operations. A lag of more than 30-50 miliseconds can already tamper with the consistency of the Neurofeedback loop.\r\n\r\n## Aims\r\n- get an idea on what typical lags are when shuffling around data and delegating work\r\n- a decorator or a module for timing a typical NF experiment\r\n\r\n\r\n## Knowledge \r\nMultiprocessing, Queues, GIL\r\n\r\n\r\n## Github Repository\r\nhttps://github.com/jnvandermeer/nf-rtime-preview\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/77/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/77/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/76",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/76/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/76/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/76/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/76",
        "id": 452258859,
        "node_id": "MDU6SXNzdWU0NTIyNTg4NTk=",
        "number": 76,
        "title": "nii-masker: A command-line wrapper for nilearn's Masker tools",
        "user": {
            "login": "danjgale",
            "id": 14634382,
            "node_id": "MDQ6VXNlcjE0NjM0Mzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/14634382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danjgale",
            "html_url": "https://github.com/danjgale",
            "followers_url": "https://api.github.com/users/danjgale/followers",
            "following_url": "https://api.github.com/users/danjgale/following{/other_user}",
            "gists_url": "https://api.github.com/users/danjgale/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danjgale/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danjgale/subscriptions",
            "organizations_url": "https://api.github.com/users/danjgale/orgs",
            "repos_url": "https://api.github.com/users/danjgale/repos",
            "events_url": "https://api.github.com/users/danjgale/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danjgale/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717373,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhvQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_tools_skills:expert",
                "name": "project_tools_skills:expert",
                "color": "c2e0c6",
                "default": false,
                "description": ""
            },
            {
                "id": 4850406950,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWJg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRI",
                "name": "MRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850409552,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtgUA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/fMRI",
                "name": "fMRI",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-06-05T00:04:16Z",
        "updated_at": "2022-11-28T16:43:54Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "# nii-masker\r\n\r\n## Project Description\r\n\r\n`niimasker` is a command-line wrapper for nilearn's Masker objects, which let you easily extract out time series from your functional data (and gives you a number of options for post-processing during extraction). I'm in a lab with a number of non-Python users who would benefit greatly from this ability, and this project was a spur-of-the-moment project idea I had a couple of weeks ago when discussing my fMRI pipeline with my colleagues (we're trying to get a more standardized workflow going \u2013 fmriprep, etc). Because `niimasker` is run via the command-line, pretty much anyone with some bash knowledge can use it (or at least that's what I'm working towards). \r\n\r\nI developed much of this last week in a \"mini-sprint\" (i.e. a colleague needed data \"yesterday\"). While its core functionality is working, there's lots to be done. I've included a number of issues in the repo already: https://github.com/danjgale/nii-masker/issues. So, there are some exciting features to add (e.g., a visual report \u00e0 la fmriprep) as well as some testing/CI to set up. These outline some of the things I'd like to accomplish at the hackathon. \r\n\r\n## Skills required to participate\r\n\r\n- Any experience with Python and nilearn\r\n- Any HTML knowledge would be helpful for development of the visual report!\r\n\r\n## Integration\r\nThe goal is to create a totally intuitive tool for anyone, so all contributions from all backgrounds and perspectives are encouraged. Non-expert/technical users can contribute by providing feedback and design ideas to make `niimasker` more approachable and user-friendly. \r\n\r\n## Preparation material\r\n\r\n- [Nilearn\u2019s user guide](https://nilearn.github.io/user_guide.html ), in particular the [masker guide](https://nilearn.github.io/manipulating_images/masker_objects.html)\r\n- [argparse info](https://docs.python.org/3/howto/argparse.html)\r\n- The project's README\r\n\r\n## Link to your GitHub repo\r\n\r\nhttps://github.com/danjgale/nii-masker/\r\n\r\n## Communication\r\nI can set up a channel on the brainhack mattermost/slack if this gains interest. I would also like to keep a lot of conversation \"in the open\" directly in github issues as well. \r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/76/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/76/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/75",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/75/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/75/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/75/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/75",
        "id": 452089169,
        "node_id": "MDU6SXNzdWU0NTIwODkxNjk=",
        "number": 75,
        "title": "Nipype + GiraffeTools, support for custom functions",
        "user": {
            "login": "TimVanMourik",
            "id": 6152205,
            "node_id": "MDQ6VXNlcjYxNTIyMDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6152205?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TimVanMourik",
            "html_url": "https://github.com/TimVanMourik",
            "followers_url": "https://api.github.com/users/TimVanMourik/followers",
            "following_url": "https://api.github.com/users/TimVanMourik/following{/other_user}",
            "gists_url": "https://api.github.com/users/TimVanMourik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TimVanMourik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TimVanMourik/subscriptions",
            "organizations_url": "https://api.github.com/users/TimVanMourik/orgs",
            "repos_url": "https://api.github.com/users/TimVanMourik/repos",
            "events_url": "https://api.github.com/users/TimVanMourik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TimVanMourik/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4850409556,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtgVA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Nipype",
                "name": "Nipype",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-06-04T16:19:21Z",
        "updated_at": "2022-11-28T16:53:35Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "# Nipype + GiraffeTools, support for custom functions\r\n\r\n## Project Description\r\n\r\nI would like to visually build a Nipype workflow. This is already possible with [GiraffeTools](https://giraffe.tools/porcupine/TimVanMourik/SomeGiraffeExample) but only with standard Nipype nodes. It would be really cool if you could include ANY of your own functions straight away: wrap them into Nipype-modules and show them to the world.\r\n\r\nThis project is largely based on [this issue](https://github.com/TimVanMourik/GiraffeTools/issues/107)\r\n\r\n## Skills required to participate\r\n\r\n* Heard of the word 'Nipype'\r\n\r\n## Integration\r\nThis Hackathon is a particularly good moment to do this, because we can see what users and developers need in building workflows.\r\n\r\n## Preparation material\r\n* https://giraffe.tools\r\n* https://giraffe.tools/porcupine/TimVanMourik/SomeGiraffeExample\r\n* https://github.com/TimVanMourik/GiraffeTools\r\n* https://github.com/TimVanMourik/GiraffeTools/issues/107\r\n\r\n## Link to your GitHub repo\r\nhttps://github.com/TimVanMourik/GiraffeTools\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/75/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/75/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/74",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/74/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/74/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/74/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/74",
        "id": 451923324,
        "node_id": "MDU6SXNzdWU0NTE5MjMzMjQ=",
        "number": 74,
        "title": "BIDS-ifying the hMRI toolbox",
        "user": {
            "login": "ChristophePhillips",
            "id": 2011934,
            "node_id": "MDQ6VXNlcjIwMTE5MzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2011934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ChristophePhillips",
            "html_url": "https://github.com/ChristophePhillips",
            "followers_url": "https://api.github.com/users/ChristophePhillips/followers",
            "following_url": "https://api.github.com/users/ChristophePhillips/following{/other_user}",
            "gists_url": "https://api.github.com/users/ChristophePhillips/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ChristophePhillips/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ChristophePhillips/subscriptions",
            "organizations_url": "https://api.github.com/users/ChristophePhillips/orgs",
            "repos_url": "https://api.github.com/users/ChristophePhillips/repos",
            "events_url": "https://api.github.com/users/ChristophePhillips/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ChristophePhillips/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4850406950,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWJg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRI",
                "name": "MRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850410522,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtkGg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/BIDS",
                "name": "BIDS",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850415818,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt4yg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Matlab",
                "name": "Matlab",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850416371,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt68w",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/SPM",
                "name": "SPM",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2019-06-04T10:40:42Z",
        "updated_at": "2022-11-28T16:53:40Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# BIDS-ifying the hMRI toolbox\r\n\r\n## Project Description\r\n\r\nThe [hMRI toolbox](http://hmri.info) allows you to generate quantitative MRI data from a series of \"raw\" multi-echo structural images and field maps, i.e. the Multi-Parametric Mapping (MPM) protocol. So far, the toolbox is not BIDS compliant but it would clearly help everyone if it did... \r\n\r\n![hMRI_mapcreation](https://user-images.githubusercontent.com/2011934/59023151-6c2a0d80-884f-11e9-90a2-6b46c01699cd.png)\r\n\r\n## Skills required to participate\r\n\r\nAnyone with some experience in Matlab, quantitative MRI, SPM-extension toolbox development or the will to learn these skills.\r\n\r\n## Integration\r\nThe [hMRI project](http://hmri.info) has been supported by a few labs already and used by a few more. Harmonizing the way the sequence parameters are saved and accessed would help data management, QA, and sharing. \r\n\r\nOne [BIDS Extension Proposal (BEP001)](https://docs.google.com/document/d/1QwfHyBzOyFWOLO4u_kkojLpUhW0-4_M7Ubafu9Gf4Gg/) focuses on standardizing such structural acquisitions that include multiple contrasts (multi echo, flip angle, inversion time) sequences. This effort thus aims at integrating the hMRI toolbox within the BEP001. The latter is still in development, therefore adjustments if needed are still possible.\r\n\r\nIntermediate steps:\r\n- BIDS-ify the example provided example data\r\n- updates the toolbox to use the BIDS form of the parameters\r\n- extend the Dicom-to-Nifti conversion according to BIDS \r\n\r\n## Preparation material\r\nThe public distribution of [hMRI toolbox](http://hmri.info) code is available [here](https://github.com/hMRI-group/hMRI-toolbox) but I'll make the latest private version available for the development.\r\nExample data are available [here](https://owncloud.gwdg.de/index.php/s/iv2TOQwGy4FGDDZ), specifically the [\"800\u00b5m 64 channel protocol\" data set](https://owncloud.gwdg.de/index.php/s/iv2TOQwGy4FGDDZ/download?path=%2F&files=hmri_sample_dataset_with_maps.zip).\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/74/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/74/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/73",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/73/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/73/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/73/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/73",
        "id": 451615672,
        "node_id": "MDU6SXNzdWU0NTE2MTU2NzI=",
        "number": 73,
        "title": "JavaScript toolkit for modular brain visualization",
        "user": {
            "login": "tyarkoni",
            "id": 303932,
            "node_id": "MDQ6VXNlcjMwMzkzMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/303932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tyarkoni",
            "html_url": "https://github.com/tyarkoni",
            "followers_url": "https://api.github.com/users/tyarkoni/followers",
            "following_url": "https://api.github.com/users/tyarkoni/following{/other_user}",
            "gists_url": "https://api.github.com/users/tyarkoni/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tyarkoni/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tyarkoni/subscriptions",
            "organizations_url": "https://api.github.com/users/tyarkoni/orgs",
            "repos_url": "https://api.github.com/users/tyarkoni/repos",
            "events_url": "https://api.github.com/users/tyarkoni/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tyarkoni/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4850417282,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt-gg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Java",
                "name": "Java",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2019-06-03T18:04:20Z",
        "updated_at": "2022-11-28T16:53:45Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Name TBD\r\n\r\n## Project Description\r\n\r\nThere are quite a few JS brain image viewers out there, but they overwhelmingly focus on the rendering side of things rather than the UI side. The goal of this project is to develop a high-level, modular JS library that (a) defines a common API for viewers, (b) implements support for widely used viewers (e.g., Papaya), and (c) provides a set of customizable widgets/components that can be easily injected into new JS projects. If successful, users should be able to construct relatively sophisticated dashboards (including things like image thresholding and color assignment, customized orth views, multiple layers, etc.) in just a few lines of JS code.\r\n\r\n## Skills required to participate\r\n\r\nAll kinds of contributions are welcome, but the project is likely to benefit particularly from the involvement of people with JavaScript experience and/or general experience building APIs and architecting modular libraries.\r\n\r\n## Integration\r\nThere's room for contribution from folks with a wide range of backgrounds and experience levels. We will be particularly interested in soliciting opinions on what core features the package should include, and how users expect to interact with good visualization tools.\r\n\r\n## Preparation material\r\nFolks with prior JavaScript experience may want to take a look at a few of the existing viewers, e.g., [Papaya](https://github.com/rii-mango/Papaya), [PyCortex](https://github.com/gallantlab/pycortex), and [brainsprite.js](https://github.com/SIMEXP/brainsprite.js). Participants with prior programming experience who are new to JavaScript may want to whisper a few quiet prayers and then take the plunge into a JS tutorial or six.\r\n\r\n## Link to your GitHub repo\r\n[https://github.com/neurostuff/BVT](https://github.com/neurostuff/BVT) \u2014 but that's currently just a placeholder.\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/73/reactions",
            "total_count": 6,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 2,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/73/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/71",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/71/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/71/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/71/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/71",
        "id": 451175393,
        "node_id": "MDU6SXNzdWU0NTExNzUzOTM=",
        "number": 71,
        "title": "Animal and Non-standard brain pipelines",
        "user": {
            "login": "neurabenn",
            "id": 9336717,
            "node_id": "MDQ6VXNlcjkzMzY3MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9336717?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neurabenn",
            "html_url": "https://github.com/neurabenn",
            "followers_url": "https://api.github.com/users/neurabenn/followers",
            "following_url": "https://api.github.com/users/neurabenn/following{/other_user}",
            "gists_url": "https://api.github.com/users/neurabenn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neurabenn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neurabenn/subscriptions",
            "organizations_url": "https://api.github.com/users/neurabenn/orgs",
            "repos_url": "https://api.github.com/users/neurabenn/repos",
            "events_url": "https://api.github.com/users/neurabenn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neurabenn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717336,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhmA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 4686717367,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhtw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_tools_skills:comfortable",
                "name": "project_tools_skills:comfortable",
                "color": "c2e0c6",
                "default": false,
                "description": ""
            },
            {
                "id": 4686717369,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhuQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_type:documentation",
                "name": "project_type:documentation",
                "color": "c5def5",
                "default": false,
                "description": ""
            },
            {
                "id": 4850406950,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWJg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRI",
                "name": "MRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850409552,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtgUA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/fMRI",
                "name": "fMRI",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-06-02T10:13:28Z",
        "updated_at": "2022-11-28T16:55:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Animal /Nonstandard Brain Pipelines\r\n\r\n## Project Description\r\n\r\nThis is an example of converting an in house animal pipeline project to hopefully  a feat or c-pac for animal studies. In Neuroimaging we're generally limited to working with a small range of animals. Even if you're working with macaques you still need to do a lot of anatomical processing that's distinct to human brains. So this year we designed a surface generation pipeline that is easily adaptable to multiple animals \r\n\r\nWhat we'd like to do is now extend the pipelines along with some other in house pipelines we have for preprocessing of fMRI and DTI data with the simple idea being that following anatomical processing (which can also be just brain extraction and not the full surface generation). We'd like to set it up so you have either a feat or c-pac like GUI or commandline where you can set up everything with one key difference: an added animal option.\r\n\r\n## Skills required to participate\r\n\r\nThis project is really open to everyone. \r\nOn the technical side a good level of bash, and python would be great. \r\nAdditionally if you have experience in making docker containers or GUI's to make it a more user friendly pipeline that would also be great! \r\n\r\nOn a non-technical side I realized recently that there currently is no documentation for the actual pipeline. Additionally if you're interested in adding brains of new animals and want to share data you absolutely can! If you just want to add brains you can help us add some from the brain catalogue using brain box: http://brainbox.pasteur.fr/  \r\n\r\n## Integration\r\nThis really is a project for everyone. As I mentioned on the non-technical side we could potentially add quite a few new animal brains in order to generate their surfaces. \r\n\r\nNeuroimagers can help us with the design and optimization of the current and new pipelines. Specifically:\r\nIn the surface generation pipeline\r\n- Add ex-vivo support for surface generation\r\n- Add support for non T1 images i.e. highres T2\r\n- Add support for small animal imaging. Currently the pipeline has only been tested on images using clinical scanners and more or less standard resolution. A pre-pipeline step to adjust voxel sizes for rodents would be great!\r\n- Add in support to more easily use hand edited WM masks when necessary\r\n\r\nComputer Science:\r\nPart of the problem in neuroimaging pipelines is that they're not always intuitive to install or use.\r\n- Help create a docker container for use in creating an animal friendly computing environment\r\n- Help use create a GUI for using the pipelines so that working with animals can be as easy as working with humans\r\n\r\nI'm just here to learn:\r\n-  The documentation is largely lacking. A manual on how to create the prerequisite images for the pipeline would be great!\r\n-  Thanks to brain catalogue we have a ton of animal brains we can try the surface pipelines on.\r\nCreate the initial masks required to run everything and get comfortable running and editing pipelines! \r\n\r\n## Preparation material\r\nCome with an open mind and if you can some open data!\r\n\r\n## Link to your GitHub repo\r\nThe precon_all repo: https://github.com/recoveringyank/precon_all  \r\n\r\n## Communication\r\nHere's our mattermost link! https://mattermost.brainhack.org/brainhack/channels/precon_all\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/71/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/71/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/70",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/70/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/70/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/70/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/70",
        "id": 451013397,
        "node_id": "MDU6SXNzdWU0NTEwMTMzOTc=",
        "number": 70,
        "title": "Extending DIPY Visualization and workflows (command line) framework",
        "user": {
            "login": "skoudoro",
            "id": 23106443,
            "node_id": "MDQ6VXNlcjIzMTA2NDQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/23106443?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skoudoro",
            "html_url": "https://github.com/skoudoro",
            "followers_url": "https://api.github.com/users/skoudoro/followers",
            "following_url": "https://api.github.com/users/skoudoro/following{/other_user}",
            "gists_url": "https://api.github.com/users/skoudoro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skoudoro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skoudoro/subscriptions",
            "organizations_url": "https://api.github.com/users/skoudoro/orgs",
            "repos_url": "https://api.github.com/users/skoudoro/repos",
            "events_url": "https://api.github.com/users/skoudoro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skoudoro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717336,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhmA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 4686717369,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhuQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_type:documentation",
                "name": "project_type:documentation",
                "color": "c5def5",
                "default": false,
                "description": ""
            },
            {
                "id": 4686717373,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhvQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_tools_skills:expert",
                "name": "project_tools_skills:expert",
                "color": "c2e0c6",
                "default": false,
                "description": ""
            },
            {
                "id": 4850406950,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWJg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRI",
                "name": "MRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406968,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWOA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/diffusion",
                "name": "diffusion",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850539925,
                "node_id": "LA_kwDOCUpq1c8AAAABIR1dlQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/DIPY",
                "name": "DIPY",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-05-31T23:22:20Z",
        "updated_at": "2022-11-28T16:55:33Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Extending DIPY Vizualisation or workflows framework\r\n\r\n## Project Description\r\n\r\nDIPY is the largest community-based open-source software project and it implements many methods in computational neuroanatomy, with an emphasis on methods for the analysis of diffusion MRI (dMRI) data. DIPY offers a new system of command-line interfaces that ease the use of the Python API implemented for clinician/neuroimagers. The goal is to add new functionalities and simplify the command line creation. The second project is based on FURY, a scientific visualization library, born from a DIPY spin-off. The goal is to add some widget and a function to simplify Atlas visualization.\r\n\r\n## Skills required to participate\r\n\r\nEverybody is welcomed! from python Beginner to expert! if you are interested in :\r\n- improving your understanding or extending of DIPY visualization, join us!\r\n- extending DIPY command line framework, join us!\r\n\r\n## Integration\r\nNeuroimagers and computational scientists may be able to contribute to either part of the project. more details below:\r\n\r\n### Workflows Project: \r\n- Create a worflows from a decorator instead of a `Class`.\r\n- Create New DIPY Workflow (command line)\r\n- For beginner, you will be able to create and contribute your own command line on DIPY\r\n- Increase documentation \r\n\r\n### Visualization Project:\r\n- Visualization dynamic Atlas easily (medium)\r\n- Dynamic Mosaic visualization (medium)\r\n- Create a new widget (Combobox) (medium)\r\n- Create new brain effect with shader (advanced user)\r\n- Increase documentation \r\n\r\n## Preparation material\r\n- DIPY workflows intro: http://nipy.org/dipy/examples_built/workflow_creation.html#example-workflow-creation\r\n- DIPY visualization / FURY -> https://fury.gl or http://nipy.org/dipy/examples_built/viz_ui.html#example-viz-ui or  http://nipy.org/dipy/examples_built/viz_advanced.html#example-viz-advanced\r\n\r\n\r\n## Link to your GitHub repo\r\n- DIPY: https://github.com/nipy/dipy   (`pip install dipy`)\r\n- FURY: https://github.com/fury-gl/fury (`pip install fury`)\r\n\r\n\r\n## Communication\r\nhttps://gitter.im/nipy/dipy\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/70/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/70/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/69",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/69/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/69/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/69/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/69",
        "id": 450879749,
        "node_id": "MDU6SXNzdWU0NTA4Nzk3NDk=",
        "number": 69,
        "title": "Comparing longitudinal registration tools for 2D MRI",
        "user": {
            "login": "brieuclehmann",
            "id": 19205026,
            "node_id": "MDQ6VXNlcjE5MjA1MDI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/19205026?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brieuclehmann",
            "html_url": "https://github.com/brieuclehmann",
            "followers_url": "https://api.github.com/users/brieuclehmann/followers",
            "following_url": "https://api.github.com/users/brieuclehmann/following{/other_user}",
            "gists_url": "https://api.github.com/users/brieuclehmann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brieuclehmann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brieuclehmann/subscriptions",
            "organizations_url": "https://api.github.com/users/brieuclehmann/orgs",
            "repos_url": "https://api.github.com/users/brieuclehmann/repos",
            "events_url": "https://api.github.com/users/brieuclehmann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brieuclehmann/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4850406950,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWJg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRI",
                "name": "MRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850415818,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt4yg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Matlab",
                "name": "Matlab",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850416369,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt68Q",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/FSL",
                "name": "FSL",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850416371,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt68w",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/SPM",
                "name": "SPM",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850540462,
                "node_id": "LA_kwDOCUpq1c8AAAABIR1frg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/C++",
                "name": "C++",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-05-31T16:25:09Z",
        "updated_at": "2022-11-28T16:55:44Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Comparing longitudinal registration tools for 2D MRI\r\n\r\n## Project Description\r\n\r\nWhile research MRI anatomical images are usually 3D (e.g. FLASH), clinical scans are typically 2D acquisitions with thick slices. In this project, we take up the challenge of longitudinal registration with 2D scans as would typically be acquired in a long term clinical trail (e.g. for multiple sclerosis). Longitudinal brain imaging can be particularly useful in the analysis of volumetric changes or lesion burden, and shows great promise for the development of novel biomarkers. \r\n\r\n\r\nRegistration is a key step in the pipeline that affects all further downstream analysis of neuroimaging data. Although using cross-sectional tools to process longitudinal data is unbiased, this ignores the common information across scans. Longitudinal processing aims to reduce the within-subject variability. Both SPM and FreeSurfer offer tools for longitudinal registration of scans across multiple (more than two) time points and, as with most image processing tools, these have naturally been developed with research-quality data in mind. As researchers are increasingly gaining access to clinical data, however, it would be timely to determine how current longitudinal processing tools perform on lower-quality 2D MRI scans. \r\n\r\nUsing the publicly-available OASIS dataset, we would like to investigate the performance of the SPM and FreeSurfer longitudinal registration tools. The OASIS-3 (Longitudinal Neuroimaging, Clinical, and Cognitive Dataset for Normal Aging and Alzheimer\u2019s Disease) dataset consists of images from c.1000 subjects, many of which are accompanied by volumetric segmentation files produced through FreeSurfer. With these files as a 'gold-standard', we will average slices from 3D acquisitions to simulate 2D acquisitions and assess the accuracy of each processing tool.\r\n\r\n## Skills required to participate\r\n\r\nAny of the following:\r\n\r\n- Experience in programming (mainly Matlab, C or C++)  \r\n\r\n- Experience with FreeSurfer or SPM12  \r\n\r\n- Experience with structural image analysis\r\n\r\n## Integration\r\n\r\nContributions towards any of the following milestones would be very welcome!\r\n\r\n### Milestones\r\n\r\n1. Downsample OASIS T1 3D data to lower-resolution 2D images  \r\n\r\n2. Isolate the longitudinal registration codebase from FreeSurfer  \r\n\r\n3. Longitudinal registration of 2D images in SPM and FreeSurfer  \r\n\r\n4. Assessment of segmentation performance to original 3D images\r\n\r\n## Preparation material\r\n\r\n[The OASIS project](https://www.oasis-brains.org/)  \r\nChapter 27 (Longitudinal registration) of the [SPM 12 manual](https://www.fil.ion.ucl.ac.uk/spm/doc/spm12_manual.pdf)  \r\n[FSL longitudinal processing](https://surfer.nmr.mgh.harvard.edu/fswiki/LongitudinalProcessing)\r\n\r\n#### Papers\r\n- M. Reuter, N.J. Schmansky, H.D. Rosas, B. Fisch (2012): [Within-subject template estimation for unbiased longitudinal image analysis](https://doi.org/10.1016/j.neuroimage.2012.02.084)  \r\n- J. Ashburner, G.R. Ridgeway (2013): [Symmetric diffeomorphic modeling of longitudinal structural MRI](https://doi.org/10.3389/fnins.2012.00197)\r\n\r\n## Communication\r\nJoin the chat in our [mattermost channel](https://mattermost.brainhack.org/brainhack/channels/longitudinal_2dmri) :)",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/69/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/69/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/68",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/68/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/68/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/68/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/68",
        "id": 450875886,
        "node_id": "MDU6SXNzdWU0NTA4NzU4ODY=",
        "number": 68,
        "title": "Awesome Script to Export Freesurfer-based Parcellation/Segmentation Stats and Provenance as JSON-LD and NIDM ",
        "user": {
            "login": "dbkeator",
            "id": 1322467,
            "node_id": "MDQ6VXNlcjEzMjI0Njc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1322467?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dbkeator",
            "html_url": "https://github.com/dbkeator",
            "followers_url": "https://api.github.com/users/dbkeator/followers",
            "following_url": "https://api.github.com/users/dbkeator/following{/other_user}",
            "gists_url": "https://api.github.com/users/dbkeator/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dbkeator/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dbkeator/subscriptions",
            "organizations_url": "https://api.github.com/users/dbkeator/orgs",
            "repos_url": "https://api.github.com/users/dbkeator/repos",
            "events_url": "https://api.github.com/users/dbkeator/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dbkeator/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717373,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhvQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_tools_skills:expert",
                "name": "project_tools_skills:expert",
                "color": "c2e0c6",
                "default": false,
                "description": ""
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850410522,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtkGg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/BIDS",
                "name": "BIDS",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850416369,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt68Q",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/FSL",
                "name": "FSL",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850540938,
                "node_id": "LA_kwDOCUpq1c8AAAABIR1hig",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/ANTs",
                "name": "ANTs",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850540942,
                "node_id": "LA_kwDOCUpq1c8AAAABIR1hjg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Freesurfer",
                "name": "Freesurfer",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-05-31T16:15:37Z",
        "updated_at": "2022-11-28T16:55:51Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Name of your awesome project\r\nAwesome Script to Export Freesurfer-based Parcellation/Segmentation Stats and Provenance as JSON-LD and NIDM \r\n\r\n## Project Description\r\n\r\nThis project ultimately aims to facilitate both query and analysis of parcellation/segmentation based regional statistics across popular softwares such as [Freesurfer](https://surfer.nmr.mgh.harvard.edu/), [FSL](https://fsl.fmrib.ox.ac.uk/fsl/fslwiki), and [ANTS](http://stnava.github.io/ANTs/). Currently each software produces its own output format and brain region labels are specific to the atlas used in generating the regional statistics.  This makes life difficult when trying to search for \"nucleaus accumbens\" volume, for example, across the different software products.  Further, knowing which version of the software tool used and what atlas and version of the atlas in a structured representation facilitating query is lacking.  To this end we propose augmenting the various segmentation tools with scripts that will: (1) map atlas-specific anatomical nomeclature to anatomical concepts hosted in terminology resources (e.g. InterLex); (2) capture better structured provenance about the input image(s) and the atlases used for the segmentation; (3) export the segmentation results and the provenance as either [JSON-LD](https://json-ld.org/), [NIDM](http://nidm.nidash.org/) which can then link the derived data to broader records of the original project metadata, or as an additional component of a BIDS derivative.\r\n\r\nWe aim to tackle this problem in steps.  For this hackathon project we'll be focusing on conversion from Freesurfer's [mri_segstats](https://surfer.nmr.mgh.harvard.edu/fswiki/mri_segstat) program output along with some additional parsing/conversion of Freesurfer log files.\r\n\r\n## Skills required to participate\r\n\r\nPython and structural neuroimaging experience.  If one has experience with [rdflib](https://github.com/RDFLib/rdflib) or [PROV](https://github.com/trungdong/prov) that would also be helpful.  Any neuroanatomists in the audience?  Would be helpful to have someone vet our mappings from atlas labels to anatomy terms.\r\n\r\n## Integration\r\nThis project will need expertise in programming, structural neuroimaging, and anatomy.  To make this project sucessful we need individuals who have skills in any of these domains to help with: (1) understand Freesurfer's segmentation results format and log files; (2) programming up a script in Python; (3) understand anatomy well enough to select the proper anatomical concept that maps to a specific atlas designation of a region and ***can define new anatomy terms where needed, linking them to broader concepts*** to facilitate segmentation results queries across softwares.\r\n\r\n## Preparation material\r\n* [Freesurfer](https://surfer.nmr.mgh.harvard.edu/)\r\n* [mri_segstats](https://surfer.nmr.mgh.harvard.edu/fswiki/mri_segstat)\r\n* [rdflib](https://github.com/RDFLib/rdflib)\r\n* [PyNIDM](https://github.com/incf-nidash/PyNIDM)\r\n* [InterLex Term Search](https://scicrunch.org/scicrunch/interlex/dashboard)\r\n* Examples done pseudo-manually of Freesurfer, FSL, and ANTS segmentation data added to NIDM documents for [ABIDE](https://github.com/dbkeator/simple2_NIDM_examples/tree/master/datasets.datalad.org/abide/RawDataBIDS) and [ADHD200](https://github.com/dbkeator/simple2_NIDM_examples/tree/master/datasets.datalad.org/adhd200/RawDataBIDS) datasets\r\n\r\n\r\n## Link to your GitHub repo\r\n[segstats_jsonld](https://github.com/dbkeator/segstats_jsonld)  \r\n    with ***WIP*** [ReadMe.md](https://github.com/dbkeator/segstats_jsonld/blob/master/README.md) containing \r\n***NOTE, this temporary github repo may change to be under ReproNim space***\r\n\r\n## Communication\r\nHaven't gotten this far yet but questions can be posted as issues in the GitHub repo linked above for via slack (@dbkeator) / mattermost (@dbkeator) / gmail (dbkeator@gmail.com)\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/68/reactions",
            "total_count": 3,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 2,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/68/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/66",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/66/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/66/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/66/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/66",
        "id": 449918208,
        "node_id": "MDU6SXNzdWU0NDk5MTgyMDg=",
        "number": 66,
        "title": "Automated Cortical Lesion Detection using Python Tools",
        "user": {
            "login": "barbrakr",
            "id": 50030195,
            "node_id": "MDQ6VXNlcjUwMDMwMTk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/50030195?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/barbrakr",
            "html_url": "https://github.com/barbrakr",
            "followers_url": "https://api.github.com/users/barbrakr/followers",
            "following_url": "https://api.github.com/users/barbrakr/following{/other_user}",
            "gists_url": "https://api.github.com/users/barbrakr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/barbrakr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/barbrakr/subscriptions",
            "organizations_url": "https://api.github.com/users/barbrakr/orgs",
            "repos_url": "https://api.github.com/users/barbrakr/repos",
            "events_url": "https://api.github.com/users/barbrakr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/barbrakr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717373,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhvQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_tools_skills:expert",
                "name": "project_tools_skills:expert",
                "color": "c2e0c6",
                "default": false,
                "description": ""
            },
            {
                "id": 4850406950,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWJg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRI",
                "name": "MRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850416371,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt68w",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/SPM",
                "name": "SPM",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2019-05-29T16:55:47Z",
        "updated_at": "2022-11-28T16:55:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Cortical Lesion Finder\r\n\r\n[Barbara A.K. Kreilkamp](https://orcid.org/0000-0001-6881-5191)\r\n## Project Description\r\nThe high anatomic specificity of MRI may depict focal lesions and can be expertly assessed by visual analysis through neuroradiologists (Von Oertzen et al. 2002). Still, it is important to find ways to improve the diagnostic yield from MRI through optimized MRI protocols, expert neuroradiological assessment and quantitative analysis of post-processed volumetric MRI (Sisodiya et al. 1995, Huppertz et al. 2005).\r\n\r\nThis project focuses on quantitative analysis to improve detection of focal cortical dysplasia (FCD), which is a common lesion associated with medically refractory epilepsy and often epileptogenic. FCD is a type of cortical malformation that is neuroradiologically characterized by cortical thickening, GM/WM blurring and transmantle signs, which are abnormal extensions of GM towards the ventricles (Barkovich et al. 1997, Huppertz et al. 2005). FCDs are the most common lesions in children and is the third most common lesion after hippocampal sclerosis (HS) and tumors in adult patients. \r\n\r\nWithin our study, a dedicated epilepsy MRI research protocol including isotropic 3D T1-weighted and FLAIR was performed on patients with medically refractory focal epilepsy, who were deemed to be non-lesional based on previous MRI. The most recent MRIs conducted in context of this study allowed (i) a clinical diagnostic assessment by an experienced neuroradiologist and (ii) the application of an automated quantitative voxel-based lesion detection technique on patients' MRIs in order to find potentially epileptogenic lesions such as FCDs. \r\n\r\nI have used MATLAB to program an automatic cortical lesion finder tool and would like to translate it into Python together with you!\r\n\r\n![image](https://user-images.githubusercontent.com/50030195/58573888-003c1980-823f-11e9-96e1-6321c1ce2b46.png)\r\n\r\n## Skills required to participate\r\n\r\nExperience in Python (and possibly MATLAB, not a requirement)\r\nCreativity for incorporating [SPM12](https://github.com/spm/spm12), [nipype](https://nipype.readthedocs.io/en/latest/) and [nilearn](https://nilearn.github.io) (for voxel-based morphometry)\r\n\r\n## Integration\r\nAs of now, we only have a limited number of cortical lesions. The idea is to make this project available to clinicians as collaborators, incorporate their feedback and improve the detection rate and usability of the software.\r\n\r\n## Milestones:\r\n(i) Design a user-friendly and low-level Graphical User Interface; \r\n(ii) read in MRI data (nifti or preferred DICOM); \r\n(iii) translate MATLAB/SPM12 algorithms using GitHub packages\r\n\r\n## Preparation material\r\n- [Python programming tutorials](https://github.com/ohbm/hackathon2019/blob/master/Tutorial_Resources.md#python)\r\n- [Proper documenting/commenting](https://realpython.com/documenting-python-code/#why-documenting-your-code-is-so-important)\r\n- [nipype](https://nipype.readthedocs.io/en/latest/) and [nipype introduction](https://miykael.github.io/nipype_tutorial/notebooks/introduction_nipype.html#5)\r\n- Not totally necessary but perhaps useful: [nilearn](https://nilearn.github.io), [SPM12](https://github.com/spm/spm12), [CAT12](http://www.neuro.uni-jena.de/vbm/download/)\r\n- Huppertz H.-J., Grimm C., Fauser S., Kassubek J., Mader I., Hochmuth A., et al. (2005). Enhanced visualization of blurred gray-white matter junctions in focal cortical dysplasia by voxel-based 3D MRI analysis. Epilepsy Research, 67(1-2), 35\u201350. http://doi.org/10.1016/j.eplepsyres.2005.07.009\r\n- Kreilkamp, B.A.K., Das, K., Wieshmann, U.C., Biswas, S., Marson, A.G., Keller, S.S. (2019). Neuroradiological findings in patients with \u2018non-lesional\u2019 focal epilepsy revealed by research protocol. Clinical Radiology, 74(1):78.e1\u201378.e11. [http://doi.org/10.1016/j.crad.2018.08.013](http://doi.org/10.1016/j.crad.2018.08.013)\r\n- Kreilkamp, B.A.K., Das, K., Wieshmann, U.C., Tyler, K., Kiel, S., Gould, S., Marson, A.G., Keller, S.S. (2017) Voxel-based MRI Analysis Can Assist Clinical Diagnostics in Patients with MRI-negative Epilepsy. Organization of Human Brain Mapping, Vancouver, Canada. [http://tiny.cc/VBM_epilepsy](http://tiny.cc/VBM_epilepsy)\r\n\r\n## Join Mattermost channel\r\n [@cortical_lesion_finder](https://mattermost.brainhack.org/brainhack/channels/cortical_lesion_finder)\r\n\r\n## GitHub Repository\r\n[Cortical Lesion Finder](https://github.com/barbrakr/CLF-python)\r\n\r\n## More References\r\n- Von Oertzen, T.J., Urbach, H., Jungbluth, S., Kurthen, M., Reuber, M., Fernandez, G. et al. (2002). Standard magnetic resonance imaging is inadequate for patients with refractory focal epilepsy. Journal of Neurology, Neurosurgery, and Psychiatry, 73(6), 643-647. http://doi.org/10.1136/jnnp.73.6.643\r\n- Sisodiya, S.M., Free, S.L., Fish, D.R., Shorvon, S.D. (1995) Increasing the yield from volumetric MRI in patients with epilepsy. Magnetic Resonance Imaging 13:1147\u20131152.\r\n- Barkovich, A.J., Kuzniecky, R.I., Bollen, A.W., Grant, P.E. (1997) Focal transmantle dysplasia: a specific malformation of cortical development. Neurology 49, 1148\u20131152.",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/66/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/66/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/65",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/65/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/65/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/65/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/65",
        "id": 449757382,
        "node_id": "MDU6SXNzdWU0NDk3NTczODI=",
        "number": 65,
        "title": "An Easy Generator of Author Line",
        "user": {
            "login": "Conxz",
            "id": 712044,
            "node_id": "MDQ6VXNlcjcxMjA0NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/712044?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Conxz",
            "html_url": "https://github.com/Conxz",
            "followers_url": "https://api.github.com/users/Conxz/followers",
            "following_url": "https://api.github.com/users/Conxz/following{/other_user}",
            "gists_url": "https://api.github.com/users/Conxz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Conxz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Conxz/subscriptions",
            "organizations_url": "https://api.github.com/users/Conxz/orgs",
            "repos_url": "https://api.github.com/users/Conxz/repos",
            "events_url": "https://api.github.com/users/Conxz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Conxz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-05-29T11:41:43Z",
        "updated_at": "2022-11-28T16:56:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# An Easy Generator of Author Line\r\n\r\n## Project Description\r\n\r\nTeam neuroscience is becoming increasingly common in today\u2019s research. Along with this trend, the number of individuals involved in one project/paper is also increasing to hundreds and even thousands. Preparation of author block for such papers becomes a challenging job. Particularly, if it is done manually, to format the author affiliations is painful when co-authors ask for some updates. \r\nThe basic idea of this project is to make an easy generator of author line. With such a tool, researchers could easily generate an author line which integrates authors\u2019 first and last names, affiliations, and, when needed, information of highest degree and email address. \r\nGiven recent big success of team neuroscience studies, we expect that this tool would be very useful for future large-scale studies. \r\n\r\n## Skills required to participate\r\n\r\nExperience in (or willing to learn) programming in Python\r\n\r\n## Integration\r\nYou can contribute to this project by helping with\r\n- Programming\r\n- Documenting\r\n- In other ways that I couldn't think of here.\r\n\r\n## Preparation material\r\n- [Python programming tutorials](https://github.com/ohbm/hackathon2019/blob/master/Tutorial_Resources.md#python)\r\n- [Proper documenting/commenting](https://realpython.com/documenting-python-code/#why-documenting-your-code-is-so-important)\r\n- Olds, James L. \"The rise of team neuroscience.\" Nature Reviews Neuroscience 17.10 (2016): 601.\r\n- Thompson, Paul M., et al. \"The ENIGMA Consortium: large-scale collaborative analyses of neuroimaging and genetic data.\" Brain imaging and behavior 8.2 (2014): 153-182.\r\n- Open Science Collaboration. \"Estimating the reproducibility of psychological science.\" Science 349.6251 (2015): aac4716.\r\n\r\n## Link to your GitHub repo\r\n[An Easy Generator of Author Line](https://github.com/Conxz/easyAuthorLine)  \r\n\r\n## Communication\r\n[![Join the chat at https://gitter.im/easyAuthorLine/community](https://badges.gitter.im/easyAuthorLine/community.svg)](https://gitter.im/easyAuthorLine/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/65/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/65/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/61",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/61/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/61/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/61/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/61",
        "id": 448136138,
        "node_id": "MDU6SXNzdWU0NDgxMzYxMzg=",
        "number": 61,
        "title": "BLM: Parallelised Computing for Big Linear Models ",
        "user": {
            "login": "TomMaullin",
            "id": 22241320,
            "node_id": "MDQ6VXNlcjIyMjQxMzIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/22241320?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomMaullin",
            "html_url": "https://github.com/TomMaullin",
            "followers_url": "https://api.github.com/users/TomMaullin/followers",
            "following_url": "https://api.github.com/users/TomMaullin/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomMaullin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomMaullin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomMaullin/subscriptions",
            "organizations_url": "https://api.github.com/users/TomMaullin/orgs",
            "repos_url": "https://api.github.com/users/TomMaullin/repos",
            "events_url": "https://api.github.com/users/TomMaullin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomMaullin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717374,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhvg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_tools_skills:familiar",
                "name": "project_tools_skills:familiar",
                "color": "c2e0c6",
                "default": false,
                "description": ""
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-05-24T12:07:51Z",
        "updated_at": "2022-11-28T16:56:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# BLM: Parallelised Computing for Big Linear Models \r\n\r\n## Project Description\r\n\r\nCurrently, large scale imaging studies are becoming increasingly popular within the Neuroimaging community. As datasets grow larger and larger, however, performing standard GLM analysis is becoming increasingly challenging. Heavy demands are placed on memory usage and computation time, and variability in masks from each subject can cause severe erosion of the analysis mask unless the model allows for missing data.\r\n\r\nTo address these issues we recently created BLM, a tool for computing \"Big\" Linear Models in a parallel (cluster) setting, implemented in python. However, this project is still in it's early days and there are many features we would like to add to it. For example:\r\n\r\n - Imputation models\r\n - Permutation and Bootstrapping\r\n - Spatially varying predictors\r\n - RFT smoothness estimation\r\n - Optimization for models with 100's of predictors (some possibly nuisance not requiring inference)\r\n\r\n## Skills required to participate\r\n\r\nThe ideal prerequisites for this project would be familiarity with Python, computer clusters and linear models. However, anyone who wants to give BLM a try or make suggestions is welcome to join!\r\n\r\n## Integration\r\n\r\nPredominantly, we are looking for computational scientists and statisticians as much of what needs to be done is code-based. However, anyone and everyone is welcome to join and try running BLM and let us know how they get on. If any neuroimagers or psychologists have any suggestions for features they would find useful and would like to discuss implementing as well please feel free to come talk to us!\r\n\r\nOur intermediate goal is to complete at least 2-3 of the items we listed in the project description section.\r\n\r\n## Preparation material\r\n\r\nIn terms of preparation, the best thing to do would be to have a read of the [`readme.md` file on the BLM repository](https://github.com/TomMaullin/BLM/blob/master/README.md) and try out BLM for yourself! \r\n\r\n## Link to your GitHub repo\r\n\r\nThe GitHub repository can be found [here](https://github.com/TomMaullin/BLM/).\r\n\r\n## Communication\r\n\r\nI have set up a Mattermost channel named \"BLM\" on the Hackathon Mattermost.\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/61/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/61/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/60",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/60/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/60/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/60/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/60",
        "id": 446741579,
        "node_id": "MDU6SXNzdWU0NDY3NDE1Nzk=",
        "number": 60,
        "title": "Generic Carpet class for visualization of higher-dimensional MR scans (4D)",
        "user": {
            "login": "raamana",
            "id": 3196357,
            "node_id": "MDQ6VXNlcjMxOTYzNTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3196357?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raamana",
            "html_url": "https://github.com/raamana",
            "followers_url": "https://api.github.com/users/raamana/followers",
            "following_url": "https://api.github.com/users/raamana/following{/other_user}",
            "gists_url": "https://api.github.com/users/raamana/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raamana/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raamana/subscriptions",
            "organizations_url": "https://api.github.com/users/raamana/orgs",
            "repos_url": "https://api.github.com/users/raamana/repos",
            "events_url": "https://api.github.com/users/raamana/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raamana/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4850406945,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWIQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/DWI",
                "name": "DWI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406950,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWJg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRI",
                "name": "MRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850409552,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtgUA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/fMRI",
                "name": "fMRI",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-05-21T17:36:54Z",
        "updated_at": "2022-11-28T16:56:27Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "# Name of your awesome project\r\n\r\nCarpet plot\r\n\r\n## Project Description\r\n\r\nCarpet plots are amazing tools to \"unroll\" a 4D dataset such as fMRI scan, and make their visualization really easy, esp. to detect anamolies for QC purposes. Their full potential is not realized yet due to lack of good tools, as well as lack of application to new and interesting aspects/modalities (such as DWI, 4th dim being gradient, instead of time as in fMRI). An attempt has been made to provide a self-contained class `Carpet` in mrivis to provide generic yet convenient interface to realize the full potential of the Carpet class - howevery more work needs to be done to implement some features and smooth out existing ones.\r\n\r\nLook at : https://github.com/raamana/mrivis/issues/13\r\n\r\n## Skills required to participate\r\n\r\nNeuroimaging (basic)\r\nPython (intermediate and basic)\r\nData viz (basic and advanced)\r\n\r\n## Integration\r\nThis project can be a wonderful collaboration betweeen neuroimagers, CS and artists. \r\n\r\n## Preparation material\r\n\r\nTake a look at the docs and repo:\r\nhttps://raamana.github.io/mrivis/readme.html \r\n\r\nThis is a demo notebook for different vis. classses in mrivis:\r\nhttps://nbviewer.jupyter.org/github/raamana/mrivis/blob/master/docs/example_notebooks/mrivis_demo_vis_classes.ipynb#Carpet\r\n\r\n\r\n## Link to your GitHub repo\r\nhttps://github.com/raamana/mrivis\r\n\r\n## Communication\r\n\r\nmrivis channel on brainhack mattermost\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/60/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/60/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/58",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/58/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/58/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/58/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/58",
        "id": 446585844,
        "node_id": "MDU6SXNzdWU0NDY1ODU4NDQ=",
        "number": 58,
        "title": "Adding ability to regress covariates in neuropredict ",
        "user": {
            "login": "raamana",
            "id": 3196357,
            "node_id": "MDQ6VXNlcjMxOTYzNTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3196357?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raamana",
            "html_url": "https://github.com/raamana",
            "followers_url": "https://api.github.com/users/raamana/followers",
            "following_url": "https://api.github.com/users/raamana/following{/other_user}",
            "gists_url": "https://api.github.com/users/raamana/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raamana/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raamana/subscriptions",
            "organizations_url": "https://api.github.com/users/raamana/orgs",
            "repos_url": "https://api.github.com/users/raamana/repos",
            "events_url": "https://api.github.com/users/raamana/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raamana/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-05-21T12:16:42Z",
        "updated_at": "2022-11-28T16:56:44Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "# Name of your awesome project\r\n\r\nAdding ability regress covariates in neuropredict \r\n\r\n## Project Description\r\n\r\nNeeds to be within inner-CV \r\nProvide different popular options to handle covariates \r\n\r\nSee https://github.com/raamana/neuropredict/issues/7 for more details\r\n\r\n## Skills required to participate\r\n\r\nStatistics\r\nPython\r\nSome Machine learning doesn\u2019t hurt, but not required\r\n\r\n## Integration\r\nHow would your project integrate a neuroimager/clinician/psychologist/computational scientist/maker/artist as collaborator? You can check the Mozilla Open Leadership material on [personas](https://mozilla.github.io/open-leadership-training-series/articles/building-communities-of-contributors/bring-on-contributors-using-personas-and-pathways/) and [contribution guidelines](https://mozilla.github.io/open-leadership-training-series/articles/building-communities-of-contributors/write-contributor-guidelines/).  \r\nTry to define intermediate goals (milestones).  \r\n\r\n*to be expanded*: I\u2019d collaborate with them to identify the challenges they face, define problem better and offer a viable solution after interactive consultation \r\n\r\n## Preparation material\r\n\r\n*TBA*\r\n\r\n## Link to your GitHub repo\r\n[neuropredict](https://github.com/raamana/neuropredict)  \r\n    \r\n## Communication\r\n\r\n [#neuropredict](https://brainhack-slack-invite.herokuapp.com/) \r\n\r\n\r\n[![Gitter chat](https://badges.gitter.im/gitterHQ/gitter.png)](https://gitter.im/neuropredict/Lobby#)\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/58/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/58/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/56",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/56/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/56/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/56/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/56",
        "id": 445458451,
        "node_id": "MDU6SXNzdWU0NDU0NTg0NTE=",
        "number": 56,
        "title": "Neurodocker web",
        "user": {
            "login": "TimVanMourik",
            "id": 6152205,
            "node_id": "MDQ6VXNlcjYxNTIyMDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6152205?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TimVanMourik",
            "html_url": "https://github.com/TimVanMourik",
            "followers_url": "https://api.github.com/users/TimVanMourik/followers",
            "following_url": "https://api.github.com/users/TimVanMourik/following{/other_user}",
            "gists_url": "https://api.github.com/users/TimVanMourik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TimVanMourik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TimVanMourik/subscriptions",
            "organizations_url": "https://api.github.com/users/TimVanMourik/orgs",
            "repos_url": "https://api.github.com/users/TimVanMourik/repos",
            "events_url": "https://api.github.com/users/TimVanMourik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TimVanMourik/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4850406950,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWJg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRI",
                "name": "MRI",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-05-17T14:02:50Z",
        "updated_at": "2022-11-28T16:56:49Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "# Name \r\n\r\nNeurodocker as web application\r\n\r\n## Project Description\r\n\r\n@kaczmarj made a really nice tool `Neurodocker` that makes docker files given an input of MRI analysis toolboxes. Let's make a web application out of this. I made a very basic start for this here: https://neurodocker.herokuapp.com.\r\n\r\n## Skills required to participate\r\n\r\n* Some Docker knowledge\r\n* Interest in learning a little bit of web development\r\n\r\n## Link to your GitHub repo\r\nhttps://github.com/kaczmarj/neurodocker\r\nhttps://github.com/TimVanMourik/NeurodockerWeb\r\n\r\n## Communication\r\nSlack for now\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/56/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/56/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/55",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/55/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/55/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/55/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/55",
        "id": 445182243,
        "node_id": "MDU6SXNzdWU0NDUxODIyNDM=",
        "number": 55,
        "title": "Tracking microstructural biomarkers of Alzheimer\u2019s Disease via diffusion MRI",
        "user": {
            "login": "matteofrigo",
            "id": 7785283,
            "node_id": "MDQ6VXNlcjc3ODUyODM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7785283?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matteofrigo",
            "html_url": "https://github.com/matteofrigo",
            "followers_url": "https://api.github.com/users/matteofrigo/followers",
            "following_url": "https://api.github.com/users/matteofrigo/following{/other_user}",
            "gists_url": "https://api.github.com/users/matteofrigo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matteofrigo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matteofrigo/subscriptions",
            "organizations_url": "https://api.github.com/users/matteofrigo/orgs",
            "repos_url": "https://api.github.com/users/matteofrigo/repos",
            "events_url": "https://api.github.com/users/matteofrigo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matteofrigo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4850406950,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWJg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRI",
                "name": "MRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406968,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWOA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/diffusion",
                "name": "diffusion",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850516145,
                "node_id": "LA_kwDOCUpq1c8AAAABIR0AsQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/PET",
                "name": "PET",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2019-05-16T22:14:06Z",
        "updated_at": "2022-11-28T16:57:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Tracking microstructural biomarkers of Alzheimer\u2019s Disease via diffusion MRI\r\n\r\nThe Alzheimer\u2019s Disease Neuroimaging Initiative (ADNI) is a longitudinal natural history study. It is a large multicenter study designed to identify clinical, MRI, genetic, and biochemical markers for the early detection and tracking of Alzheimer's disease (AD). In particular, **identifying biomarkers sensitive to mild cognitive impairment (MCI) is important** to better categorize the transitional stages between normal aging and AD, and to evaluate targeted treatments. \r\n\r\nData from [ADNI](http://adni.loni.usc.edu) is publicly available. The third phase of ADNI (ADNI-3) began in late 2016, with subject imaging beginning in mid-2017. ADNI-3 includes an advanced multi-shell diffusion MRI acquisition, besides the basic single-shell acquisition [1] (see Figure 1). Multi-shell dMRI allows for the reconstruction of diffusion models beyond Diffusion Tensor Imaging (DTI). \r\n\r\nADNI-3 Advanced multi-shell protocol:\r\n* Siemens Prisma/PrismaFit\r\n* 32 or 64 channel receive array\r\n* SW VE11C and up\r\n* Simultaneous Multi-Slice (SMS, a.k.a multi-band)\r\n* Image resolution: 232 x 232 x 160mm\r\n* Voxel size: 2 x 2 x 2mm\r\n* TE = 71ms; TR = 3300ms\r\n* Three shells: (112 total diffusion weighted directions)\r\n     * 13 b=0\r\n     * 6 b=500 s/mm2\r\n     * 48 b=1000 s/mm2\r\n     * 60 b=2000 s/mm2 \r\n* Small delta = 13.6 ms; Big delta = 35.0 ms\r\n\r\n![ADNI-3 acquisition protocol](https://user-images.githubusercontent.com/7785283/57889706-cb3ec880-7835-11e9-9836-bc92b8d7b10e.png)\r\n*Figure 1.* Comparison of \u201cbasic\u201d and \u201cadvanced\u201d diffusion MRI protocols in ADNI-3. Taken from Reid et al. 2017 [1].\r\n\r\n\r\nIn multi-shell data, multi-compartment models can be used to delineate the signal contributions of different tissue compartments, which in turn tell us something about the tissue\u2019s microstructural composition. Conveniently, [Dmipy](https://github.com/AthenaEPI/dmipy) is an open source tool designed to modularly generate and fit any state-of-the-art multi-compartment diffusion models on-the-fly. Here, **we aim at fitting all possible multi-shell models for the ADNI3 advanced diffusion protocol with Dmipy and benchmark which model is best to be used as an imaging biomarker to track the progression of Alzheimer\u2019s Disease in the elderly**.\r\n\r\nMulti-compartment models that are relevant for multi-shell microstructure exploration are: Ball and Stick [2], NODDI-Watson [3], NODDI-Bingham [4], Multi-compartment microscopic diffusion imaging (MC-MDI) [5] and Multi-Tissue CSD [6]. Aside from parametric models, we also evaluate if signal-based markers from signal models such as MAP-MRI [7] can be valuable markers for tracking AD (RTOP, RTAP, RTPP, MSD, NG).\r\n\r\nThe aim of this project is to determine the best diffusion model (if any) to measure the intra-cellular, extracellular volume fractions, and the dispersion of fibers, whose change should correlate with the pathological progression of AD. \r\n\r\n\r\n#### Comparison across dMRI models\r\nFor each dMRI measure, we will run a logistic regression with TV-L1 regularization ([Nilearn package](https://nilearn.github.io/)) across voxels to classify individuals with mild cognitive impairment (MCI; N=17; mean age: 76.8\u00b17.5 yrs; 14M/3F) from those who are cognitively normal (CN; N=39; mean age: 73.2\u00b17.2 yrs; 25M/14F) to identify which dMRI measure gives the highest classification accuracy. Among dMRI measures yielding >80% accuracy we will compare the Jaccard/Dice similarity coefficient from the resulting maps of classifying regions to identify which dMRI measures give similar information in similar regions and which offer additional information about underlying pathological changes.\r\n\r\n#### Note\r\n\r\nWe may use different  classification labels between groups, which can be based on commonly used screening tools for detecting dementia and AD  as the Alzheimer\u2019s Disease Assessment Scale 13 (ADAS-cog8), the Mini-Mental State Examination (MMSE9), and the Clinical Dementia Rating scale sum-of-boxes (CDR-sob10), amyloid PET scores, or cerebrospinal fluid (CSF) markers.\r\n\r\n\r\n## Skills required to participate\r\nWe welcome any curious brainhacker who is interested in improving the understanding of the Alzheimer's Disease and/or wants to see how simple it can be to study tissue microstructure with python.\r\n\r\n\r\n## Integration\r\nThe goal is to track the changes of tissue microstructure in AD. Ideally, we will find a microstructural biomarker that lets us anticipate the classical symptoms of AD, giving us the possibility to set up the corresponding therapy in advance. We will be analyzing many different models for each subject; this will raise problems related to dimensionality reduction and feature selection.\r\n\r\nYour collaboration will be precious in:\r\n* selecting the relevant features to be analyzed;\r\n* performing an accurate statistical analysis of the results.\r\n\r\n\r\n## Preparation material\r\nYou can have a look at the website of [ADNI](http://adni.loni.usc.edu/) to get know more about the data we are processing. To get informations about the fitting of tissue microstructure models, you can look at the website of [Dmipy](https://github.com/AthenaEPI/dmipy).\r\n\r\n\r\n## Links\r\n* [ADNI](http://adni.loni.usc.edu/)\r\n* [Dmipy](https://github.com/AthenaEPI/dmipy)\r\n\r\n## Communication\r\nThis issue will be kept as reference discussion channel. Question can also be directly addressed to @villalonreina (ADNI) and @rutgerfick (Dmipy).\r\n\r\n## References\r\n1.    Reid, R. I. et al. THE ADNI3 DIFFUSION MRI PROTOCOL: BASIC + ADVANCED. Alzheimers. Dement. 13, P1075\u2013P1076 (2017).\r\n2.    Behrens, T. E. J. et al. Characterization and propagation of uncertainty in diffusion-weighted MR imaging. Magnetic Resonance in Medicine: An Official Journal of the International Society for Magnetic Resonance in Medicine 50, 1077\u20131088 (2003).\r\n3.    Zhang, H., Schneider, T., Wheeler-Kingshott, C. A. & Alexander, D. C. NODDI: practical in vivo neurite orientation dispersion and density imaging of the human brain. Neuroimage 61, 1000\u20131016 (2012).\r\n4.    Tariq, M., Schneider, T., Alexander, D. C., Gandini Wheeler-Kingshott, C. A. & Zhang, H. Bingham\u2013NODDI: Mapping anisotropic orientation dispersion of neurites using diffusion MRI. Neuroimage 133, 207\u2013223 (2016).\r\n5.    Kaden, E., Kelm, N. D., Carson, R. P., Does, M. D. & Alexander, D. C. Multi-compartment microscopic diffusion imaging. Neuroimage 139, 346\u2013359 (2016).\r\n6.    Jeurissen, B., Tournier, J.-D., Dhollander, T., Connelly, A. & Sijbers, J. Multi-tissue constrained spherical deconvolution for improved analysis of multi-shell diffusion MRI data. Neuroimage 103, 411\u2013426 (2014).\r\n7.    Fick, R. H. J., Wassermann, D., Caruyer, E. & Deriche, R. MAPL: Tissue microstructure estimation using Laplacian-regularized MAP-MRI and its application to HCP data. Neuroimage 134, 365\u2013385 (2016).\r\n8.    Rosen, W. G., Mohs, R. C. & Davis, K. L. A new rating scale for Alzheimer\u2019s disease. Am. J. Psychiatry 141, 1356\u20131364 (1984).\r\n9.    Folstein, M. F., Folstein, S. E. & McHugh, P. R. \u2018Mini-mental state\u2019: a practical method for grading the cognitive state of patients for the clinician. J. Psychiatr. Res. 12, 189\u2013198 (1975).\r\n10.    Berg, L. Clinical Dementia Rating (CDR). Psychopharmacol. Bull. 24, 637\u2013639 (1988).\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/55/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/55/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/54",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/54/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/54/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/54/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/54",
        "id": 443957892,
        "node_id": "MDU6SXNzdWU0NDM5NTc4OTI=",
        "number": 54,
        "title": "Neuroscience memes (pre-hackathon)",
        "user": {
            "login": "TimVanMourik",
            "id": 6152205,
            "node_id": "MDQ6VXNlcjYxNTIyMDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6152205?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TimVanMourik",
            "html_url": "https://github.com/TimVanMourik",
            "followers_url": "https://api.github.com/users/TimVanMourik/followers",
            "following_url": "https://api.github.com/users/TimVanMourik/following{/other_user}",
            "gists_url": "https://api.github.com/users/TimVanMourik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TimVanMourik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TimVanMourik/subscriptions",
            "organizations_url": "https://api.github.com/users/TimVanMourik/orgs",
            "repos_url": "https://api.github.com/users/TimVanMourik/repos",
            "events_url": "https://api.github.com/users/TimVanMourik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TimVanMourik/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2019-05-14T14:45:19Z",
        "updated_at": "2022-11-28T16:57:00Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "# Neuroscience memes\r\n\r\n## Project Description\r\n\r\nWe need more neuro-memes for our software presentations!\r\n\r\n## Skills required to participate\r\n\r\nVery limited\r\n\r\n## Integration\r\n\r\nFeaturing the hashtag #NeuroMemes\r\n\r\n## Contributing\r\n\r\nAdd below!\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/54/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/54/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/50",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/50/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/50/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/50/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/50",
        "id": 443018979,
        "node_id": "MDU6SXNzdWU0NDMwMTg5Nzk=",
        "number": 50,
        "title": "Multi-table PCA methods for group and individual functional connectivity",
        "user": {
            "login": "jennyrieck",
            "id": 26117998,
            "node_id": "MDQ6VXNlcjI2MTE3OTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/26117998?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jennyrieck",
            "html_url": "https://github.com/jennyrieck",
            "followers_url": "https://api.github.com/users/jennyrieck/followers",
            "following_url": "https://api.github.com/users/jennyrieck/following{/other_user}",
            "gists_url": "https://api.github.com/users/jennyrieck/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jennyrieck/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jennyrieck/subscriptions",
            "organizations_url": "https://api.github.com/users/jennyrieck/orgs",
            "repos_url": "https://api.github.com/users/jennyrieck/repos",
            "events_url": "https://api.github.com/users/jennyrieck/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jennyrieck/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717336,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhmA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 4686717369,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhuQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_type:documentation",
                "name": "project_type:documentation",
                "color": "c5def5",
                "default": false,
                "description": ""
            },
            {
                "id": 4686717373,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhvQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_tools_skills:expert",
                "name": "project_tools_skills:expert",
                "color": "c2e0c6",
                "default": false,
                "description": ""
            },
            {
                "id": 4686717374,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhvg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_tools_skills:familiar",
                "name": "project_tools_skills:familiar",
                "color": "c2e0c6",
                "default": false,
                "description": ""
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850415818,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt4yg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Matlab",
                "name": "Matlab",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850417282,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt-gg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Java",
                "name": "Java",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850417285,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt-hQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/PCA",
                "name": "PCA",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-05-11T17:37:58Z",
        "updated_at": "2022-11-28T16:20:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# C-MARINeR\r\nJenny Rieck & Derek Beaton\r\n\r\n## Project Description\r\n\r\nC-MARINeR is a focused sub-project MARINeR: Multivariate Analysis and Resampling Inference for Neuroimaging in R. The \"C\" stands generally for connectivity, but specifically and statistically: covariance or correlation. The C-MARINeR project aims to develop and distribute an R package and ShinyApp. Together, R + Shiny allows for ease of use and, hopefully, simpler exploration of such complex data, and quicker adoption of the techniques.\r\n\r\n## Background\r\n\r\nCovSTATIS is the base method in C-MARINeR. CovSTATIS is effectively a multi-table PCA designed for covariance matrices. CovSTATIS allows for multiple connectivity (correlation or more generally covariance) matrices to be integrated into a single analysis. CovSTATIS produces component (a.k.a. factor) maps with respect to the compromise matrix (weighted average), and then projects each individual matrix back onto the components. \r\n\r\n![covstatis_outline](https://user-images.githubusercontent.com/26117998/57573159-8d830f80-73f1-11e9-8f27-7975ec70fbc2.png)\r\n\r\nK+1CovSTATIS is a novel extension of CovSTATIS that allows us to use a \"target\" or reference matrix. For example, a theoretical resting state structure (a la Yeo/Schaffer maps). K+1CovSTATIS also produces component (a.k.a. factor) maps with respect to the compromise matrix (weighted average), except the compromise matrix is no longer a weighted average of all matrices, rather, it is a weighted average of all matrices with respect to a \"target\" matrix. Then each of those matrices are projected back onto the components.\r\n\r\n## Quests and missions\r\n### Overview \r\nOur primary goal is to make a small package and ShinyApp to perform the same types of analyses we use for integrating and analyzing multiple connectivity matrices (across tasks, individuals, and groups). We want to make CovSTATIS and similar methods easily accessible.\r\n\r\nGoals & tasks are split across multiple types, including development, design, testing, etc...\r\n\r\n### Main quests (ordered)\r\n\r\n* CovSTATIS R package: fully functional covstatis() function\r\n* ShinyApp to interface with CovSTATIS package for covstatis() input and output (visualization, exploration)\r\n* Visualizers: both in the R package and Shiny\r\n* CovSTATIS R package: fully functional kplus1_covstatis() function\r\n* ShinyApp to interface with CovSTATIS package for kplus1_covstatis() input and output (visualization, exploration)\r\n* CovSTATIS R package: Distance-based equivalents of covstatis() and klpus1_covstatis() (i.e., DiSTATIS, the distance matrix version of covSTATIS). \r\n\r\n### Hard mode\r\n* CovSTATIS R package: resampling estimates through bootstrapping\r\n\r\n### Side quests\r\n* CovSTATIS R package: Speed & memory optimization\r\n* CovSTATIS R package: Formal (unit) tests\r\n* R & General: Data (for possible inclusion and distribution in package)\r\n* R & General: Documentation & vignettes\r\n* ShinyApp: Reactive plots\r\n* ShinyApp: Tool tips\r\n* General: Logo design\r\n* NIfTI and other imaging formats I/O\r\n* Translation of project into other languages (e.g., Python, Matlab/Octave, Java, Assembly, LOLCode)\r\n\r\n## Tools\r\n**Quests**: R, various R packages, git/github, RStudio, Shiny, R Markdown\r\n\r\n**Side quests**: HTML, CSS, Possibly Rcpp/RcppEigen/RcppArmadillo, LaTeX, R Markdown, graphic design\r\n\r\n## Skills\r\nFor the C-MARINeR project, there are many ways to contribute across a variety of skill levels and experience across domains. \r\n### How to participate\r\nThe \u201cmain quests\u201d require at least moderate-to-high expertise and familiarity with R, Shiny, and/or principal components analysis. These tasks are the primary focus for us and where we will spend most (or all) of our time.\r\n\r\nThe \u201cside quests\u201d are meant to cover tasks beyond the primary requirements but still key parts of the project. These exist across generating data, writing documentation, design (graphic, interface), optimization, tests, and extensions. Some of these require at least familiarity with R, but many others can be done without programming experience, or even in other languages (i.e., translation of the project). \r\n\r\nIf you want to participate in any of the main or side quests, or even have ideas for additional tasks please reach out to us. \r\n\r\n## Milestones\r\nMilestones for OHBM 2019 Hackathon are dependent on what is accomplished by the end of [CAN/ACN BrainHackTO: 2019](https://brainhackto.github.io/CAN-ACN-05-2019/index.html)\r\n\r\n## Links and Materials\r\n* [C-MARINeR github](https://github.com/jennyrieck/C-MARINeR)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/50/reactions",
            "total_count": 3,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/50/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/49",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/49/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/49/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/49/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/49",
        "id": 440167449,
        "node_id": "MDU6SXNzdWU0NDAxNjc0NDk=",
        "number": 49,
        "title": "A checklist for improving neuroimaging methods and results reporting",
        "user": {
            "login": "Remi-Gau",
            "id": 6961185,
            "node_id": "MDQ6VXNlcjY5NjExODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6961185?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Remi-Gau",
            "html_url": "https://github.com/Remi-Gau",
            "followers_url": "https://api.github.com/users/Remi-Gau/followers",
            "following_url": "https://api.github.com/users/Remi-Gau/following{/other_user}",
            "gists_url": "https://api.github.com/users/Remi-Gau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Remi-Gau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Remi-Gau/subscriptions",
            "organizations_url": "https://api.github.com/users/Remi-Gau/orgs",
            "repos_url": "https://api.github.com/users/Remi-Gau/repos",
            "events_url": "https://api.github.com/users/Remi-Gau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Remi-Gau/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4850406950,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWJg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRI",
                "name": "MRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850409552,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtgUA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/fMRI",
                "name": "fMRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850410522,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtkGg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/BIDS",
                "name": "BIDS",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850416369,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt68Q",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/FSL",
                "name": "FSL",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850416371,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt68w",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/SPM",
                "name": "SPM",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850416740,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt8ZA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/EEG",
                "name": "EEG",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850416741,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt8ZQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MEG",
                "name": "MEG",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2019-05-03T18:29:40Z",
        "updated_at": "2022-11-28T16:19:53Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "# Improving the COBIDAS checklist for better neuroimaging methods and results reporting\r\n\r\nRemi Gau ([ORCID](https://orcid.org/0000-0002-1535-9767))\r\n\r\n## Project Description\r\n\r\nIn 2012, in his review of the methods and results reporting of more than 200 fMRI papers, [Joshua Carp wrote](https://www.ncbi.nlm.nih.gov/pubmed/22796459): \"_Although many journals urge authors to describe their methods to a level of detail such that independent investigators can fully reproduce their efforts, the results described here suggest that few studies meet this criterion._\"\r\n\r\nA few years ago, in order to improve the situation with respect to [reproducibility](https://github.com/ohbm/hackathon2019/blob/master/Tutorial_Resources.md#reproducible-neuroimaging-tools) in f/MRI research, the Committee on Best Practices in Data Analysis and Sharing ([COBIDAS](https://www.humanbrainmapping.org/i4a/pages/index.cfm?pageid=3728)) of OHBM released a [report](https://www.biorxiv.org/content/10.1101/054262v2) to promote best practices for methods and results reporting. This was recently followed by a [similar initiative for EEG and MEG](https://osf.io/a8dhx/).\r\n\r\nSo far these guidelines do not seem to have been widely adopted and anecdotal evidence ([see that twitter poll and thread](https://treeverse.app/view/Xf3jfvIZ)) suggests that even among people who know about the report few of them use it to write or review papers. One likely reason for this might be the unwieldy nature of the report. Anyone who has used this checklist tends to agree that it is a great resource but that it is a bit cumbersome to interpret and apply.\r\n\r\nSo the short term goal of this project is to facilitate the use of this checklist. But, if done right, this could also in the long term enhance the adoption of emerging neuroimaging standards ([the Brain imaging data structure](https://github.com/ohbm/hackathon2019/blob/master/Tutorial_Resources.md#the-brain-imaging-data-structure-bids), fMRIprep, NIDM...), facilitate data sharing and pre-registration, help with peer-review...\r\n\r\n### Short term goal\r\n\r\n**The short term goal of this project is to make the COBIDAS report easier to use: we want to create a website with a clickable checklist that generates a json file at the end.**\r\n\r\nBy turning the checklist into a website users could more rapidly click through it and provide more of the information requested by the COBIDAS report. This would generate a small text file (a json file) that summarizes what option was chosen for each item of the checklist. This machine readable file could then be used to automatically generate part of the methods section of an article.\r\n\r\nOther potential goals (e.g. interaction with BIDS and NIDM, further integration with main neuroimaging softwares...) and potential applications (improving data-sharing and peer-review) of this project are described in this [repository](https://github.com/Remi-Gau/COBIDAS_chckls).\r\n\r\n\r\n## Skills required to participate\r\n\r\nOne or more of those:\r\n\r\n- To be enthusiastic about reproducibility\r\n- Familiarity with the COBIDAS report for f/MRI, MEEG,\r\n- To know something about web design,\r\n- Familiarity with one or more of the main neuroimaging software for [fMRI](https://github.com/ohbm/hackathon2019/blob/master/Tutorial_Resources.md#neuroimaging) (SPM, FSL...) or for [M/EEG](https://github.com/ohbm/hackathon2019/blob/master/Tutorial_Resources.md#main-eeg-and-meg-softwares) (Fieldtrip, EEGlab...)\r\n\r\n\r\n## Milestones\r\n\r\n- Discuss conceptual and structural details of the COBIDAS-json file.\r\n\r\n- Create a template of the COBIDAS-json file\r\n\r\n- Create a proof of concept website that can:\r\n  - given a template COBIDAS-json file generates a checklist to clicked through by users,\r\n  - outputs a populated COBIDAS-json file once the user is done,\r\n  - generate a method section using a populated COBIDAS-json file.\r\n\r\n\r\n## Preparation material\r\n\r\nJeanette Mumford has a [30 min video](https://www.youtube.com/watch?v=bsM4KowO5Vc&t=175s) on her youtube channel explaining the background behind the COBIDAS report and giving a run through of the checklist.\r\n\r\nThe COBIDAS report:\r\n- [for MRI and fMRI](https://www.biorxiv.org/content/10.1101/054262v2)\r\n- [for EEG and MEG](https://osf.io/a8dhx/)\r\n\r\nA [spreadsheet version](https://osf.io/qkb9t/) of the COBIDAS checklist (thanks to [Cass](https://github.com/cassgvp)!!!)\r\n\r\n[The secret lives of experiments: methods reporting in the fMRI literature](https://www.ncbi.nlm.nih.gov/pubmed/22796459)\r\n\r\n[A manifesto for reproducible science](https://www.nature.com/articles/s41562-016-0021)\r\n\r\n## GitHub repo\r\n\r\n[The github repository of this project can be found here](https://github.com/Remi-Gau/COBIDAS_chckls)\r\n\r\n\r\n## Communication\r\n\r\nCome and join us on the `cobidas_checklist` channel on [the brainhack mattermost ](https://mattermost.brainhack.org/brainhack/channels/cobidas_checklist).\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/49/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/49/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/48",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/48/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/48/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/48/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/48",
        "id": 439513096,
        "node_id": "MDU6SXNzdWU0Mzk1MTMwOTY=",
        "number": 48,
        "title": "A modular design matrix toolbox",
        "user": {
            "login": "TimVanMourik",
            "id": 6152205,
            "node_id": "MDQ6VXNlcjYxNTIyMDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6152205?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TimVanMourik",
            "html_url": "https://github.com/TimVanMourik",
            "followers_url": "https://api.github.com/users/TimVanMourik/followers",
            "following_url": "https://api.github.com/users/TimVanMourik/following{/other_user}",
            "gists_url": "https://api.github.com/users/TimVanMourik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TimVanMourik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TimVanMourik/subscriptions",
            "organizations_url": "https://api.github.com/users/TimVanMourik/orgs",
            "repos_url": "https://api.github.com/users/TimVanMourik/repos",
            "events_url": "https://api.github.com/users/TimVanMourik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TimVanMourik/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717373,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhvQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_tools_skills:expert",
                "name": "project_tools_skills:expert",
                "color": "c2e0c6",
                "default": false,
                "description": ""
            },
            {
                "id": 4686717390,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhzg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_type:visualisation",
                "name": "project_type:visualisation",
                "color": "c5def5",
                "default": false,
                "description": ""
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850416369,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt68Q",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/FSL",
                "name": "FSL",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850416371,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt68w",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/SPM",
                "name": "SPM",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2019-05-02T10:03:50Z",
        "updated_at": "2022-11-28T16:19:47Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "# A Modular Design Matrix Toolbox\r\n  _Cool acronym to be determined_\r\n\r\n## Project Description\r\n\r\nHave you ever created a design matrix and had trouble with adding this one custom regressor? Or adding SPM motion parameters to an FSL design? Or how to orthogonalise some specific regressors, but not the other ones?\r\n\r\nTraditional GUIs try to construct design matrices all at once, leaving little room for customisation. Wouldn't it be great to build a GLM design piece by piece, like stacking up Lego bricks? This project is about making such a toolbox.\r\n\r\nMy proposal is to make a toolbox with which you can connect little pieces of the design to build the full design. I started this at some point by making a dozen components as [MATLAB functions](https://github.com/TimVanMourik/OpenFmriAnalysis/tree/master/Interface/DesignMatrix)\r\nthat can be connected. This is part of my own code toolbox, but I would like the design matrix to be a separate toolbox, ideally reimplemented in Python. \r\n\r\n### Goals\r\n#### Main goals\r\n* Think about the minimal needs for specifying a design matrix (e.g., time unit, regressor specification, etc.).\r\n* Implement a structure (e.g., Python class, file type) to put this into code\r\n* Think of several components that could be implemented (e.g., see these\r\n[MATLAB functions](https://github.com/TimVanMourik/OpenFmriAnalysis/tree/master/Interface/DesignMatrix))\r\n\r\n#### Stretch goals\r\n* Write compatibility functions to SPM, FSL, etc. to export the design to use it in standard pipelines.\r\n* Write design matrix modules for all existing SPM/FSL functionality\r\n* Implement different HRF shapes for the toolbox.\r\n* Thinking about first and second level designs.\r\n\r\n#### Blue sky goals\r\nConnect it to a visual editor such as [GiraffeTools](https://giraffe.tools/porcupine/TimVanMourik/OpenFmriAnalysis) to edit and save the design in an open format: \r\n![DESIGN](https://user-images.githubusercontent.com/6152205/57067025-2cab5700-6cce-11e9-8ae9-bfc62b692309.jpeg)\r\n\r\n\r\n## Skills required to participate\r\n* Some knowledge of GLMs (ideally at least on expert on the team)\r\n* Basic Python or interested to learn it. Ideally one Python expert to do the toolbox overhead.\r\n  * As each function can be considered separately (=modular), this is a **really good project** to hop on if you're a **Python beginner**.\r\n\r\n## Integration\r\nThe stretch goals and blue sky goals target to provide incremental compatibility and integration with existing software and online visualisation and communication.\r\n\r\n## Preparation material\r\n* Read up on your GLM basics! :)\r\n* A start of this idea in MATLAB:  https://github.com/TimVanMourik/OpenFmriAnalysis/tree/master/Interface/DesignMatrix\r\n\r\n## Link to your GitHub repo\r\nNon-existent yet.\r\n\r\n## Communication\r\nBrainhack slack for now. I'll make a dedicated channel or workspace as soon as there's a team.\r\n\r\n## Additional information\r\nI might be somewhat busy as I'm also organising the OHBM Open Science Room. I can't fully commit to this project just yet, but I'll definitely help out during the Hackathon. I'm completely fine with someone else taking the lead on this.\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/48/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/48/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/47",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/47/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/47/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/47/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/47",
        "id": 439323049,
        "node_id": "MDU6SXNzdWU0MzkzMjMwNDk=",
        "number": 47,
        "title": "Extending Open-Brain-Consent to support GDPR requirements and include step-by-step examples",
        "user": {
            "login": "jsheunis",
            "id": 10141237,
            "node_id": "MDQ6VXNlcjEwMTQxMjM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10141237?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsheunis",
            "html_url": "https://github.com/jsheunis",
            "followers_url": "https://api.github.com/users/jsheunis/followers",
            "following_url": "https://api.github.com/users/jsheunis/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsheunis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsheunis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsheunis/subscriptions",
            "organizations_url": "https://api.github.com/users/jsheunis/orgs",
            "repos_url": "https://api.github.com/users/jsheunis/repos",
            "events_url": "https://api.github.com/users/jsheunis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsheunis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4850410522,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtkGg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/BIDS",
                "name": "BIDS",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-05-01T21:00:15Z",
        "updated_at": "2022-11-28T16:19:42Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "# Extending Open-Brain-Consent to support GDPR requirements and include step-by-step examples\r\n\r\nStephan Heunis\r\n\r\n## Project Description\r\n\r\nResponsible sharing of data and code that underlie the results of a scientific study is an important step towards improving research transparency, fostering inclusivity and building public trust in science. In health sciences, and neuroimaging research in particular, an important factor when sharing  data is privacy of personal or sensitive data. Ethical review boards at research institutions are responsible for reviewing a study protocol and deciding whether it can continue based on its adherence to the relevant ethical and research integrity principles, wich typically include regulations on personal data privacy. In the European Union, such data privacy requirements are subject to the [General Data Protection Regulation (GDPR)](https://en.wikipedia.org/wiki/General_Data_Protection_Regulation) as implemented by its member countries.\r\n\r\nDespite the increased importance that funders and instituions are starting to place on open science practices, no clear, thorough and openly available guides exist for publicly sharing neuroimaging data under GDPR. One resource, [Open Brain consent](https://open-brain-consent.readthedocs.io/en/stable/index.html), has rendered an important service by making template consent forms available in multiple languages with the aim of allowing \"collected imaging data to be shared as openly as possible while providing adequate guarantees for subjects\u2019 privacy\". However, some aspects related to GDPR are lacking, e.g. more detailed information on the process of acquiring, processing and anonymising data; specifications on data processing and protection roles; and a detailed data privacy statement.\r\n\r\nThe overall goal of this OHBM hackathon project is to extend the content of [Open Brain consent](https://open-brain-consent.readthedocs.io/en/stable/index.html) with GDPR-related templates and thorough real-world examples. Ideally, this additional information would serve as a step-by-step guide for researchers during the process of obtaining ethical approval for an EU-based study, specifically where the aim is to share neuroimaging data publicly. Some progress has been made previously, see [issue 24](https://github.com/datalad/open-brain-consent/issues/24) on the Open Brain Consent [github page](https://github.com/datalad/open-brain-consent). Our goal is to extend this with (among others):\r\n- A primer on the implications of specific GDPR recitals for open neuroimage data sharing\r\n- A template information letter\r\n- A template data privacy statement\r\n- A template informed consent letter\r\n- Updated resources regarding neuroimage anonymisation tools and processes\r\n- A step-by-step guide to putting the above information together for an ethical review board, and a similar guide to executing the steps once approval is granted.\r\n \r\n## Skills required to participate\r\nAnyone with experience in one or more of the following aspects could contribute:\r\n- Neuroimage data anonymisation, open data structures (BIDS), and data sharing. (tool use, scripting/programming, and/or process knowledge)\r\n- Neuroimaging-related ethical approval processes in EU institutions\r\n- Ensuring adherence of (neuroimaging) studies to GDPR regulations\r\n- Data stewards or data protection officers\r\n\r\nAdditionally, people with the following skills/attributes could also contribute, irrespective of previous experience:\r\n- A passion for open data and code and for helping others achieve this in practice\r\n- Technical writing\r\n- Tutorial writing\r\n- Graphic design (to create illustrative examples and explanations)\r\n\r\n## Preparation material\r\nWe have started a [google doc](https://docs.google.com/document/d/1kDo4hweUdHhtigD9gDqwIYjlYXLG2vJuz-JcE8hpbNA/edit?usp=sharing) with links to background reading material, useful resources and preliminary notes. We will likely use this google doc throughout the hackathon. Please feel free to add your comments and content to this document.\r\n\r\n## Link to GitHub repo\r\n[This is the Github Repo](https://github.com/datalad/open-brain-consent) of the existing Open Brain Consent website, with an explanatory [ReadMe](https://github.com/datalad/open-brain-consent/blob/master/README.rst).\r\n\r\n## Communication\r\nIf you want to contribute to this project, please feel free to join the [Brainhack Mattermost community server](https://mattermost.brainhack.org/brainhack/) and join our existing communication channel \"open_brain_gdpr\" or find me (Stephan Heunis / jsheunis) with a direct message. During the hackathon we will keep a video call open continuously for remote participants. You can access this video call at any time [via hangouts](https://hangouts.google.com/call/pLC6VrTusVOmrt9WEXC5AEEI?no_rd).",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/47/reactions",
            "total_count": 4,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/47/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/41",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/41/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/41/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/41/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/41",
        "id": 431528084,
        "node_id": "MDU6SXNzdWU0MzE1MjgwODQ=",
        "number": 41,
        "title": "Automatized creation of functional region of interests (ROIs) using Python tools",
        "user": {
            "login": "ilkayisik",
            "id": 22478219,
            "node_id": "MDQ6VXNlcjIyNDc4MjE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/22478219?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ilkayisik",
            "html_url": "https://github.com/ilkayisik",
            "followers_url": "https://api.github.com/users/ilkayisik/followers",
            "following_url": "https://api.github.com/users/ilkayisik/following{/other_user}",
            "gists_url": "https://api.github.com/users/ilkayisik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ilkayisik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ilkayisik/subscriptions",
            "organizations_url": "https://api.github.com/users/ilkayisik/orgs",
            "repos_url": "https://api.github.com/users/ilkayisik/repos",
            "events_url": "https://api.github.com/users/ilkayisik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ilkayisik/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717373,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhvQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_tools_skills:expert",
                "name": "project_tools_skills:expert",
                "color": "c2e0c6",
                "default": false,
                "description": ""
            },
            {
                "id": 4850406950,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWJg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRI",
                "name": "MRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850409552,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtgUA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/fMRI",
                "name": "fMRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850415811,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt4ww",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Julia",
                "name": "Julia",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850415818,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt4yg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Matlab",
                "name": "Matlab",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850415822,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt4zg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/physiology",
                "name": "physiology",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2019-04-10T14:13:30Z",
        "updated_at": "2022-11-28T16:19:36Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Automatized creation of functional region of interests (ROIs) using Python tools\r\n\r\nIlkay Isik [ORCID](https://orcid.org/0000-0002-1652-9297)\r\n\r\n## Project Description\r\n\r\nFunctionally defining regions of interests is a common methodology in cognitive neuroscience due to the greater sensitivity and higher functional resolution it provides over group-based methods (Nieto-Castanon and Fedorenko, 2012). In this approach, a set of functional regions are defined in each individual using a localizer contrast targeting the cognitive process of interest (e.g. fusiform face area (FFA) obtained by contrasting Faces vs Objects).\r\nHowever, there is not a commonly accepted and automatized way of delineating and selecting these ROIs. The traditional method is to select subject specific ROIs by examining the activation maps for the localizer contrast and decide which voxels to include manually using anatomy knowledge as a guide. However, even expert coders might disagree due to the high individual variability. Furthermore, when these ROIs happen to be located close to each other, it is not very straightforward how to draw the border between them.\r\n\r\nFedorenko et al (2010) and Julian et al (2012) were concerned about these problems\r\nand they offered the following steps in order to automate the creation of ROIs algorithmically:\r\n\r\n<img width=\"847\" alt=\"Fedorenko_2010\" src=\"https://user-images.githubusercontent.com/22478219/55884054-b07a9380-5ba7-11e9-9dcd-110fed4f6f37.png\">\r\n\r\n\r\n###### Image used with permission from Dr. Evelina Fedorenko\r\n\r\nThe authors have used Matlab to accomplish these goals.\r\nIn this project, we aim to use Python tools and create a Python package which automatically creates functional region of interests.\r\nSo, this project itself is not a new idea but I believe this will be a great learning experience for me and for anyone who wants to join and contribute.\r\n\r\n## Skills required to participate\r\n- Experience in programming in Python\r\n- Familiarity with the functional localizer literature (not necessary)\r\n\r\n## Integration\r\nYou can contribute to this project by helping with\r\n- Programming [check out the tutorial resources here](https://github.com/ohbm/hackathon2019/blob/master/Tutorial_Resources.md#python)\r\n- Pick and apply an image segmentation algorithm\r\n- Documenting by improving docstrings, better commenting [check out the tutorial on documenting projects and code](https://github.com/ohbm/hackathon2019/blob/master/Tutorial_Resources.md#documenting-projects-and-code)\r\n\r\n## Preparation material\r\n- Fedorenko, E., Hsieh, P.-J., Nieto-Casta\u00f1\u00f3n, A., Whitfield-Gabrieli, S., & Kanwisher, N. (2010). New Method for fMRI Investigations of Language: Defining ROIs Functionally in Individual Subjects. Journal of Neurophysiology, 104(2), 1177\u20131194. http://doi.org/10.1152/jn.00032.2010\r\n\r\n- Julian, J. B., Fedorenko, E., Webster, J., & Kanwisher, N. (2012). An algorithmic method for functionally defining regions of interest in the ventral visual pathway. NeuroImage, 60(4), 2357\u20132364. https://doi.org/10.1016/j.neuroimage.2012.02.055\r\n\r\n- Nieto-Casta\u00f1\u00f3n, A., & Fedorenko, E. (2012). Subject-specific functional localizers increase sensitivity and functional resolution of multi-subject analyses. NeuroImage, 63(3), 1646\u20131669. https://doi.org/10.1016/j.neuroimage.2012.06.065\r\n\r\n## Link to your GitHub repo\r\n[ProjectGitHubRepo](https://github.com/ilkayisik/PyFuncROI)\r\n\r\n## Communication\r\nJoin  [![slack_brainhack_3](https://user-images.githubusercontent.com/6297454/47951457-5b37b780-df61-11e8-9d77-7b5a4c7af875.png)](https://brainhack-slack-invite.herokuapp.com/) and find channel __#pyfuncroi__",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/41/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/41/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/27",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/27/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/27/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/27/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/27",
        "id": 421530841,
        "node_id": "MDU6SXNzdWU0MjE1MzA4NDE=",
        "number": 27,
        "title": "Spatial filter design based on structure tensors for mesoscopic MR images",
        "user": {
            "login": "ofgulban",
            "id": 4668327,
            "node_id": "MDQ6VXNlcjQ2NjgzMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4668327?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ofgulban",
            "html_url": "https://github.com/ofgulban",
            "followers_url": "https://api.github.com/users/ofgulban/followers",
            "following_url": "https://api.github.com/users/ofgulban/following{/other_user}",
            "gists_url": "https://api.github.com/users/ofgulban/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ofgulban/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ofgulban/subscriptions",
            "organizations_url": "https://api.github.com/users/ofgulban/orgs",
            "repos_url": "https://api.github.com/users/ofgulban/repos",
            "events_url": "https://api.github.com/users/ofgulban/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ofgulban/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4850406950,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWJg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRI",
                "name": "MRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406968,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWOA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/diffusion",
                "name": "diffusion",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-03-15T13:56:02Z",
        "updated_at": "2022-11-28T16:19:29Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Spatial filter design based on structure tensors for mesoscopic MR images\r\nOmer Faruk Gulban ([ORCID](http://orcid.org/0000-0001-7761-3727))\r\n\r\n## Project Description\r\n\r\nUltra high field MRI (7 Tesla and above) allowed researchers to acquire human brain images at  _mesoscopic (0.1 to 0.5 mm)_ isotropic voxel resolutions _in-vivo_[*](https://www.nature.com/articles/sdata201732).  Here is an example of such image (350 micron isotropic) acquired at 9.4T scanner using a custom-design coil at Maastricht University:\r\n\r\n![figure_1](https://user-images.githubusercontent.com/4668327/54432503-b062b180-4729-11e9-8784-52a1781f3d7b.png)\r\n\r\nThere are several interesting details that appear at this resolution which are not visible in conventional in-vivo anatomical images. Such as the _smaller blood vessels_ within gray and white matter (see the dark lines) or _layers within gray matter_ (faintly visible in this image). Generating such images currently requires averaging across multiple repeated acquisitions. This is because the benefits of ultra high field are traded away to increase the spatial resolution at the cost of decreased signal-to-noise ratio (SNR). Consequently, repeating acquisitions to increase SNR takes a lot of time, so much so that there is no time left for acquiring functional images within the same scanning session.\r\n\r\nIn this project, I would like to test the possibility of replacing the repeated image acquisitions (to some extent) with a _specific type of filtering_ to increase SNR. By saying specific, I mean a family of filters that make use of a tensor field derived from the images themselves. These tensors are called [structure tensors](https://en.wikipedia.org/wiki/Structure_tensor?wprov=sfti1).\r\n\r\nI have selected this type of filter to satisfy a few constraints. The selected filter should be:  \r\n\r\n- able to preserve important edges while mitigating noise.  \r\n- applicable to partial coverage (custom coil) images.  \r\n- applicable to multi-echo MR images.  \r\n- applicable to complex-domain images.  \r\n\r\nHere is an animation created from one of my pilot implementations on an artificially noised 7T T1w image:\r\n<img align=\"left\" src=\"https://user-images.githubusercontent.com/4668327/54432515-b9538300-4729-11e9-8de2-130c1efe222a.gif\" width=\"300\" />\r\nI think this implementation can be improved, applied to other image types and validated further.\r\n\r\nThis project is _by no means a novel implementation of such a filter_ (see [Mirebeau et al. 2015](http://arxiv.org/abs/1503.00992)). However, the application to ultra-high field MRI in the context of multi-echo and complex domain images might be novel. If for nothing, I think this project would be helpful for interested people to gain deeper understanding of tensor fields, their role in diffusion and insight on some of the current challenges of _in-vivo mesoscopic MRI at 7 & 9.4T_.\r\n\r\n---\r\n\r\n## Skills required to participate\r\n- Experience in programming (mainly Python, Cython or C might come in handy (see [related tutorials here](https://github.com/ohbm/hackathon2019/blob/master/Tutorial_Resources.md#specific-topics)).\r\n- Experience in (anatomical) MR image analysis or acquisition.\r\n\r\n## Integration\r\nPeople can join by contributing to the following:\r\n\r\n- __Programming:__ Scrutinizing code by writing test cases, optimizing for faster runtime, improving user interface (see [related tutorials here](https://github.com/ohbm/hackathon2019/blob/master/Tutorial_Resources.md#specific-topics)).\r\n\r\n- __Documenting:__ Improving docstrings (see [tutorials](https://github.com/ohbm/hackathon2019/blob/master/Tutorial_Resources.md#documenting-projects-and-code)), application to different cases, helping in quantification of performance against other methods.\r\n\r\n- __In other ways__ that I couldn't think of here.\r\n\r\n### Milestones\r\n1. Discuss conceptual and implementational details of the filter.\r\n\r\n2. Implement the filter usable though a command-line interface.\r\n\r\n3. Apply it to empirical data (e.g. 7T & 9.4T images that I will bring) and evaluate the results.\r\n\r\n## Preparation material\r\n- [Here](https://github.com/ofgulban/segmentator/wiki/Nonlinear-anisotropic-smoothing) is a small post about my previous implementation and a few extra details.\r\n- Weickert, J. (1998). [Anisotropic diffusion in image processing](https://www.mia.uni-saarland.de/weickert/Papers/book.pdf). ECMI.\r\n- [Wikipedia's structure tensor page](https://en.wikipedia.org/wiki/Structure_tensor?wprov=sfti1).  \r\n- Mirebeau, J.-M., Fehrenbach, J., Risser, L., & Tobji, S. (2015). [Anisotropic Diffusion in ITK](http://arxiv.org/abs/1503.00992), 1\u20139.\r\n\r\n## GitHub repository\r\nI am planning to implement this filter as an additional feature in [a small free and open source project](https://github.com/ofgulban/iphigen) that has a few other image processing algorithms implemented for 2D and 3D images.\r\n\r\n## Communication\r\nChat on [gitter](https://gitter.im/iphigen/community).\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/27/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/27/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]