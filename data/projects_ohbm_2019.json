[
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/100",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/100/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/100/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/100/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/100",
        "id": 455744698,
        "node_id": "MDU6SXNzdWU0NTU3NDQ2OTg=",
        "number": 100,
        "title": "Collaborate review Top 10 FAIR things for imaging",
        "user": {
            "login": "orchid00",
            "id": 9795785,
            "node_id": "MDQ6VXNlcjk3OTU3ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9795785?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orchid00",
            "html_url": "https://github.com/orchid00",
            "followers_url": "https://api.github.com/users/orchid00/followers",
            "following_url": "https://api.github.com/users/orchid00/following{/other_user}",
            "gists_url": "https://api.github.com/users/orchid00/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orchid00/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orchid00/subscriptions",
            "organizations_url": "https://api.github.com/users/orchid00/orgs",
            "repos_url": "https://api.github.com/users/orchid00/repos",
            "events_url": "https://api.github.com/users/orchid00/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orchid00/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-06-13T13:32:49Z",
        "updated_at": "2022-11-28T16:16:35Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Top 10 FAIR things for imaging\r\n\r\n## Project Description\r\n\r\nThis document aims to promote the use of FAIR principles in the bioimaging community. We will start by describing what are the FAIR principles, and then linking questions to examples of application. This guide is to enhance research data quality and empower researchers, scientists and health professionals to incorporate best data practices throughout the research cycle. \r\nThis is a continuation of Top 10 FAIR Data & Software Things\r\nhttps://www.go-fair.org/2019/02/20/top-10-fair-data-software-things-published/ \r\n \r\nTo inform data producers and data users about the FAIR principles applied to imaging and suggest activities to apply to their research.\r\n\r\n\r\n## Skills required to participate\r\nAnyone should be able to read and provide all kinds all feedback, I welcome more activities to be added and examples and resources.\r\n\r\n## Integration\r\nHow would your project integrate a neuroimager/clinician/psychologist/computational scientist?\r\nthe top 10 FAIR things for imaging is a broad but simple guide\r\n\r\n## Preparation material\r\nhave a look https://osf.io/preprints/xs9nh/\r\n\r\n\r\n## how to contribute\r\nI'm looking for reviewers until end of june 2019\r\n\r\n## Communication\r\nplease email me, you can find my email in the document\r\n\r\nhttps://osf.io/preprints/xs9nh/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/100/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/100/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/99",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/99/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/99/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/99/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/99",
        "id": 453661380,
        "node_id": "MDU6SXNzdWU0NTM2NjEzODA=",
        "number": 99,
        "title": "Correction of signal intensity fluctuations in DWI multi-protocol acquisitions",
        "user": {
            "login": "Lestropie",
            "id": 5637955,
            "node_id": "MDQ6VXNlcjU2Mzc5NTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5637955?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lestropie",
            "html_url": "https://github.com/Lestropie",
            "followers_url": "https://api.github.com/users/Lestropie/followers",
            "following_url": "https://api.github.com/users/Lestropie/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lestropie/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lestropie/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lestropie/subscriptions",
            "organizations_url": "https://api.github.com/users/Lestropie/orgs",
            "repos_url": "https://api.github.com/users/Lestropie/repos",
            "events_url": "https://api.github.com/users/Lestropie/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lestropie/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717336,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhmA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 4686717369,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhuQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_type:documentation",
                "name": "project_type:documentation",
                "color": "c5def5",
                "default": false,
                "description": ""
            },
            {
                "id": 4686717374,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhvg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_tools_skills:familiar",
                "name": "project_tools_skills:familiar",
                "color": "c2e0c6",
                "default": false,
                "description": ""
            },
            {
                "id": 4850406945,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWIQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/DWI",
                "name": "DWI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406950,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWJg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRI",
                "name": "MRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406962,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWMg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRtrix",
                "name": "MRtrix",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406968,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWOA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/diffusion",
                "name": "diffusion",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-06-07T19:28:30Z",
        "updated_at": "2022-11-28T16:17:09Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "# Correction of signal intensity fluctuations in DWI multi-protocol acquisitions\r\n\r\n*(Note: Submitting project after completion rather than before; but felt it appropriate to document for prosperity)*\r\n\r\n## Project Description\r\n\r\nMany modern Diffusion-Weighted Imaging (DWI) models rely on what is known as a \"multi-shell\" acquisition: this refers to the acquisition of image volumes where not only the *direction* of diffusion sensitisation is varied, but also the *magnitude* of that sensitisation, with groups of volumes where the sensitisation magnitude is equivalent but the direction differs referred to as \"shells\".\r\n\r\nOn some scanner platforms, acquisition of such data relies on executing multiple acquisition protocols, each with selection of a unique \"*b*-value\" (strength of diffusion sensitisation), rather than the ideal scenario where all image volumes are acquired in a single acquisition.\r\n\r\nThis presents a potential issue in the amalgamation of such data. It is possible for scanner frequency recalibration / ADC gain / FFT multiplication factor / other factors to be adjusted in between protocols. If this occurs, then the quantitative relationships between the different image volumes may be violated.\r\n\r\nThis project is a proposed retrospective fix to this problem. Each DWI acquisition will additionally contain so-called \"*b*=0\" volumes: these are image volumes where no diffusion sensitisation is applied. If there are undesirable differences in signal amplitudes between the different acquisition protocols, this should be evident as differences in the signal amplitudes between the *b*=0 volumes of the various acquisitions. We can therefore use the differences between these images to estimate an appropriate intensity multiplicative factor to then apply to all of the volumes in each acquisition, in order to attempt to correct for any such inter-protocol scaling that may have occurred.\r\n\r\n## Skills required to participate\r\n\r\nAt least some experience with Python is required.\r\n\r\nSome familiarity with performing basic operations on MRI image data.\r\n\r\nKnowledge of *MRtrix3* commands would be ideal, but not necessary. \r\n\r\n## Integration\r\n\r\nContributors to the proposed script will have the opportunity to inherit attribution of the developed code, via `git` contribution history & statistics, authorship of the developed script (which is reported in online & integrated command documentation), and avatar appearance on the main *MRtrix3* website as a contributor to the project.\r\n\r\nAnyone possessing image data that suffers from the described issue who could assist in testing the proposed solution would also be thanked for their contribution in the relevant Pull Request.\r\n\r\n## Preparation material\r\n\r\n- *MRtrix3* preprint: https://www.biorxiv.org/content/10.1101/551739v1\r\n   (provides basic example usage of Python API)\r\n\r\n- Original issue submission on *MRtrix3* repository: https://github.com/MRtrix3/mrtrix3/issues/1428\r\n\r\n## Link to your GitHub repo\r\n\r\n*MRtrix3* repository: https://github.com/MRtrix3/mrtrix3\r\n\r\n## Communication\r\n \r\nProject can be discussed directly on the [relevant GitHub issue](https://github.com/MRtrix3/mrtrix3/issues/1428).\r\n\r\nOngoing private communications regarding the project can be made via private messages on the [*MRtrix3* community forum](http://community.mrtrix.org/) ([link to my account](http://community.mrtrix.org/u/rsmith))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/99/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/99/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/98",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/98/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/98/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/98/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/98",
        "id": 453059910,
        "node_id": "MDU6SXNzdWU0NTMwNTk5MTA=",
        "number": 98,
        "title": "Learning how to publish work online",
        "user": {
            "login": "lnnrtwttkhn",
            "id": 42233065,
            "node_id": "MDQ6VXNlcjQyMjMzMDY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/42233065?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lnnrtwttkhn",
            "html_url": "https://github.com/lnnrtwttkhn",
            "followers_url": "https://api.github.com/users/lnnrtwttkhn/followers",
            "following_url": "https://api.github.com/users/lnnrtwttkhn/following{/other_user}",
            "gists_url": "https://api.github.com/users/lnnrtwttkhn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lnnrtwttkhn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lnnrtwttkhn/subscriptions",
            "organizations_url": "https://api.github.com/users/lnnrtwttkhn/orgs",
            "repos_url": "https://api.github.com/users/lnnrtwttkhn/repos",
            "events_url": "https://api.github.com/users/lnnrtwttkhn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lnnrtwttkhn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717336,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhmA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 4686717369,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhuQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_type:documentation",
                "name": "project_type:documentation",
                "color": "c5def5",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2019-06-06T14:22:33Z",
        "updated_at": "2022-11-28T16:17:24Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Learning how to publish your work online\r\n\r\n## Project Description\r\n\r\nThe main goal is to learn how to make your work available to the world online. This can include, e.g.,\r\n* learning how to create your own personal website where you can tell the world more about yourself and host information about your work\r\n* learning how to create web-pages for your projects where you can display documentation, analysis code, results, etc.\r\n* relatedly, how to render jupyter-notebooks or RMarkdown scripts so that they can be displayed online\r\n* learning how to create a documentation, e.g. using ReadTheDocs, for a specific project / piece of software you developed\r\n\r\n## Skills required to participate\r\nI guess, none of the skills listed below are necessary required but can come in handy:\r\n* some basic knowledge of `git` could be useful, since one way of hosting (static) websites can be done through [github pages](https://pages.github.com/)\r\n* basic shell / bash knowledge could be useful, e.g., to navigate local git repositories etc.\r\n* maybe some html or javascript knowledge could be useful\r\n\r\nideally, it would be very helpful if at least one person would join who knows these things **well** to give help and could answer questions, etc.\r\n\r\n## Integration\r\nThe main goal could be to create (1) an example project website using github pages, (2) display rendered example analysis code on this website and (3) write a project documentation using e.g., Read The Docs\r\n\r\n## Preparation material\r\ntba, if someone knows helpful resources please post them here, thanks\r\n\r\n## Communication\r\ntba\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/98/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/98/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/92",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/92/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/92/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/92/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/92",
        "id": 452933665,
        "node_id": "MDU6SXNzdWU0NTI5MzM2NjU=",
        "number": 92,
        "title": "Neurolibre : A new binder publication platform",
        "user": {
            "login": "ltetrel",
            "id": 37963074,
            "node_id": "MDQ6VXNlcjM3OTYzMDc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/37963074?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ltetrel",
            "html_url": "https://github.com/ltetrel",
            "followers_url": "https://api.github.com/users/ltetrel/followers",
            "following_url": "https://api.github.com/users/ltetrel/following{/other_user}",
            "gists_url": "https://api.github.com/users/ltetrel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ltetrel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ltetrel/subscriptions",
            "organizations_url": "https://api.github.com/users/ltetrel/orgs",
            "repos_url": "https://api.github.com/users/ltetrel/repos",
            "events_url": "https://api.github.com/users/ltetrel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ltetrel/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-06-06T09:44:09Z",
        "updated_at": "2022-11-28T16:46:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Neurolibre : A new binder publication platform\r\n\r\n## Project Description\r\n\r\nNeurolibre is a curated repository of interactive neuroscience notebooks, seamlessly integrating data, text, code and figures. Notebooks can be freely modified and re-executed through the web, offering a fully reproducible, \u201clibre\u201d path from data to figures. Neurolibre is powered by the Binder project, with computational resources provided by CONP, CBRAIN and Compute Canada.\r\n\r\nWe need help to create our publication process. The server is using binderhub technology (docker, kubernetes).\r\n\r\n## Skills required to participate\r\n\r\nKnowledge of jupyter notebooks\r\nKubernetes\r\nDocker\r\n\r\n## Integration\r\nhttps://conp-pcno.github.io/\r\n\r\n## Preparation material\r\nhttps://mybinder.readthedocs.io/en/latest/\r\n\r\n## Link to your GitHub repo\r\nhttps://github.com/neurolibre",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/92/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/92/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/90",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/90/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/90/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/90/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/90",
        "id": 452921498,
        "node_id": "MDU6SXNzdWU0NTI5MjE0OTg=",
        "number": 90,
        "title": "Nipype-ify Denoiser",
        "user": {
            "login": "danlurie",
            "id": 1873103,
            "node_id": "MDQ6VXNlcjE4NzMxMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1873103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danlurie",
            "html_url": "https://github.com/danlurie",
            "followers_url": "https://api.github.com/users/danlurie/followers",
            "following_url": "https://api.github.com/users/danlurie/following{/other_user}",
            "gists_url": "https://api.github.com/users/danlurie/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danlurie/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danlurie/subscriptions",
            "organizations_url": "https://api.github.com/users/danlurie/orgs",
            "repos_url": "https://api.github.com/users/danlurie/repos",
            "events_url": "https://api.github.com/users/danlurie/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danlurie/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717336,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhmA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 4686717369,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhuQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_type:documentation",
                "name": "project_type:documentation",
                "color": "c5def5",
                "default": false,
                "description": ""
            },
            {
                "id": 4686717374,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhvg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_tools_skills:familiar",
                "name": "project_tools_skills:familiar",
                "color": "c2e0c6",
                "default": false,
                "description": ""
            },
            {
                "id": 4850406950,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWJg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRI",
                "name": "MRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850409552,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtgUA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/fMRI",
                "name": "fMRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850409556,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtgVA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Nipype",
                "name": "Nipype",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-06-06T09:18:59Z",
        "updated_at": "2022-11-28T16:17:50Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Nipype-ify Denoiser\r\n\r\n## Project Description\r\nAdapt the [Denoiser nuisance cleaning pipeline](https://github.com/arielletambini/denoiser) to be a Nipype workflow and use existing workflows/nodes (e.g. from Niworkflows). \r\n\r\n## Skills required to participate\r\n\r\nBasic experience with Python programming. You don't need to know Nipype already; we can learn together!\r\n\r\n## Integration\r\nIf you're not a programer, but are familiar with fMRI pre- and post-processing, you can contribute by helping to test the code on your data, helping to write documentation, and by suggesting ideas of new features you would like to see included in future versions.\r\n\r\n## Preparation material\r\n- [Nipype tutorials](https://miykael.github.io/nipype_tutorial/).\r\n\r\n## Link to your GitHub repo\r\n- [Original Denoiser repo](https://github.com/arielletambini/denoiser).\r\n- [My fork of Denoiser](https://github.com/danlurie/denoiser).\r\n\r\n## Communication\r\nIf there's interest in collaborating, reply here and we'll set up a channel on Mattermost!\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/90/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 2,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/90/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/89",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/89/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/89/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/89/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/89",
        "id": 452911771,
        "node_id": "MDU6SXNzdWU0NTI5MTE3NzE=",
        "number": 89,
        "title": "BIDS Execution spec / BIDS Apps 2.0",
        "user": {
            "login": "effigies",
            "id": 83442,
            "node_id": "MDQ6VXNlcjgzNDQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/83442?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/effigies",
            "html_url": "https://github.com/effigies",
            "followers_url": "https://api.github.com/users/effigies/followers",
            "following_url": "https://api.github.com/users/effigies/following{/other_user}",
            "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/effigies/subscriptions",
            "organizations_url": "https://api.github.com/users/effigies/orgs",
            "repos_url": "https://api.github.com/users/effigies/repos",
            "events_url": "https://api.github.com/users/effigies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/effigies/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717442,
                "node_id": "LA_kwDOCUpq1c8AAAABF1miAg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/tools:BIDS",
                "name": "tools:BIDS",
                "color": "0052cc",
                "default": false,
                "description": ""
            },
            {
                "id": 4850410522,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtkGg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/BIDS",
                "name": "BIDS",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-06-06T08:58:37Z",
        "updated_at": "2022-11-28T16:18:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# BIDS Execution spec / BIDS Apps 2.0\r\n\r\n## Project Description\r\n\r\n\r\nI have the start of a draft here: https://docs.google.com/document/d/104HLZedFtx0TaXEUwd7eyWvJUlc0CcSUtCzwjNgmGxE/edit#heading=h.4k1noo90gelw\r\n\r\nIt's based on some notes here: https://docs.google.com/document/d/1NQe5qP0VdfqPI5nl2cIQKzii70ndpPJEzemzK4qn6uY/edit#heading=h.usmuhelpi8fq\r\n\r\n## Skills required to participate\r\n\r\nReading and writing.\r\n\r\n<!-- BIDS -->\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/89/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/89/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/88",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/88/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/88/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/88/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/88",
        "id": 452910926,
        "node_id": "MDU6SXNzdWU0NTI5MTA5MjY=",
        "number": 88,
        "title": "Tutorials for manipulating neuroimaging data in Python (nibabel)",
        "user": {
            "login": "effigies",
            "id": 83442,
            "node_id": "MDQ6VXNlcjgzNDQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/83442?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/effigies",
            "html_url": "https://github.com/effigies",
            "followers_url": "https://api.github.com/users/effigies/followers",
            "following_url": "https://api.github.com/users/effigies/following{/other_user}",
            "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/effigies/subscriptions",
            "organizations_url": "https://api.github.com/users/effigies/orgs",
            "repos_url": "https://api.github.com/users/effigies/repos",
            "events_url": "https://api.github.com/users/effigies/events{/privacy}",
            "received_events_url": "https://api.github.com/users/effigies/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717336,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhmA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 4686717369,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhuQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_type:documentation",
                "name": "project_type:documentation",
                "color": "c5def5",
                "default": false,
                "description": ""
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406962,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWMg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRtrix",
                "name": "MRtrix",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850409556,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtgVA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Nipype",
                "name": "Nipype",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850534752,
                "node_id": "LA_kwDOCUpq1c8AAAABIR1JYA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Jupyter",
                "name": "Jupyter",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-06-06T08:56:48Z",
        "updated_at": "2022-11-28T16:53:57Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Tutorials for manipulating neuroimaging data in Python\r\n\r\n## Project Description\r\n\r\nA large number of file formats used in neuromaging analysis have Python support (many of them in [nibabel](https://github.com/nipy/nibabel), although a number of one-off packages exist). However, documentation may be missing or difficult to find. A useful resource would be a consolidated set of tutorials that walk through loading, modifying, creating, saving and visualizing files.\r\n\r\nIf you have experience with a file format you'd like to share, cool. If you have a file format you want to learn to work with, we can explore them in Jupyter notebooks, and turn those explorations into tutorials.\r\n\r\n## Skills required to participate\r\nAt least one of these would be good to have:\r\n\r\n1) Python (especially Python 3) and [numpy](https://docs.scipy.org/doc/numpy/) experience.\r\n2) Experience working with at least one neuroimaging data format.\r\n\r\nBut neither is necessary.\r\n\r\n## Preparation material\r\n\r\nSome official (or semi-official), non-Python, documentation for existing formats (in no principled order):\r\n\r\n* [NIfTI-1](https://nifti.nimh.nih.gov/nifti-1/)\r\n* [NIfTI-2](https://nifti.nimh.nih.gov/nifti-2/)\r\n* [GIFTI](https://www.nitrc.org/projects/gifti/)\r\n* [CIFTI-2](https://www.nitrc.org/projects/cifti)\r\n* [MINC1](https://en.wikibooks.org/wiki/MINC/SoftwareDevelopment/MINC1_File_Format_Reference)\r\n* [MINC2](https://en.wikibooks.org/wiki/MINC/SoftwareDevelopment/MINC2.0_Users_Guide)\r\n* [BRIK](https://sscc.nimh.nih.gov/afni/doc/faq/39)/[HEAD](https://afni.nimh.nih.gov/pub/dist/doc/program_help/README.attributes.html)\r\n* [MGH](https://surfer.nmr.mgh.harvard.edu/fswiki/FsTutorial/MghFormat), [DICOM](https://www.dicomstandard.org/)\r\n* [TrackVis `.trk`](https://surfer.nmr.mgh.harvard.edu/fswiki/FreeSurferTrackVisTransforms)\r\n* [MRtrix `.tck`](https://mrtrix.readthedocs.io/en/latest/getting_started/image_data.html#tracks-file-format-tck)\r\n\r\nSome existing tutorials/resources:\r\n\r\n* [NiBabel 101](https://www.youtube.com/watch?v=9ffUQo2mF6w&list=PLNt4AJV1JZbfq0vdD4vcITV7x3OqGxLKp&t=0s&index=4) ([notebook](https://github.com/Brainhack-AMX/Brainhacking-101/blob/master/NiBabel%20101.ipynb)) covers NIfTI-1 images\r\n* From the [2017 Nipype workshop](https://nipy.org/workshops/2017-03-boston/index.html):\r\n  * Using Python for neuroimaging](https://github.com/nipy/workshops/blob/master/170327-nipype/notebooks/nibabel_nilearn/nibabel_nilearn.ipynb)\r\n  * [Surface plotting example](https://github.com/nipy/workshops/blob/master/170327-nipype/notebooks/nibabel_nilearn/plot-surfs.ipynb)\r\n\r\nNon-nibabel software:\r\n\r\n* [pdb_files](https://github.com/vistalab/pdb_files)\r\n* [pydicom](https://pydicom.github.io/pydicom/stable/)\r\n\r\nI'll add any suggestions others have. Especially if they use non-NIfTI-1 formats.\r\n\r\nProvide links to preparation material / online tutorials. You can, for example, have a look at our [list of online tutorials](Tutorial_Resources.md).\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/88/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/88/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/87",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/87/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/87/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/87/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/87",
        "id": 452910547,
        "node_id": "MDU6SXNzdWU0NTI5MTA1NDc=",
        "number": 87,
        "title": "Intro do Pydra tutorial",
        "user": {
            "login": "djarecka",
            "id": 1662746,
            "node_id": "MDQ6VXNlcjE2NjI3NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1662746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djarecka",
            "html_url": "https://github.com/djarecka",
            "followers_url": "https://api.github.com/users/djarecka/followers",
            "following_url": "https://api.github.com/users/djarecka/following{/other_user}",
            "gists_url": "https://api.github.com/users/djarecka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djarecka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djarecka/subscriptions",
            "organizations_url": "https://api.github.com/users/djarecka/orgs",
            "repos_url": "https://api.github.com/users/djarecka/repos",
            "events_url": "https://api.github.com/users/djarecka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djarecka/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4850409556,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtgVA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Nipype",
                "name": "Nipype",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850534752,
                "node_id": "LA_kwDOCUpq1c8AAAABIR1JYA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Jupyter",
                "name": "Jupyter",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-06-06T08:55:56Z",
        "updated_at": "2022-11-28T16:54:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Creating a short tutorial for a new workflow engine [Pydra](https://github.com/nipype/pydra) that will be used by new Nipype.\r\n\r\nWe will use Jupyter Notebook.",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/87/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/87/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/86",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/86/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/86/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/86/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/86",
        "id": 452910243,
        "node_id": "MDU6SXNzdWU0NTI5MTAyNDM=",
        "number": 86,
        "title": "survey of github repos in pubmed",
        "user": {
            "login": "riddlet",
            "id": 4789331,
            "node_id": "MDQ6VXNlcjQ3ODkzMzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4789331?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/riddlet",
            "html_url": "https://github.com/riddlet",
            "followers_url": "https://api.github.com/users/riddlet/followers",
            "following_url": "https://api.github.com/users/riddlet/following{/other_user}",
            "gists_url": "https://api.github.com/users/riddlet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/riddlet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/riddlet/subscriptions",
            "organizations_url": "https://api.github.com/users/riddlet/orgs",
            "repos_url": "https://api.github.com/users/riddlet/repos",
            "events_url": "https://api.github.com/users/riddlet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/riddlet/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-06-06T08:55:21Z",
        "updated_at": "2022-11-28T16:55:05Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Survey of github repos in pubmed\r\n\r\n## Project Description\r\n\r\nGithub is increasingly becoming a tool of choice for computational-oriented research. There have been plenty of efforts to get scientists to make use of this valuable tool, but to my awareness there hasn't been any attempt to evaluate how scientists use this resource.\r\n\r\nI pulled full-texts from pubmed and searched them for the presence of the string 'github' and found a bit over 20k papers that contained this string. Using these texts plus the github api I think we could provide some insight to the following:\r\n\r\n1) How many scientific repos contain a README?\r\n2) How often do often to repos contain files that are likely to be data (e.g. csv, json)\r\n3) What are the most popular types of analytic scripts (e.g. .py, .R, .ipynb, etc)?\r\n4) How do the above vary by research area?\r\n\r\n## Skills required to participate\r\n\r\nideally, experience with python or R & web-based APIs. Text analysis experience would be helpful.\r\n\r\n## Integration\r\nTBA\r\n\r\n## Preparation material\r\n\r\n[BioC API](https://www.ncbi.nlm.nih.gov/research/bionlp/APIs/BioC-PubMed/)\r\n\r\n[github API](https://developer.github.com/v3/)\r\n\r\n## Link to your GitHub repo\r\nhttps://github.com/riddlet/gitpubs\r\n\r\n## Communication\r\nWe have a mattermost channel at https://mattermost.brainhack.org/brainhack/channels/gitpubs",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/86/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/86/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/85",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/85/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/85/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/85/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/85",
        "id": 452906079,
        "node_id": "MDU6SXNzdWU0NTI5MDYwNzk=",
        "number": 85,
        "title": "Automated Web-Reports for a FreeSurfer Subjects Directory",
        "user": {
            "login": "seldamat",
            "id": 1558845,
            "node_id": "MDQ6VXNlcjE1NTg4NDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1558845?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seldamat",
            "html_url": "https://github.com/seldamat",
            "followers_url": "https://api.github.com/users/seldamat/followers",
            "following_url": "https://api.github.com/users/seldamat/following{/other_user}",
            "gists_url": "https://api.github.com/users/seldamat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seldamat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seldamat/subscriptions",
            "organizations_url": "https://api.github.com/users/seldamat/orgs",
            "repos_url": "https://api.github.com/users/seldamat/repos",
            "events_url": "https://api.github.com/users/seldamat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seldamat/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717336,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhmA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 4686717369,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhuQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_type:documentation",
                "name": "project_type:documentation",
                "color": "c5def5",
                "default": false,
                "description": ""
            },
            {
                "id": 4850417282,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt-gg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Java",
                "name": "Java",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-06-06T08:46:34Z",
        "updated_at": "2022-11-28T16:48:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Surfer Web-Gems\r\n[Demo](https://seldamat.github.io/Surfer-webgems/)\r\n\r\n## Project Description\r\n\r\nThis software in development takes a FreeSurfer subjects directory, runs some summary routines, spits out meta-information to screen/tsv, compiles papaya web viewers for each subject, and generates a folder of html files running the papaya js to show individual subject brainmasks, edits, atlases, parcellations etc. etc. and across-subject summaries (SNR/p(edit voxel)/morphometrics).\r\n\r\nThis project was somewhat sloppily developed in bits and pieces over the period of a year and needs a bit of consolidation and help from individuals with software packaging experience (I'm a bit of a novice).\r\n\r\n## Skills required to participate\r\nExperience with nipype\r\nStructural imaging (freesurfer?)\r\nBash scripting?\r\nJava scripting\r\n\r\nNeed someone to help compile surface viewers to embed in HTML hereto docs.\r\n\r\n## Integration\r\n\r\nThis package would help groups easily parse output and summary statistics of the FreeSurfer pipeline for large datasets, aiding neurologists, clinicians and scientists to easily parse and view data.\r\n\r\n### Some goals\r\nEverything is was slapped/taped/glued together using bash as a wrapper for calls to various neuroimaging softwares and using HERETO documents to automatically generate HTML webpages.  A bit of clean-up, integration with python, documentation and expansion of functionality are the immediate goals (roughly in that order).\r\n \r\n- Rewrite FreeSurfer subject's directory summaries using nipype\r\n- Consolidate all functions and calls into a singular repository (this bridges two right now)\r\n- Output meta-analytic data to JSON rather tsv\r\n- Complete cross-subject summaries\r\n- Add 3D surface viewers for pial/white surfaces with thickness/morphometric overlay\r\n\r\n## Preparation material\r\n\ud83e\udd37\u200d\u2642\ufe0f\ud83e\udd37\u200d\u2642\ufe0f\ud83e\udd37\u200d\u2642\ufe0f\ud83e\udd37\u200d\u2642\ufe0f\r\n\r\n## Link to your GitHub repo\r\n[Surfer-webgems](https://github.com/seldamat/Surfer-webgems)\r\n[Dependent on Surfer-gems](git clone https://github.com/seldamat/Surfer-gems.git)\r\n\r\n## Communication\r\n[![slack_brainhack_3](https://user-images.githubusercontent.com/6297454/47951457-5b37b780-df61-11e8-9d77-7b5a4c7af875.png)](https://mattermost.brainhack.org/brainhack/channels/surfer-webgems) \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/85/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/85/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/84",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/84/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/84/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/84/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/84",
        "id": 452905375,
        "node_id": "MDU6SXNzdWU0NTI5MDUzNzU=",
        "number": 84,
        "title": "TestKraken and Niflow",
        "user": {
            "login": "djarecka",
            "id": 1662746,
            "node_id": "MDQ6VXNlcjE2NjI3NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1662746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djarecka",
            "html_url": "https://github.com/djarecka",
            "followers_url": "https://api.github.com/users/djarecka/followers",
            "following_url": "https://api.github.com/users/djarecka/following{/other_user}",
            "gists_url": "https://api.github.com/users/djarecka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djarecka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djarecka/subscriptions",
            "organizations_url": "https://api.github.com/users/djarecka/orgs",
            "repos_url": "https://api.github.com/users/djarecka/repos",
            "events_url": "https://api.github.com/users/djarecka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djarecka/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-06-06T08:45:03Z",
        "updated_at": "2022-11-28T16:47:57Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I will be working on integration of [TestKraken](https://github.com/ReproNim/testkraken), a framework for regression testing, with [Niflow package manager tool](https://github.com/niflows/niflow-manager): a tool for packaging and sharing workflows.\r\n\r\n- [Niflow presentation](https://effigies.github.io/niflows-intro/#1)\r\n- [TestKraken presentation](https://github.com/nipype/coco2019-training/blob/master/presentations/testkraken.pdf)",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/84/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/84/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/83",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/83/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/83/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/83/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/83",
        "id": 452643692,
        "node_id": "MDU6SXNzdWU0NTI2NDM2OTI=",
        "number": 83,
        "title": "Tests for AFNI code?",
        "user": {
            "login": "leej3",
            "id": 5418152,
            "node_id": "MDQ6VXNlcjU0MTgxNTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5418152?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leej3",
            "html_url": "https://github.com/leej3",
            "followers_url": "https://api.github.com/users/leej3/followers",
            "following_url": "https://api.github.com/users/leej3/following{/other_user}",
            "gists_url": "https://api.github.com/users/leej3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leej3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leej3/subscriptions",
            "organizations_url": "https://api.github.com/users/leej3/orgs",
            "repos_url": "https://api.github.com/users/leej3/repos",
            "events_url": "https://api.github.com/users/leej3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leej3/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717336,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhmA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 4686717369,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhuQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_type:documentation",
                "name": "project_type:documentation",
                "color": "c5def5",
                "default": false,
                "description": ""
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850515871,
                "node_id": "LA_kwDOCUpq1c8AAAABIRz_nw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/containerization",
                "name": "containerization",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850515874,
                "node_id": "LA_kwDOCUpq1c8AAAABIRz_og",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/AFNI",
                "name": "AFNI",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-06-05T18:10:25Z",
        "updated_at": "2022-11-28T16:48:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "\r\n# Tests for AFNI code?\r\n\r\n## Project Description\r\n\r\nYes they do exist. Currently our report coverage from codecov is a whopping 5%. I'd like to increase this. Let's aim for increasing the coverage by 8.2%!\r\n\r\nSince AFNI is blend of several programming languages, testing the various programs as executables seems like a sensible way to expand the tests to give some basic guarantee of stable functionality across the software suite. I have written some code to facilitate this and would now love some help increasing the test coverage/improving the approach. I have added a few issues to the AFNI github repo (with the \"Testing\") as some example hack items in addition to specifically adding more tests. \r\n\r\n## Skills required to participate\r\n\r\nLots of different parts of this so all are welcome.\r\n\r\n*Beginners*: For beginners there is some opportunies to help write documentation and learn a little about software testing, continuous integration, containerization, and the AFNI neuroimaging analysis software suite in general.\r\n\r\n*Neuroimaging scientists* With some basic python/bash skills a beginner will be able to add tests for any tool. Although not required, the more domain specific knowledge here the better. Having intuitions for what each tool \"should\" be doing without reading through docs etc. will speed up the process.\r\n\r\n*Pythonistas* Some help would be greatly appreciated from more advance python developers (even just dropping by to give some advice). There are some details to the execution of the  tests - for example datalad is used to store saved sample output data - that could do with testing to help with the endeavour. Likely such tests would require experience with mocking and comfort with git/git-annex/datalad.\r\n\r\n## Integration\r\n\r\nMilestones:\r\n+ Increase the testing coverage by 8.2%\r\n+ Increase the testing coverage by another 16.4%\r\n\r\n\r\n## Preparation material\r\nAn overview of adding the tests is [here](https://docs.google.com/document/d/1j8DxfA215sxC77Spcn_Ap0Xd8QYY3CBFCeL6jkxA-RU/edit)\r\n\r\n## Link to your GitHub repo\r\n[The afni codebase](https://github.com/afni/afni)  \r\n\r\n## Communication\r\nThe [matter most channel](https://mattermost.brainhack.org/brainhack/channels/tests_for_afni)\r\nAlso use the testing label in the [github issues](https://github.com/afni/afni/issues?q=is%3Aissue+is%3Aopen+label%3ATesting)",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/83/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/83/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/82",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/82/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/82/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/82/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/82",
        "id": 452522353,
        "node_id": "MDU6SXNzdWU0NTI1MjIzNTM=",
        "number": 82,
        "title": "Misfolded Protein spreading through connectome",
        "user": {
            "login": "alecrimi",
            "id": 16406658,
            "node_id": "MDQ6VXNlcjE2NDA2NjU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/16406658?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alecrimi",
            "html_url": "https://github.com/alecrimi",
            "followers_url": "https://api.github.com/users/alecrimi/followers",
            "following_url": "https://api.github.com/users/alecrimi/following{/other_user}",
            "gists_url": "https://api.github.com/users/alecrimi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alecrimi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alecrimi/subscriptions",
            "organizations_url": "https://api.github.com/users/alecrimi/orgs",
            "repos_url": "https://api.github.com/users/alecrimi/repos",
            "events_url": "https://api.github.com/users/alecrimi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alecrimi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406968,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWOA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/diffusion",
                "name": "diffusion",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850416369,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt68Q",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/FSL",
                "name": "FSL",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850516145,
                "node_id": "LA_kwDOCUpq1c8AAAABIR0AsQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/PET",
                "name": "PET",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850516153,
                "node_id": "LA_kwDOCUpq1c8AAAABIR0AuQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/connectome",
                "name": "connectome",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-06-05T14:07:45Z",
        "updated_at": "2022-11-28T16:48:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Misfolded protein spreading through brain connectome\r\n\r\n## Project Description\r\n\r\nConnectomics have been used so far to look for quantifying global and local differences in the functional or structural brain networks, or alternatively, to simulate/study brain hemodynamics. Very few studies have used connectomes to investigate the spreading of misfolded proteins which is at the basis of Parkinson\u2019s (PD) and Alzheimer\u2019s disease (AD). It is believed that diseases as AD and PD are spread by misfolded proteins or agents which moves along brain connections (axons and dendrides of the neurons) starting from specific regions to others. For instance, AD has a progression of tau pathology consistently beginning in the entorhinal cortex, the locus coeruleus, and other nearby noradrenergic brainstem nuclei, before spreading to the rest of the limbic system as well as the cacingulate and retrosplenial cortices. While Parkinsons starts from the brainstem and spread to the neocortex. A previous study investigated this mechanism on connectome comparing simulated tau deposits on connectome to those detected by PET scans specific for Alzheimer\u2019s. In this project, we aim at carrying out a similar study but for PD relating to brain atrophy. In particular, we want to simulate deposits/spreading of alpha-syn proceeding via the brain\u2019s anatomic connectivity network. We will use human and mice data provided by the supervisors. The main challenge of the project is defining a proper model of spreading along the connectome. Data from the ADNI and PPMI dataset and given by the project supervisors will be given. Those include case (PD and AD patients) and control subjects along with clinical data and genetics (see below).\r\nCurrent challenges also include proper brain extraction (E.g. FSL BET) of PET data. \r\n\r\n## Skills required to participate\r\n\r\nPython : coders \r\nGenetic data: people who can handle SNP dataset\r\nMathematics: people who can manage dynamical models, heat equation and so on\r\n\r\n## Integration\r\nHow would your project integrate a neuroimager/clinician/psychologist/computational scientist/maker/artist as collaborator? \r\nWe want to simulate pathological brian disease comparing simulation of pathogen agents on structual connectomes to known neuroimaging markers as brain-atrophy and deposits from PET data.\r\n\r\nTry to define intermediate goals (milestones).  \r\n1. Compare simulations on Parkinson data  to brain atrophy (after checking that the atrophy has been obtained properly)\r\n2. Compare simulations on Alzheimer data  to BetaAmyloid PET deposits (after checking that the deposits has been obtained properly)\r\n3. Develop or improve existing spreading models.\r\n\r\n## Preparation material\r\n1. Crimi and Kara \"SPREADING MODEL FOR PATIENTS WITH PARKINSON'S DISEASE BASED ON CONNECTIVITY DIFFERENCES\" IEEE ISBI 2019,\r\nhttps://www.researchgate.net/publication/333583009_SPREADING_MODEL_FOR_PATIENTS_WITH_PARKINSON%27S_DISEASE_BASED_ON_CONNECTIVITY_DIFFERENCES\r\n\r\n2. Iturria-Medina, Yasser, et al. \u201cEpidemic spreading model to characterize misfolded proteins propagation in aging and associated neurodegenerative disorders.\u201d PLoS computational biology 10.11 (2014): e1003956. https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1003956\r\n3. Raj, Ashish, Amy Kuceyeski, and Michael Weiner. \u201cA network diffusion model of disease progression in dementia.\u201d Neuron73.6 (2012): 1204-1215. https://www.sciencedirect.com/science/article/pii/S0896627312001353\r\n4. H. Braak et al., \u201cStaging of brain pathology related to sporadic Parkinsons disease,\u201d Neurobiology of aging, vol. 24, no. 2, pp. 197\u2013211, 2003. https://www.sciencedirect.com/science/article/pii/S0197458002000659\r\n\r\n## Link to your GitHub repo\r\nStarting stuff to use:\r\nhttps://github.com/alecrimi/misfoldedproiteins_connectome\r\n\r\n## Communication\r\nSlack channel: https://mattermost.brainhack.org/brainhack/channels/misfoldedproteins\r\n![isbi_poster](https://user-images.githubusercontent.com/16406658/58962576-d4bfae80-87ab-11e9-9a99-c749e5ace4fb.jpg)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/82/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 1,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/82/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/81",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/81/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/81/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/81/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/81",
        "id": 452480919,
        "node_id": "MDU6SXNzdWU0NTI0ODA5MTk=",
        "number": 81,
        "title": "Explorative analysis of fetal cortical surface data",
        "user": {
            "login": "MrBurnst",
            "id": 4426897,
            "node_id": "MDQ6VXNlcjQ0MjY4OTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4426897?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MrBurnst",
            "html_url": "https://github.com/MrBurnst",
            "followers_url": "https://api.github.com/users/MrBurnst/followers",
            "following_url": "https://api.github.com/users/MrBurnst/following{/other_user}",
            "gists_url": "https://api.github.com/users/MrBurnst/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MrBurnst/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MrBurnst/subscriptions",
            "organizations_url": "https://api.github.com/users/MrBurnst/orgs",
            "repos_url": "https://api.github.com/users/MrBurnst/repos",
            "events_url": "https://api.github.com/users/MrBurnst/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MrBurnst/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4850406950,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWJg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRI",
                "name": "MRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850516555,
                "node_id": "LA_kwDOCUpq1c8AAAABIR0CSw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Brainstorm",
                "name": "Brainstorm",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-06-05T12:45:37Z",
        "updated_at": "2022-11-28T16:48:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Explorative analysis of fetal cortical surface data\r\n\r\n## Project Description\r\n\r\nUnderstanding the maturation of the human brain from a smooth surface to its highly convoluted state at birth is an essential quest in the field of neuroscience. In the last decade the development of fast MR imaging protocols and advanced image processing methods has enabled imaging of the fetal brain at unprecedented detail. However, data availability is very limited due to comparatively rare examinations, small study sizes and high population variability.  \r\n \r\nIn the spirit of open and repeatable research, we present the preliminary release of a dataset of 33 pre-processed MRI acquisitions of healthy fetal brains of 26 individuals imaged between GW 20 and GW 36. Furthermore, we provide cortical surface models human fetal cerebral hemispheres consisting of densely sampled surface triangulations that are matched between hemispheres and across time to serve as a standardized reference frame for surface-based analysis of cerebral development in utero.\r\n\r\nDuring the hackaton, I'd welcome anyone interested to do so to get in touch and bounce around ideas how to get the most out of this data.\r\n\r\n## Skills required to participate\r\n\r\nSince this is a very open project, people with all type of skills can contribute, but experience with visualization and maybe computational geometry might come in handy. \r\n\r\n## Aims\r\nBrainstorming on how to visualize and interpret the growth of the fetal brain in utero and what methods to apply for fun and profit.\r\n\r\n## Data availability\r\nUnfortunately, I cannot (yet) put the data online - people interested in working on it will have to provide their names and contact email and I will provide a download link.\r\n\r\n## Communication\r\nhttps://mattermost.brainhack.org/brainhack/channels/ohbm19_hackaton_fetal",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/81/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/81/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/80",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/80/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/80/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/80/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/80",
        "id": 452385932,
        "node_id": "MDU6SXNzdWU0NTIzODU5MzI=",
        "number": 80,
        "title": "Generating BIDS derivatives with (a) Banana",
        "user": {
            "login": "tclose",
            "id": 1054870,
            "node_id": "MDQ6VXNlcjEwNTQ4NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1054870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tclose",
            "html_url": "https://github.com/tclose",
            "followers_url": "https://api.github.com/users/tclose/followers",
            "following_url": "https://api.github.com/users/tclose/following{/other_user}",
            "gists_url": "https://api.github.com/users/tclose/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tclose/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tclose/subscriptions",
            "organizations_url": "https://api.github.com/users/tclose/orgs",
            "repos_url": "https://api.github.com/users/tclose/repos",
            "events_url": "https://api.github.com/users/tclose/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tclose/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717336,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhmA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 4686717369,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhuQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_type:documentation",
                "name": "project_type:documentation",
                "color": "c5def5",
                "default": false,
                "description": ""
            },
            {
                "id": 4686717373,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhvQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_tools_skills:expert",
                "name": "project_tools_skills:expert",
                "color": "c2e0c6",
                "default": false,
                "description": ""
            },
            {
                "id": 4686717374,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhvg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_tools_skills:familiar",
                "name": "project_tools_skills:familiar",
                "color": "c2e0c6",
                "default": false,
                "description": ""
            },
            {
                "id": 4850406950,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWJg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRI",
                "name": "MRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850409556,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtgVA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Nipype",
                "name": "Nipype",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850410522,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtkGg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/BIDS",
                "name": "BIDS",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850416740,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt8ZA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/EEG",
                "name": "EEG",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850416741,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt8ZQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MEG",
                "name": "MEG",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-06-05T08:54:23Z",
        "updated_at": "2022-11-28T16:48:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Generating BIDS derivatives with (a) Banana\r\n\r\n## Project Description\r\n\r\n_Brain imAgiNg Analysis iN Arcana (Banana)_ is a collection of imaging analysis methods implemented in the [Arcana framework](https://www.biorxiv.org/content/10.1101/447649v3), and is proposed as a code-base for collaborative development of neuroimaging workflows. Unlike traditional \"linear\" workflows, analyses implemented in Arcana are constructed on-the-fly from cascades of modular pipelines that generate derivatives from a mixture of acquired data and prequisite derivatives (similar to Makefiles). Given the \"data-centric\" architecture of this approach, there should be a natural harmony between it and the ongoing standardisation of BIDS derivatives.\r\n\r\nThe primary goal of this project is to closely align the analysis methods implemented in Banana with the BIDS standard, in particular BIDS derivatives, in order to make them familiar to new users and interoperable with other packages. Further to this, in cases where a _de facto_ standard for a particular \r\nworkflow exists (e.g. fmriprep) Banana should aim to mirror this standard by default. The extensibility of Arcana's object-orientated architecture could then be utilised to tailor such standard workflows to the needs of specific studies (via class inheritance).\r\n\r\nThere is also plenty of scope to expand the imaging contrasts/modalities supported by Banana, so if you have expertise in a particular area and are interested in implementing it in Banana we can definitely look to do that as well. \r\n\r\n## Skills required to participate\r\n\r\n***Any*** of the following:\r\n\r\n* Python\r\n* Workflow design (preferably some Nipype but not essential)\r\n* Detailed knowledge BIDS specification (or part thereof)\r\n* Domain-specific knowlege of analysis of a particular imaging modality that\r\n  you would like to see implemented in Banana (e.g. EEG, MEG, etc..)\r\n\r\n## Integration\r\n\r\n* Python programmers and workflow designers who are looking to implement and maintain a suite of generic analysis methods should be able to help extend existing classes and implement new ones for different imaging contrast/modalities not currently covered.\r\n* Domain-experts (e.g. EEG, MEG, pre-clinical MRI) who a interested implementing existing workflows within in a portable, extensible framework could help to guide the implementation, check the derivatives they create are correct, etc...\r\n* 1st and 2nd year PhD students who are planning the analysis for their thesis, could look to create their own customised \"study\" classes that extend from the generic base classes in Banana to integrate all their analysis in the same code-base (and re-use common derivatives/QC, maintain provenance records). \r\n\r\n## Preparation material\r\n\r\nSkim through the Arcana paper for the basic concepts,\r\n\r\n[Arcana BioXiv paper](https://www.biorxiv.org/content/10.1101/447649v3) (_in press_  _Neuroinformatics_, to be [10.1007/s12021-019-09430-1](https://doi.org/10.1007/s12021-019-09430-1))\r\n\r\nThere is also some online documentation,\r\n\r\n[arcana docs](http://arcana.readthedocs.io)\r\n\r\nArcana is built on top of Nipype so understanding Nipype concepts would also be useful,\r\n\r\n[nipype docs](https://nipype.readthedocs.io)\r\n\r\n## Link to your GitHub repo\r\n\r\n[Banana Github Repo](https://github.com/MonashBI/banana)\r\n\r\n## Communication\r\n\r\nThere is a new channel on the BrainHack mattermost [here](https://mattermost.brainhack.org/brainhack/channels/banana)",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/80/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/80/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/79",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/79/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/79/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/79/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/79",
        "id": 452378089,
        "node_id": "MDU6SXNzdWU0NTIzNzgwODk=",
        "number": 79,
        "title": "Extending Nobrainer and neuronets org - deep learning MR models",
        "user": {
            "login": "satra",
            "id": 184063,
            "node_id": "MDQ6VXNlcjE4NDA2Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/184063?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/satra",
            "html_url": "https://github.com/satra",
            "followers_url": "https://api.github.com/users/satra/followers",
            "following_url": "https://api.github.com/users/satra/following{/other_user}",
            "gists_url": "https://api.github.com/users/satra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/satra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/satra/subscriptions",
            "organizations_url": "https://api.github.com/users/satra/orgs",
            "repos_url": "https://api.github.com/users/satra/repos",
            "events_url": "https://api.github.com/users/satra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/satra/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 15,
        "created_at": "2019-06-05T08:36:56Z",
        "updated_at": "2022-11-28T16:53:15Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "# Extending Nobrainer - a deep learning framework for neuroimaging\r\n\r\n## Project Description\r\n\r\n[Nobrainer](https://github.com/neuronets/nobrainer) is a tensorflow 2.0 based framework for creating and distributing neural network models for MR image processing. The goal of this project is to discuss the structure of Nobrainer and to make it easy for people to create and [publish reusable models](https://github.com/neuronets/nobrainer-models). Some of the recent work has focused on [generative models for MR](https://docs.google.com/presentation/d/1Tt83AdCsIlU_VlzVv91canZBGev1uNZZ-R_GpM6yIF8/edit#slide=id.g58973cc7e9_0_263).\r\n\r\n## Skills required to participate\r\n\r\n- Python\r\n- Tensorflow 2.0 (Keras layers)\r\n- MR image processing\r\n\r\n## Integration\r\nHow would your project integrate a neuroimager/clinician/psychologist/computational scientist/maker/artist as collaborator?\r\n\r\nWe would love for individuals to post issues describing use cases, feature requests, and contribute code or new models to the project.\r\n\r\nTry to define intermediate goals (milestones).  \r\n- Increase trained models provided by nobrainer\r\n- Increase baseline architectures available\r\n- Provide model comparison\r\n\r\n## Preparation material\r\nIn addition to the code repo, these notebooks are intended to help guide individuals:\r\n\r\nhttps://github.com/neuronets/nobrainer#guide-jupyter-notebooks-\r\n\r\n## Link to your GitHub repo\r\nhttps://github.com/neuronets\r\n\r\n## Communication\r\nIssues on github repo\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/79/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/79/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/78",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/78/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/78/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/78/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/78",
        "id": 452370673,
        "node_id": "MDU6SXNzdWU0NTIzNzA2NzM=",
        "number": 78,
        "title": "Neurofeedback in Python - how to transform Pyff (stimulus delivery) from the old Python 2 into the new Python 3 Realm.",
        "user": {
            "login": "jnvandermeer",
            "id": 2698152,
            "node_id": "MDQ6VXNlcjI2OTgxNTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2698152?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnvandermeer",
            "html_url": "https://github.com/jnvandermeer",
            "followers_url": "https://api.github.com/users/jnvandermeer/followers",
            "following_url": "https://api.github.com/users/jnvandermeer/following{/other_user}",
            "gists_url": "https://api.github.com/users/jnvandermeer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jnvandermeer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jnvandermeer/subscriptions",
            "organizations_url": "https://api.github.com/users/jnvandermeer/orgs",
            "repos_url": "https://api.github.com/users/jnvandermeer/repos",
            "events_url": "https://api.github.com/users/jnvandermeer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jnvandermeer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717336,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhmA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 4686717369,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhuQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_type:documentation",
                "name": "project_type:documentation",
                "color": "c5def5",
                "default": false,
                "description": ""
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-06-05T08:19:21Z",
        "updated_at": "2022-11-28T16:53:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Neurofeedback in Python - how to transform Pyff (stimulus delivery) from the old Python 2 into the new Python 3 Realm.\r\n\r\n\r\n## Background\r\n\r\nPyff is a Python module that can be combined with Psychopy to perform Neurofeedback experiments. Pyff can load in and run stimulus paradigms and communicate via TCP/IP to other computers to update stimuli in real-time. In order to do so, it starts up a seeparate process with a main thread (since all screen refresh/3D/graphical stuff needs to be in a main thread), and a separate thread that monitors incoming network traffic.\r\n\r\nThis spearate thread relies heavily on asyncio/asynchat to prevent the that thread from killing itself if something goes wrong with the network traffic part (which usually does). Asynchat/Asyncio is a type of asynchronous programming where the interpreter can continue with other code while one line dealing with network traffic is waiting. Asynchronous programming has underdone many iterations, and one of the major one is that it is now implemented in python 3's async module and asyncio/asynchat no longer exists in favor of the more general async module. \r\n\r\nThe documentation is however quite bad. The work I propose is to take a look to see if pyff python 2's asyncio/asynchat can be deciphered into equivalent async code, and furthermore to more fully convert pyff into the python 3 realm.\r\n\r\n## knowledge\r\n\r\nPreferably something about async programming\r\n\r\n\r\n## github repository\r\nhttps://github.com/jnvandermeer/nf-stim-review\r\n2to3 program\r\n\r\n\r\nThis would be a good match for the traintrack python2 to python3 issue raised earlier (issue #25)",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/78/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/78/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/77",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/77/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/77/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/77/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/77",
        "id": 452369472,
        "node_id": "MDU6SXNzdWU0NTIzNjk0NzI=",
        "number": 77,
        "title": "Neurofeedback in Python",
        "user": {
            "login": "jnvandermeer",
            "id": 2698152,
            "node_id": "MDQ6VXNlcjI2OTgxNTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2698152?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnvandermeer",
            "html_url": "https://github.com/jnvandermeer",
            "followers_url": "https://api.github.com/users/jnvandermeer/followers",
            "following_url": "https://api.github.com/users/jnvandermeer/following{/other_user}",
            "gists_url": "https://api.github.com/users/jnvandermeer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jnvandermeer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jnvandermeer/subscriptions",
            "organizations_url": "https://api.github.com/users/jnvandermeer/orgs",
            "repos_url": "https://api.github.com/users/jnvandermeer/repos",
            "events_url": "https://api.github.com/users/jnvandermeer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jnvandermeer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850416740,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt8ZA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/EEG",
                "name": "EEG",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-06-05T08:16:17Z",
        "updated_at": "2022-11-28T16:53:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Neurofeedback in Python - the need for speed\r\n\r\n\r\n## Background\r\n\r\nIn EEG neurofeedback timing is perhaps not always so cricial that feedback needs to happen within < 1 miliseconds (for that you'd need real-time Operating systems), but it's still impotant enough that the \"Neurofeedback Loop\" need to happen relatively fast - and consistent, and in pace with the data acquisition. Lag is unavoidable and acceptable, within limits. Lag can be introduced because you need to do some mathematical operation (filtering especially), or because of Input/Output 'clogging'. Acceptable lag in EEG NF is in the order of 150-200 miliseconds, but the faster the better.\r\n\r\nProgramming in C will more likely give you that kind of speed, but making (and compiling) things in Python makes it a bit harder to communicate with the Python community, and Python should (in principle) be fast enough also for Neurofeedback purposes. There are currently (as far as I know) two main repositories of Python-based Neurofeedback software: Pyff/Wyrm, made by Bastian Venthur in 2010 (and since more-or-less abandoned). And nfb (see REF PAPER).\r\n\r\n## Issues\r\n\r\nThe issue is Lag. In python, one type of lag is due to the Global Interpreter Lock. Basically it means that python interpreter can read & interpret only one python line at a time, so all other lines have to wait their turn. So that means if you have something else that needs to be done in the neurofeedback loop - writing a file, updating your screen, keeping track of parameters, or doing an analysis while the NF loop is running, the Neurofeeback loop has to stop - or you delegate work to another python interpreter.\r\n\r\nDelegation is by python's multiprocessing module. There are other ways to do parallel evaluations with threading and asynchronous programming, but the also need to obey the GIL. Basically you start another Python session (and interpreter) - that can run on a separate core and do stuff while the main process hanles the neurofeedback loop, thereby reducing the Lag. The two processes communicate via files (bad), pipes/queues (preferred), or shared memory (probably the fastest, but care is needed).\r\n\r\nHowever... starting a Process takes time. And also, putting stuff into a queue and picking stuff out of a queue ALSO takes time. The bigger the data exchanged the longer it takes. The project I propose is to do some benchmarking/stress testing and measure how long it takes to start up a process, and how much data can you move around at what speeds, in the contesxt of some Neurofeedback and real-time processing that i've been working on. Ideally, the speed should be infinite and the lag 0 of such operations. A lag of more than 30-50 miliseconds can already tamper with the consistency of the Neurofeedback loop.\r\n\r\n## Aims\r\n- get an idea on what typical lags are when shuffling around data and delegating work\r\n- a decorator or a module for timing a typical NF experiment\r\n\r\n\r\n## Knowledge \r\nMultiprocessing, Queues, GIL\r\n\r\n\r\n## Github Repository\r\nhttps://github.com/jnvandermeer/nf-rtime-preview\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/77/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/77/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/76",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/76/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/76/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/76/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/76",
        "id": 452258859,
        "node_id": "MDU6SXNzdWU0NTIyNTg4NTk=",
        "number": 76,
        "title": "nii-masker: A command-line wrapper for nilearn's Masker tools",
        "user": {
            "login": "danjgale",
            "id": 14634382,
            "node_id": "MDQ6VXNlcjE0NjM0Mzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/14634382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danjgale",
            "html_url": "https://github.com/danjgale",
            "followers_url": "https://api.github.com/users/danjgale/followers",
            "following_url": "https://api.github.com/users/danjgale/following{/other_user}",
            "gists_url": "https://api.github.com/users/danjgale/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danjgale/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danjgale/subscriptions",
            "organizations_url": "https://api.github.com/users/danjgale/orgs",
            "repos_url": "https://api.github.com/users/danjgale/repos",
            "events_url": "https://api.github.com/users/danjgale/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danjgale/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717373,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhvQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_tools_skills:expert",
                "name": "project_tools_skills:expert",
                "color": "c2e0c6",
                "default": false,
                "description": ""
            },
            {
                "id": 4850406950,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWJg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRI",
                "name": "MRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850409552,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtgUA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/fMRI",
                "name": "fMRI",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-06-05T00:04:16Z",
        "updated_at": "2022-11-28T16:43:54Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "# nii-masker\r\n\r\n## Project Description\r\n\r\n`niimasker` is a command-line wrapper for nilearn's Masker objects, which let you easily extract out time series from your functional data (and gives you a number of options for post-processing during extraction). I'm in a lab with a number of non-Python users who would benefit greatly from this ability, and this project was a spur-of-the-moment project idea I had a couple of weeks ago when discussing my fMRI pipeline with my colleagues (we're trying to get a more standardized workflow going \u2013 fmriprep, etc). Because `niimasker` is run via the command-line, pretty much anyone with some bash knowledge can use it (or at least that's what I'm working towards). \r\n\r\nI developed much of this last week in a \"mini-sprint\" (i.e. a colleague needed data \"yesterday\"). While its core functionality is working, there's lots to be done. I've included a number of issues in the repo already: https://github.com/danjgale/nii-masker/issues. So, there are some exciting features to add (e.g., a visual report \u00e0 la fmriprep) as well as some testing/CI to set up. These outline some of the things I'd like to accomplish at the hackathon. \r\n\r\n## Skills required to participate\r\n\r\n- Any experience with Python and nilearn\r\n- Any HTML knowledge would be helpful for development of the visual report!\r\n\r\n## Integration\r\nThe goal is to create a totally intuitive tool for anyone, so all contributions from all backgrounds and perspectives are encouraged. Non-expert/technical users can contribute by providing feedback and design ideas to make `niimasker` more approachable and user-friendly. \r\n\r\n## Preparation material\r\n\r\n- [Nilearn\u2019s user guide](https://nilearn.github.io/user_guide.html ), in particular the [masker guide](https://nilearn.github.io/manipulating_images/masker_objects.html)\r\n- [argparse info](https://docs.python.org/3/howto/argparse.html)\r\n- The project's README\r\n\r\n## Link to your GitHub repo\r\n\r\nhttps://github.com/danjgale/nii-masker/\r\n\r\n## Communication\r\nI can set up a channel on the brainhack mattermost/slack if this gains interest. I would also like to keep a lot of conversation \"in the open\" directly in github issues as well. \r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/76/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/76/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/75",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/75/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/75/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/75/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/75",
        "id": 452089169,
        "node_id": "MDU6SXNzdWU0NTIwODkxNjk=",
        "number": 75,
        "title": "Nipype + GiraffeTools, support for custom functions",
        "user": {
            "login": "TimVanMourik",
            "id": 6152205,
            "node_id": "MDQ6VXNlcjYxNTIyMDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6152205?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TimVanMourik",
            "html_url": "https://github.com/TimVanMourik",
            "followers_url": "https://api.github.com/users/TimVanMourik/followers",
            "following_url": "https://api.github.com/users/TimVanMourik/following{/other_user}",
            "gists_url": "https://api.github.com/users/TimVanMourik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TimVanMourik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TimVanMourik/subscriptions",
            "organizations_url": "https://api.github.com/users/TimVanMourik/orgs",
            "repos_url": "https://api.github.com/users/TimVanMourik/repos",
            "events_url": "https://api.github.com/users/TimVanMourik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TimVanMourik/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4850409556,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtgVA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Nipype",
                "name": "Nipype",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-06-04T16:19:21Z",
        "updated_at": "2022-11-28T16:53:35Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "# Nipype + GiraffeTools, support for custom functions\r\n\r\n## Project Description\r\n\r\nI would like to visually build a Nipype workflow. This is already possible with [GiraffeTools](https://giraffe.tools/porcupine/TimVanMourik/SomeGiraffeExample) but only with standard Nipype nodes. It would be really cool if you could include ANY of your own functions straight away: wrap them into Nipype-modules and show them to the world.\r\n\r\nThis project is largely based on [this issue](https://github.com/TimVanMourik/GiraffeTools/issues/107)\r\n\r\n## Skills required to participate\r\n\r\n* Heard of the word 'Nipype'\r\n\r\n## Integration\r\nThis Hackathon is a particularly good moment to do this, because we can see what users and developers need in building workflows.\r\n\r\n## Preparation material\r\n* https://giraffe.tools\r\n* https://giraffe.tools/porcupine/TimVanMourik/SomeGiraffeExample\r\n* https://github.com/TimVanMourik/GiraffeTools\r\n* https://github.com/TimVanMourik/GiraffeTools/issues/107\r\n\r\n## Link to your GitHub repo\r\nhttps://github.com/TimVanMourik/GiraffeTools\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/75/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/75/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/74",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/74/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/74/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/74/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/74",
        "id": 451923324,
        "node_id": "MDU6SXNzdWU0NTE5MjMzMjQ=",
        "number": 74,
        "title": "BIDS-ifying the hMRI toolbox",
        "user": {
            "login": "ChristophePhillips",
            "id": 2011934,
            "node_id": "MDQ6VXNlcjIwMTE5MzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2011934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ChristophePhillips",
            "html_url": "https://github.com/ChristophePhillips",
            "followers_url": "https://api.github.com/users/ChristophePhillips/followers",
            "following_url": "https://api.github.com/users/ChristophePhillips/following{/other_user}",
            "gists_url": "https://api.github.com/users/ChristophePhillips/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ChristophePhillips/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ChristophePhillips/subscriptions",
            "organizations_url": "https://api.github.com/users/ChristophePhillips/orgs",
            "repos_url": "https://api.github.com/users/ChristophePhillips/repos",
            "events_url": "https://api.github.com/users/ChristophePhillips/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ChristophePhillips/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4850406950,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWJg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRI",
                "name": "MRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850410522,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtkGg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/BIDS",
                "name": "BIDS",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850415818,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt4yg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Matlab",
                "name": "Matlab",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850416371,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt68w",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/SPM",
                "name": "SPM",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2019-06-04T10:40:42Z",
        "updated_at": "2022-11-28T16:53:40Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# BIDS-ifying the hMRI toolbox\r\n\r\n## Project Description\r\n\r\nThe [hMRI toolbox](http://hmri.info) allows you to generate quantitative MRI data from a series of \"raw\" multi-echo structural images and field maps, i.e. the Multi-Parametric Mapping (MPM) protocol. So far, the toolbox is not BIDS compliant but it would clearly help everyone if it did... \r\n\r\n![hMRI_mapcreation](https://user-images.githubusercontent.com/2011934/59023151-6c2a0d80-884f-11e9-90a2-6b46c01699cd.png)\r\n\r\n## Skills required to participate\r\n\r\nAnyone with some experience in Matlab, quantitative MRI, SPM-extension toolbox development or the will to learn these skills.\r\n\r\n## Integration\r\nThe [hMRI project](http://hmri.info) has been supported by a few labs already and used by a few more. Harmonizing the way the sequence parameters are saved and accessed would help data management, QA, and sharing. \r\n\r\nOne [BIDS Extension Proposal (BEP001)](https://docs.google.com/document/d/1QwfHyBzOyFWOLO4u_kkojLpUhW0-4_M7Ubafu9Gf4Gg/) focuses on standardizing such structural acquisitions that include multiple contrasts (multi echo, flip angle, inversion time) sequences. This effort thus aims at integrating the hMRI toolbox within the BEP001. The latter is still in development, therefore adjustments if needed are still possible.\r\n\r\nIntermediate steps:\r\n- BIDS-ify the example provided example data\r\n- updates the toolbox to use the BIDS form of the parameters\r\n- extend the Dicom-to-Nifti conversion according to BIDS \r\n\r\n## Preparation material\r\nThe public distribution of [hMRI toolbox](http://hmri.info) code is available [here](https://github.com/hMRI-group/hMRI-toolbox) but I'll make the latest private version available for the development.\r\nExample data are available [here](https://owncloud.gwdg.de/index.php/s/iv2TOQwGy4FGDDZ), specifically the [\"800\u00b5m 64 channel protocol\" data set](https://owncloud.gwdg.de/index.php/s/iv2TOQwGy4FGDDZ/download?path=%2F&files=hmri_sample_dataset_with_maps.zip).\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/74/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/74/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/73",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/73/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/73/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/73/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/73",
        "id": 451615672,
        "node_id": "MDU6SXNzdWU0NTE2MTU2NzI=",
        "number": 73,
        "title": "JavaScript toolkit for modular brain visualization",
        "user": {
            "login": "tyarkoni",
            "id": 303932,
            "node_id": "MDQ6VXNlcjMwMzkzMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/303932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tyarkoni",
            "html_url": "https://github.com/tyarkoni",
            "followers_url": "https://api.github.com/users/tyarkoni/followers",
            "following_url": "https://api.github.com/users/tyarkoni/following{/other_user}",
            "gists_url": "https://api.github.com/users/tyarkoni/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tyarkoni/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tyarkoni/subscriptions",
            "organizations_url": "https://api.github.com/users/tyarkoni/orgs",
            "repos_url": "https://api.github.com/users/tyarkoni/repos",
            "events_url": "https://api.github.com/users/tyarkoni/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tyarkoni/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4850417282,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt-gg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Java",
                "name": "Java",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2019-06-03T18:04:20Z",
        "updated_at": "2022-11-28T16:53:45Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Name TBD\r\n\r\n## Project Description\r\n\r\nThere are quite a few JS brain image viewers out there, but they overwhelmingly focus on the rendering side of things rather than the UI side. The goal of this project is to develop a high-level, modular JS library that (a) defines a common API for viewers, (b) implements support for widely used viewers (e.g., Papaya), and (c) provides a set of customizable widgets/components that can be easily injected into new JS projects. If successful, users should be able to construct relatively sophisticated dashboards (including things like image thresholding and color assignment, customized orth views, multiple layers, etc.) in just a few lines of JS code.\r\n\r\n## Skills required to participate\r\n\r\nAll kinds of contributions are welcome, but the project is likely to benefit particularly from the involvement of people with JavaScript experience and/or general experience building APIs and architecting modular libraries.\r\n\r\n## Integration\r\nThere's room for contribution from folks with a wide range of backgrounds and experience levels. We will be particularly interested in soliciting opinions on what core features the package should include, and how users expect to interact with good visualization tools.\r\n\r\n## Preparation material\r\nFolks with prior JavaScript experience may want to take a look at a few of the existing viewers, e.g., [Papaya](https://github.com/rii-mango/Papaya), [PyCortex](https://github.com/gallantlab/pycortex), and [brainsprite.js](https://github.com/SIMEXP/brainsprite.js). Participants with prior programming experience who are new to JavaScript may want to whisper a few quiet prayers and then take the plunge into a JS tutorial or six.\r\n\r\n## Link to your GitHub repo\r\n[https://github.com/neurostuff/BVT](https://github.com/neurostuff/BVT) \u2014 but that's currently just a placeholder.\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/73/reactions",
            "total_count": 6,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 2,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/73/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/71",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/71/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/71/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/71/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/71",
        "id": 451175393,
        "node_id": "MDU6SXNzdWU0NTExNzUzOTM=",
        "number": 71,
        "title": "Animal and Non-standard brain pipelines",
        "user": {
            "login": "neurabenn",
            "id": 9336717,
            "node_id": "MDQ6VXNlcjkzMzY3MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9336717?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neurabenn",
            "html_url": "https://github.com/neurabenn",
            "followers_url": "https://api.github.com/users/neurabenn/followers",
            "following_url": "https://api.github.com/users/neurabenn/following{/other_user}",
            "gists_url": "https://api.github.com/users/neurabenn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neurabenn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neurabenn/subscriptions",
            "organizations_url": "https://api.github.com/users/neurabenn/orgs",
            "repos_url": "https://api.github.com/users/neurabenn/repos",
            "events_url": "https://api.github.com/users/neurabenn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neurabenn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717336,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhmA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 4686717367,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhtw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_tools_skills:comfortable",
                "name": "project_tools_skills:comfortable",
                "color": "c2e0c6",
                "default": false,
                "description": ""
            },
            {
                "id": 4686717369,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhuQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_type:documentation",
                "name": "project_type:documentation",
                "color": "c5def5",
                "default": false,
                "description": ""
            },
            {
                "id": 4850406950,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWJg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRI",
                "name": "MRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850409552,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtgUA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/fMRI",
                "name": "fMRI",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-06-02T10:13:28Z",
        "updated_at": "2022-11-28T16:55:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Animal /Nonstandard Brain Pipelines\r\n\r\n## Project Description\r\n\r\nThis is an example of converting an in house animal pipeline project to hopefully  a feat or c-pac for animal studies. In Neuroimaging we're generally limited to working with a small range of animals. Even if you're working with macaques you still need to do a lot of anatomical processing that's distinct to human brains. So this year we designed a surface generation pipeline that is easily adaptable to multiple animals \r\n\r\nWhat we'd like to do is now extend the pipelines along with some other in house pipelines we have for preprocessing of fMRI and DTI data with the simple idea being that following anatomical processing (which can also be just brain extraction and not the full surface generation). We'd like to set it up so you have either a feat or c-pac like GUI or commandline where you can set up everything with one key difference: an added animal option.\r\n\r\n## Skills required to participate\r\n\r\nThis project is really open to everyone. \r\nOn the technical side a good level of bash, and python would be great. \r\nAdditionally if you have experience in making docker containers or GUI's to make it a more user friendly pipeline that would also be great! \r\n\r\nOn a non-technical side I realized recently that there currently is no documentation for the actual pipeline. Additionally if you're interested in adding brains of new animals and want to share data you absolutely can! If you just want to add brains you can help us add some from the brain catalogue using brain box: http://brainbox.pasteur.fr/  \r\n\r\n## Integration\r\nThis really is a project for everyone. As I mentioned on the non-technical side we could potentially add quite a few new animal brains in order to generate their surfaces. \r\n\r\nNeuroimagers can help us with the design and optimization of the current and new pipelines. Specifically:\r\nIn the surface generation pipeline\r\n- Add ex-vivo support for surface generation\r\n- Add support for non T1 images i.e. highres T2\r\n- Add support for small animal imaging. Currently the pipeline has only been tested on images using clinical scanners and more or less standard resolution. A pre-pipeline step to adjust voxel sizes for rodents would be great!\r\n- Add in support to more easily use hand edited WM masks when necessary\r\n\r\nComputer Science:\r\nPart of the problem in neuroimaging pipelines is that they're not always intuitive to install or use.\r\n- Help create a docker container for use in creating an animal friendly computing environment\r\n- Help use create a GUI for using the pipelines so that working with animals can be as easy as working with humans\r\n\r\nI'm just here to learn:\r\n-  The documentation is largely lacking. A manual on how to create the prerequisite images for the pipeline would be great!\r\n-  Thanks to brain catalogue we have a ton of animal brains we can try the surface pipelines on.\r\nCreate the initial masks required to run everything and get comfortable running and editing pipelines! \r\n\r\n## Preparation material\r\nCome with an open mind and if you can some open data!\r\n\r\n## Link to your GitHub repo\r\nThe precon_all repo: https://github.com/recoveringyank/precon_all  \r\n\r\n## Communication\r\nHere's our mattermost link! https://mattermost.brainhack.org/brainhack/channels/precon_all\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/71/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/71/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/70",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/70/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/70/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/70/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/70",
        "id": 451013397,
        "node_id": "MDU6SXNzdWU0NTEwMTMzOTc=",
        "number": 70,
        "title": "Extending DIPY Visualization and workflows (command line) framework",
        "user": {
            "login": "skoudoro",
            "id": 23106443,
            "node_id": "MDQ6VXNlcjIzMTA2NDQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/23106443?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skoudoro",
            "html_url": "https://github.com/skoudoro",
            "followers_url": "https://api.github.com/users/skoudoro/followers",
            "following_url": "https://api.github.com/users/skoudoro/following{/other_user}",
            "gists_url": "https://api.github.com/users/skoudoro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skoudoro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skoudoro/subscriptions",
            "organizations_url": "https://api.github.com/users/skoudoro/orgs",
            "repos_url": "https://api.github.com/users/skoudoro/repos",
            "events_url": "https://api.github.com/users/skoudoro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skoudoro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717336,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhmA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 4686717369,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhuQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_type:documentation",
                "name": "project_type:documentation",
                "color": "c5def5",
                "default": false,
                "description": ""
            },
            {
                "id": 4686717373,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhvQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_tools_skills:expert",
                "name": "project_tools_skills:expert",
                "color": "c2e0c6",
                "default": false,
                "description": ""
            },
            {
                "id": 4850406950,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWJg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRI",
                "name": "MRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850406968,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWOA",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/diffusion",
                "name": "diffusion",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850539925,
                "node_id": "LA_kwDOCUpq1c8AAAABIR1dlQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/DIPY",
                "name": "DIPY",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-05-31T23:22:20Z",
        "updated_at": "2022-11-28T16:55:33Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Extending DIPY Vizualisation or workflows framework\r\n\r\n## Project Description\r\n\r\nDIPY is the largest community-based open-source software project and it implements many methods in computational neuroanatomy, with an emphasis on methods for the analysis of diffusion MRI (dMRI) data. DIPY offers a new system of command-line interfaces that ease the use of the Python API implemented for clinician/neuroimagers. The goal is to add new functionalities and simplify the command line creation. The second project is based on FURY, a scientific visualization library, born from a DIPY spin-off. The goal is to add some widget and a function to simplify Atlas visualization.\r\n\r\n## Skills required to participate\r\n\r\nEverybody is welcomed! from python Beginner to expert! if you are interested in :\r\n- improving your understanding or extending of DIPY visualization, join us!\r\n- extending DIPY command line framework, join us!\r\n\r\n## Integration\r\nNeuroimagers and computational scientists may be able to contribute to either part of the project. more details below:\r\n\r\n### Workflows Project: \r\n- Create a worflows from a decorator instead of a `Class`.\r\n- Create New DIPY Workflow (command line)\r\n- For beginner, you will be able to create and contribute your own command line on DIPY\r\n- Increase documentation \r\n\r\n### Visualization Project:\r\n- Visualization dynamic Atlas easily (medium)\r\n- Dynamic Mosaic visualization (medium)\r\n- Create a new widget (Combobox) (medium)\r\n- Create new brain effect with shader (advanced user)\r\n- Increase documentation \r\n\r\n## Preparation material\r\n- DIPY workflows intro: http://nipy.org/dipy/examples_built/workflow_creation.html#example-workflow-creation\r\n- DIPY visualization / FURY -> https://fury.gl or http://nipy.org/dipy/examples_built/viz_ui.html#example-viz-ui or  http://nipy.org/dipy/examples_built/viz_advanced.html#example-viz-advanced\r\n\r\n\r\n## Link to your GitHub repo\r\n- DIPY: https://github.com/nipy/dipy   (`pip install dipy`)\r\n- FURY: https://github.com/fury-gl/fury (`pip install fury`)\r\n\r\n\r\n## Communication\r\nhttps://gitter.im/nipy/dipy\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/70/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/70/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/69",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/69/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/69/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/69/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/69",
        "id": 450879749,
        "node_id": "MDU6SXNzdWU0NTA4Nzk3NDk=",
        "number": 69,
        "title": "Comparing longitudinal registration tools for 2D MRI",
        "user": {
            "login": "brieuclehmann",
            "id": 19205026,
            "node_id": "MDQ6VXNlcjE5MjA1MDI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/19205026?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brieuclehmann",
            "html_url": "https://github.com/brieuclehmann",
            "followers_url": "https://api.github.com/users/brieuclehmann/followers",
            "following_url": "https://api.github.com/users/brieuclehmann/following{/other_user}",
            "gists_url": "https://api.github.com/users/brieuclehmann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brieuclehmann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brieuclehmann/subscriptions",
            "organizations_url": "https://api.github.com/users/brieuclehmann/orgs",
            "repos_url": "https://api.github.com/users/brieuclehmann/repos",
            "events_url": "https://api.github.com/users/brieuclehmann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brieuclehmann/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4850406950,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWJg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/MRI",
                "name": "MRI",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850415818,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt4yg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Matlab",
                "name": "Matlab",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850416369,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt68Q",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/FSL",
                "name": "FSL",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850416371,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt68w",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/SPM",
                "name": "SPM",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850540462,
                "node_id": "LA_kwDOCUpq1c8AAAABIR1frg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/C++",
                "name": "C++",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-05-31T16:25:09Z",
        "updated_at": "2022-11-28T16:55:44Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Comparing longitudinal registration tools for 2D MRI\r\n\r\n## Project Description\r\n\r\nWhile research MRI anatomical images are usually 3D (e.g. FLASH), clinical scans are typically 2D acquisitions with thick slices. In this project, we take up the challenge of longitudinal registration with 2D scans as would typically be acquired in a long term clinical trail (e.g. for multiple sclerosis). Longitudinal brain imaging can be particularly useful in the analysis of volumetric changes or lesion burden, and shows great promise for the development of novel biomarkers. \r\n\r\n\r\nRegistration is a key step in the pipeline that affects all further downstream analysis of neuroimaging data. Although using cross-sectional tools to process longitudinal data is unbiased, this ignores the common information across scans. Longitudinal processing aims to reduce the within-subject variability. Both SPM and FreeSurfer offer tools for longitudinal registration of scans across multiple (more than two) time points and, as with most image processing tools, these have naturally been developed with research-quality data in mind. As researchers are increasingly gaining access to clinical data, however, it would be timely to determine how current longitudinal processing tools perform on lower-quality 2D MRI scans. \r\n\r\nUsing the publicly-available OASIS dataset, we would like to investigate the performance of the SPM and FreeSurfer longitudinal registration tools. The OASIS-3 (Longitudinal Neuroimaging, Clinical, and Cognitive Dataset for Normal Aging and Alzheimer\u2019s Disease) dataset consists of images from c.1000 subjects, many of which are accompanied by volumetric segmentation files produced through FreeSurfer. With these files as a 'gold-standard', we will average slices from 3D acquisitions to simulate 2D acquisitions and assess the accuracy of each processing tool.\r\n\r\n## Skills required to participate\r\n\r\nAny of the following:\r\n\r\n- Experience in programming (mainly Matlab, C or C++)  \r\n\r\n- Experience with FreeSurfer or SPM12  \r\n\r\n- Experience with structural image analysis\r\n\r\n## Integration\r\n\r\nContributions towards any of the following milestones would be very welcome!\r\n\r\n### Milestones\r\n\r\n1. Downsample OASIS T1 3D data to lower-resolution 2D images  \r\n\r\n2. Isolate the longitudinal registration codebase from FreeSurfer  \r\n\r\n3. Longitudinal registration of 2D images in SPM and FreeSurfer  \r\n\r\n4. Assessment of segmentation performance to original 3D images\r\n\r\n## Preparation material\r\n\r\n[The OASIS project](https://www.oasis-brains.org/)  \r\nChapter 27 (Longitudinal registration) of the [SPM 12 manual](https://www.fil.ion.ucl.ac.uk/spm/doc/spm12_manual.pdf)  \r\n[FSL longitudinal processing](https://surfer.nmr.mgh.harvard.edu/fswiki/LongitudinalProcessing)\r\n\r\n#### Papers\r\n- M. Reuter, N.J. Schmansky, H.D. Rosas, B. Fisch (2012): [Within-subject template estimation for unbiased longitudinal image analysis](https://doi.org/10.1016/j.neuroimage.2012.02.084)  \r\n- J. Ashburner, G.R. Ridgeway (2013): [Symmetric diffeomorphic modeling of longitudinal structural MRI](https://doi.org/10.3389/fnins.2012.00197)\r\n\r\n## Communication\r\nJoin the chat in our [mattermost channel](https://mattermost.brainhack.org/brainhack/channels/longitudinal_2dmri) :)",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/69/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/69/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/68",
        "repository_url": "https://api.github.com/repos/ohbm/hackathon2019",
        "labels_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/68/labels{/name}",
        "comments_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/68/comments",
        "events_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/68/events",
        "html_url": "https://github.com/ohbm/hackathon2019/issues/68",
        "id": 450875886,
        "node_id": "MDU6SXNzdWU0NTA4NzU4ODY=",
        "number": 68,
        "title": "Awesome Script to Export Freesurfer-based Parcellation/Segmentation Stats and Provenance as JSON-LD and NIDM ",
        "user": {
            "login": "dbkeator",
            "id": 1322467,
            "node_id": "MDQ6VXNlcjEzMjI0Njc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1322467?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dbkeator",
            "html_url": "https://github.com/dbkeator",
            "followers_url": "https://api.github.com/users/dbkeator/followers",
            "following_url": "https://api.github.com/users/dbkeator/following{/other_user}",
            "gists_url": "https://api.github.com/users/dbkeator/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dbkeator/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dbkeator/subscriptions",
            "organizations_url": "https://api.github.com/users/dbkeator/orgs",
            "repos_url": "https://api.github.com/users/dbkeator/repos",
            "events_url": "https://api.github.com/users/dbkeator/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dbkeator/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1313485667,
                "node_id": "MDU6TGFiZWwxMzEzNDg1NjY3",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "cc0000",
                "default": false,
                "description": "Project suggestion"
            },
            {
                "id": 4686717373,
                "node_id": "LA_kwDOCUpq1c8AAAABF1mhvQ",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/project_tools_skills:expert",
                "name": "project_tools_skills:expert",
                "color": "c2e0c6",
                "default": false,
                "description": ""
            },
            {
                "id": 4850406955,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtWKw",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Python",
                "name": "Python",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850410522,
                "node_id": "LA_kwDOCUpq1c8AAAABIRtkGg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/BIDS",
                "name": "BIDS",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850416369,
                "node_id": "LA_kwDOCUpq1c8AAAABIRt68Q",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/FSL",
                "name": "FSL",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850540938,
                "node_id": "LA_kwDOCUpq1c8AAAABIR1hig",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/ANTs",
                "name": "ANTs",
                "color": "ededed",
                "default": false,
                "description": null
            },
            {
                "id": 4850540942,
                "node_id": "LA_kwDOCUpq1c8AAAABIR1hjg",
                "url": "https://api.github.com/repos/ohbm/hackathon2019/labels/Freesurfer",
                "name": "Freesurfer",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-05-31T16:15:37Z",
        "updated_at": "2022-11-28T16:55:51Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Name of your awesome project\r\nAwesome Script to Export Freesurfer-based Parcellation/Segmentation Stats and Provenance as JSON-LD and NIDM \r\n\r\n## Project Description\r\n\r\nThis project ultimately aims to facilitate both query and analysis of parcellation/segmentation based regional statistics across popular softwares such as [Freesurfer](https://surfer.nmr.mgh.harvard.edu/), [FSL](https://fsl.fmrib.ox.ac.uk/fsl/fslwiki), and [ANTS](http://stnava.github.io/ANTs/). Currently each software produces its own output format and brain region labels are specific to the atlas used in generating the regional statistics.  This makes life difficult when trying to search for \"nucleaus accumbens\" volume, for example, across the different software products.  Further, knowing which version of the software tool used and what atlas and version of the atlas in a structured representation facilitating query is lacking.  To this end we propose augmenting the various segmentation tools with scripts that will: (1) map atlas-specific anatomical nomeclature to anatomical concepts hosted in terminology resources (e.g. InterLex); (2) capture better structured provenance about the input image(s) and the atlases used for the segmentation; (3) export the segmentation results and the provenance as either [JSON-LD](https://json-ld.org/), [NIDM](http://nidm.nidash.org/) which can then link the derived data to broader records of the original project metadata, or as an additional component of a BIDS derivative.\r\n\r\nWe aim to tackle this problem in steps.  For this hackathon project we'll be focusing on conversion from Freesurfer's [mri_segstats](https://surfer.nmr.mgh.harvard.edu/fswiki/mri_segstat) program output along with some additional parsing/conversion of Freesurfer log files.\r\n\r\n## Skills required to participate\r\n\r\nPython and structural neuroimaging experience.  If one has experience with [rdflib](https://github.com/RDFLib/rdflib) or [PROV](https://github.com/trungdong/prov) that would also be helpful.  Any neuroanatomists in the audience?  Would be helpful to have someone vet our mappings from atlas labels to anatomy terms.\r\n\r\n## Integration\r\nThis project will need expertise in programming, structural neuroimaging, and anatomy.  To make this project sucessful we need individuals who have skills in any of these domains to help with: (1) understand Freesurfer's segmentation results format and log files; (2) programming up a script in Python; (3) understand anatomy well enough to select the proper anatomical concept that maps to a specific atlas designation of a region and ***can define new anatomy terms where needed, linking them to broader concepts*** to facilitate segmentation results queries across softwares.\r\n\r\n## Preparation material\r\n* [Freesurfer](https://surfer.nmr.mgh.harvard.edu/)\r\n* [mri_segstats](https://surfer.nmr.mgh.harvard.edu/fswiki/mri_segstat)\r\n* [rdflib](https://github.com/RDFLib/rdflib)\r\n* [PyNIDM](https://github.com/incf-nidash/PyNIDM)\r\n* [InterLex Term Search](https://scicrunch.org/scicrunch/interlex/dashboard)\r\n* Examples done pseudo-manually of Freesurfer, FSL, and ANTS segmentation data added to NIDM documents for [ABIDE](https://github.com/dbkeator/simple2_NIDM_examples/tree/master/datasets.datalad.org/abide/RawDataBIDS) and [ADHD200](https://github.com/dbkeator/simple2_NIDM_examples/tree/master/datasets.datalad.org/adhd200/RawDataBIDS) datasets\r\n\r\n\r\n## Link to your GitHub repo\r\n[segstats_jsonld](https://github.com/dbkeator/segstats_jsonld)  \r\n    with ***WIP*** [ReadMe.md](https://github.com/dbkeator/segstats_jsonld/blob/master/README.md) containing \r\n***NOTE, this temporary github repo may change to be under ReproNim space***\r\n\r\n## Communication\r\nHaven't gotten this far yet but questions can be posted as issues in the GitHub repo linked above for via slack (@dbkeator) / mattermost (@dbkeator) / gmail (dbkeator@gmail.com)\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/ohbm/hackathon2019/issues/68/reactions",
            "total_count": 3,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 2,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/ohbm/hackathon2019/issues/68/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]