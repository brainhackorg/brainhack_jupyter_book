[
    {
        "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/13",
        "repository_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon",
        "labels_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/13/labels{/name}",
        "comments_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/13/comments",
        "events_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/13/events",
        "html_url": "https://github.com/OpenMRBenelux/openmrb2020-hackathon/issues/13",
        "id": 552572058,
        "node_id": "MDU6SXNzdWU1NTI1NzIwNTg=",
        "number": 13,
        "title": "Guidelines for organising Open Science and Hackathon Events",
        "user": {
            "login": "sofievdbos",
            "id": 23309041,
            "node_id": "MDQ6VXNlcjIzMzA5MDQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23309041?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sofievdbos",
            "html_url": "https://github.com/sofievdbos",
            "followers_url": "https://api.github.com/users/sofievdbos/followers",
            "following_url": "https://api.github.com/users/sofievdbos/following{/other_user}",
            "gists_url": "https://api.github.com/users/sofievdbos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sofievdbos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sofievdbos/subscriptions",
            "organizations_url": "https://api.github.com/users/sofievdbos/orgs",
            "repos_url": "https://api.github.com/users/sofievdbos/repos",
            "events_url": "https://api.github.com/users/sofievdbos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sofievdbos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1678765999,
                "node_id": "MDU6TGFiZWwxNjc4NzY1OTk5",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "c94528",
                "default": false,
                "description": ""
            },
            {
                "id": 1688060677,
                "node_id": "MDU6TGFiZWwxNjg4MDYwNjc3",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/git%20-%200",
                "name": "git - 0",
                "color": "7ae2b3",
                "default": false,
                "description": "no prior git knowledge"
            },
            {
                "id": 1688069459,
                "node_id": "MDU6TGFiZWwxNjg4MDY5NDU5",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/no%20code",
                "name": "no code",
                "color": "8f9b0d",
                "default": false,
                "description": "no coding experience required"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-01-21T01:09:20Z",
        "updated_at": "2020-01-25T15:46:16Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "# Integrating and improving existing guidelines for organising Open Science and Hackathon events\r\n\r\n## Project Description\r\n<p><div style=\"text-align: justify\">Organizing and participating in scientific conferences, workshops, and meetings are important aspects of developing yourself as an academic researcher. In these events, you will not only share your own research with a broader audience who have similar interests which will foster further discussion and collaboration, you might also learn and/or teach new skills while connecting with other researchers. As a result, your academic network will extend and you might gain new insights, perspectives, and ideas. </div></p>\r\n\r\n<p><div style=\"text-align: justify\">However, the organization of these scientific events requires a lot of effort, which might be facilitated by the creation and continuous improvement of existing guidelines. And what better place to collect and implement ideas that here: @OpenMR Benelux 2020 where researchers with a variety of backgrounds are gathered together! Please feel free to join us and give input based on your own experiences in this and previous events, either as an organiser or as a participant.</div></p>\r\n\r\n### Specific goals\r\nIntermediate goals:\r\n* list main guidelines for the organisation of Open Science and Hackathon events (e.g. <a href=\"https://github.com/brainhackorg/bhg-event-materials\">BrainHack Global</a>): \r\n   - where are they centralized? \r\n   - which ones to use? \r\n* collect input:\r\n   - identify points of improvement based on knowledge/experiences from previous events you attended, either as an organiser or as a participant; events you found online; the current event (@OpenMR Benelux 2020); \u2026 \r\n   - list according to required workload + required skills/knowledge \r\n   - examples could include:\r\n      - a template for an event registration form\r\n      - templates for emails to send to attendees and speakers\r\n      - approaches to apply for funding\r\n      - a template for an event website\r\n      - suggestions for the technology stack to use to ensure efficient data collection from and communication with attendees\r\n* select (i.e. add your name to) an input item to work on (individually and/or in group): \r\n   - discuss and adapt accordingly \r\n   - if you have a \u201cfinal\u201d product: integrate to the appropriate main guideline on GitHub by means of a Pull Request after which more feedback might be received from the scientific community\r\n\r\n## Skills required to participate + Integration\r\n<p><div style=\"text-align: justify\">We welcome everyone who is interested in improving and facilitating the organization of scientific events. Everyone can contribute by giving input based on their own experiences in this and previous events, either as an organiser or as a participant. Moreover, by listing the inputs according to their workload and required skills/knowledge, participants can choose to discuss and work on whatever they feel confident/comfortable with.</div></p>\r\n\r\n### Coding skills?\r\nNo specific coding skills required.\r\n\r\n### Software skills?\r\nNo specific software skills required.\r\n\r\n### GIT/GITHUB skills?\r\n| GIT - 0 | no prior git knowledge                                                            |\r\n| GIT - 1 | can commit and push to a repository                                               |\r\n| GIT - 2 | comfortable working with branches and can do a pull request on another repository; in order to submit a Pull Request to the appropriate main guideline = last step | \r\n\r\n## Preparation material\r\n\r\n## Link to your GitHub repo\r\n* We will first start by brainstorming in this <a href=\"https://docs.google.com/document/d/1ngbHR-Jx-2bIOQsE6gERY2zrjVVS064acPvxGWEKSHU/edit?usp=sharing\">Google Drive document</a>. \r\n* In a next step, materials can be created on <a href=\"https://github.com/sofievdbos/OMRB20_hackathon-organisitation_os_events\">this repo</a>.\r\n\r\n## Communication\r\nLink to this project's Slack channel: <a href=\"https://app.slack.com/client/TFKL50SKV/CSYL1JKCN/thread/GRPMCK63X-1579539646.003500\">#hackathon-organisitation_os_events</a>\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/13/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/13/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/12",
        "repository_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon",
        "labels_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/12/labels{/name}",
        "comments_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/12/comments",
        "events_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/12/events",
        "html_url": "https://github.com/OpenMRBenelux/openmrb2020-hackathon/issues/12",
        "id": 551752025,
        "node_id": "MDU6SXNzdWU1NTE3NTIwMjU=",
        "number": 12,
        "title": "With eCOBIDAS you will never have to write a method section ever again",
        "user": {
            "login": "Remi-Gau",
            "id": 6961185,
            "node_id": "MDQ6VXNlcjY5NjExODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6961185?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Remi-Gau",
            "html_url": "https://github.com/Remi-Gau",
            "followers_url": "https://api.github.com/users/Remi-Gau/followers",
            "following_url": "https://api.github.com/users/Remi-Gau/following{/other_user}",
            "gists_url": "https://api.github.com/users/Remi-Gau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Remi-Gau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Remi-Gau/subscriptions",
            "organizations_url": "https://api.github.com/users/Remi-Gau/orgs",
            "repos_url": "https://api.github.com/users/Remi-Gau/repos",
            "events_url": "https://api.github.com/users/Remi-Gau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Remi-Gau/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1678765999,
                "node_id": "MDU6TGFiZWwxNjc4NzY1OTk5",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "c94528",
                "default": false,
                "description": ""
            },
            {
                "id": 1688060677,
                "node_id": "MDU6TGFiZWwxNjg4MDYwNjc3",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/git%20-%200",
                "name": "git - 0",
                "color": "7ae2b3",
                "default": false,
                "description": "no prior git knowledge"
            },
            {
                "id": 1688069459,
                "node_id": "MDU6TGFiZWwxNjg4MDY5NDU5",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/no%20code",
                "name": "no code",
                "color": "8f9b0d",
                "default": false,
                "description": "no coding experience required"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-18T10:36:48Z",
        "updated_at": "2020-01-18T10:37:12Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "# With eCOBIDAS you will never have to write a method section ever again\r\n\r\n## Project Description\r\n\r\nThe eCOBIDAS app is meant to provide neuroimaging, EEG, MEG researchers with a clickable methods checklist that can **automatically** generate most of the method section of a f/MRI or EEG / MEEG paper.\r\n\r\nWe already have a early [prototype of the app](https://cobidas-checklist.herokuapp.com) that provides a short checklist of many methodological aspects of a typical fMRI study and that can generate a small text files containing the response given by the user to each item.\r\n\r\n### Specific goal\r\n\r\nOne big piece that is still missing to have good proof of concept for this app is the boilerplate text that the app will generate.\r\n\r\nSo the goal of this hackathon is to create template methods section with blanks or several options to adapt to the responses provided by users.\r\n\r\n## Skills required to participate\r\n\r\nNo specific technical skill is required as most of the work will be done collaboratively in [a google doc](https://docs.google.com/document/d/1oRDVOORap2aUSpxoi6432_uYpcM1EhG6bLK7ZlCUZvw/edit?usp=sharing).\r\n\r\nSome prior experience with MRI would be helpful.\r\n\r\n### Coding skills\r\n\r\nNo coding sills required: most of the work will be done in a google doc.\r\n\r\nBut we are looking for people with some knowledge in javascript and/or python for later goals unrelated to this hackathon. :-)\r\n\r\n\r\n### Software specific sills\r\n\r\nNo software specific sills required.\r\n\r\nSome prior experience with some of the typical MRI analysis software (SPM, FSL, freesurfer, AFNI...) could be useful.\r\n\r\n\r\n### GIT / GITHUB skills required\r\n\r\nGIT - 0 : no prior git knowledge needed but you will have the possibility to learn some if you want.\r\n\r\n\r\n## Integration\r\nBecause this eCOBIDAS app is meant to be used by a wide range of users in the neuroimaging, EEG, MEG community, we want to make sure that it can respond to a very wide range of needs. So even if you only have little time during the openMR2020 event, drop by to learn more about the app and give us feedback or ideas.\r\n\r\n\r\n## Preparation material\r\n\r\n-   The [prototype of the eCOBIDAS checklist app](https://cobidas-checklist.herokuapp.com)\r\n\r\n-   The MRI spreadsheet containing all the items of the COBIDAS checklist is accessible [here](https://docs.google.com/spreadsheets/d/1dCXP0MTK3DjY09ZFd7FXgv0Ngx16_YJwVBiXOeQbTho/edit?usp=sharing)\r\n\r\n-   Some of the boilerplate section that already exist out there have been collected and can be accessed on the [dedicated branch the app repository](https://github.com/Remi-Gau/COBIDAS_chckls/tree/remi-dev_boilerplate/boilerplate).\r\n\r\n-   The excellent Jeanette Mumford has a [30 min video](https://www.youtube.com/watch?v=bsM4KowO5Vc&t=175s) explaining the background behind the COBIDAS report and giving a run through of the checklist.\r\n\r\n\r\n## Link to your GitHub repo\r\n\r\nThe main repository to check is this [one](https://github.com/Remi-Gau/COBIDAS_chckls).\r\n\r\n\r\n## Communication\r\n\r\nDuring the openMR2020 event, you can reach us on the hackathon-COBIDAS channel of the openMR slack workspace.\r\n\r\nOtherwise we are mostly on the [cobidas_checklist of the brainhack mattermost](https://mattermost.brainhack.org/brainhack/channels/cobidas_checklist).\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/12/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/12/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/10",
        "repository_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon",
        "labels_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/10/labels{/name}",
        "comments_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/10/comments",
        "events_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/10/events",
        "html_url": "https://github.com/OpenMRBenelux/openmrb2020-hackathon/issues/10",
        "id": 550937548,
        "node_id": "MDU6SXNzdWU1NTA5Mzc1NDg=",
        "number": 10,
        "title": "Improve the interface between BIDS and MATLAB",
        "user": {
            "login": "pvdemael",
            "id": 37624277,
            "node_id": "MDQ6VXNlcjM3NjI0Mjc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/37624277?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pvdemael",
            "html_url": "https://github.com/pvdemael",
            "followers_url": "https://api.github.com/users/pvdemael/followers",
            "following_url": "https://api.github.com/users/pvdemael/following{/other_user}",
            "gists_url": "https://api.github.com/users/pvdemael/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pvdemael/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pvdemael/subscriptions",
            "organizations_url": "https://api.github.com/users/pvdemael/orgs",
            "repos_url": "https://api.github.com/users/pvdemael/repos",
            "events_url": "https://api.github.com/users/pvdemael/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pvdemael/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1678765999,
                "node_id": "MDU6TGFiZWwxNjc4NzY1OTk5",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "c94528",
                "default": false,
                "description": ""
            },
            {
                "id": 1688060677,
                "node_id": "MDU6TGFiZWwxNjg4MDYwNjc3",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/git%20-%200",
                "name": "git - 0",
                "color": "7ae2b3",
                "default": false,
                "description": "no prior git knowledge"
            },
            {
                "id": 1688068256,
                "node_id": "MDU6TGFiZWwxNjg4MDY4MjU2",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/matlab",
                "name": "matlab",
                "color": "e8336c",
                "default": false,
                "description": "matlab based project"
            },
            {
                "id": 1688068681,
                "node_id": "MDU6TGFiZWwxNjg4MDY4Njgx",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/python",
                "name": "python",
                "color": "159119",
                "default": false,
                "description": "python based project"
            },
            {
                "id": 1791745057,
                "node_id": "MDU6TGFiZWwxNzkxNzQ1MDU3",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/BIDS",
                "name": "BIDS",
                "color": "f9e9ae",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-01-16T17:02:04Z",
        "updated_at": "2020-01-23T16:23:07Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Introduction\r\n\r\n[BIDS or Brain Imaging Data Structure](https://bids.neuroimaging.io/) can be decribed as a simple and intuitive way to organize and describe your neuroimaging and behavioral data.\r\nBIDS is not an image format, but describes a formal human- and computer-readable way of setting up a folder structure, a filenaming convention and the storing of metadata from neuroimaging studies.\r\nAn introduction to the BIDS specification is published in a [Nature Scientific Data paper](https://www.nature.com/articles/sdata201644). \r\n\r\nBIDS allows to \r\n- easily share data with other researchers (within and between labs)\r\n- setup processing pipelines which can be triggered automatically as the data is computer readable\r\n- use several BIDS-compatible tools in one processing pipeline, getting the best out of all tools\r\n- make sure that you still know your data after 10 years not looking at it as the data is human readable and structured\r\n\r\n## Community\r\nBIDS is gaining more and more importance in the open science neuroimaging community.\r\nA recent [survey ](https://medium.com/stanford-center-for-reproducible-neuroscience/bids-usage-survey-results-72637ff039c4)showed that the MRI is the main modality to use BIDS.\r\nThis community is very vivid with videoconferencing, online meetings, collaborations, Google Docs documents, a [github page](https://github.com/bids-standard/) etc.\r\nSince publication, BIDS has been extended with 4 other modalities and 23 extensions (BEP, BIDS Extension Proposal) are under development.  BEP005 on ASL and BEP009 on PET are now very close to completion.\r\n![image](https://user-images.githubusercontent.com/37624277/72545047-ae590a00-3888-11ea-84c2-81ecfed10dc5.png)\r\n\r\n## Tools\r\nThere are already some tools available to generate or interact with a BIDS dataset.\r\nSome of these tools are organized under [BIDS Apps](https://bids-apps.neuroimaging.io/) which are portable BIDS compatible neuroimaging tools using e.g. Docker.\r\nWe can split up these tools by their use:\r\n\r\n- VALIDATION\r\nA very important tool is the [BIDS Validator](https://bids-standard.github.io/bids-validator/), a web application which can be used to validate your BIDS dataset against the specification.\r\n\r\n- CONVERTING\r\nDatasets from all modalities must be converted to BIDS. For Dicom data, dcm2niix is an important tool. Heudiconv, dcm2BIDS and BIDSKit are other examples. Also specific tools like pybv or MNE_bids are available.\r\n\r\n- INTERPRETING\r\nTo be able to work with BIDS datasets, one must be able to interpret datasets. A reference implementation is [pybids](https://github.com/bids-standard/pybids).\r\nMost tools are written in Python.\r\n\r\n- PROCESSING/MANIPULATION\r\nA lot of software tools (SPM, FSL, mriqc, ...) implement parts of the BIDS specification.\r\nA big issue is that those tools do often not implement the whole specification.\r\nThe FSL website e.g. states:\r\n> Note\r\n> \r\n> The pybids library is a more suitable choice if you are after a more robust and featured interface for working with BIDS datasets.\r\n\r\n## Challenge\r\nAs said before, almost all tools are written in Python. Some efforts are made to implement a BIDS interpreter in Matlab The topic of this project is to discuss on a good interface between BIDS and Matlab and test/improve current Matlab based packages.\r\n\r\nSome suggestions of topics can be:\r\n- wish list: what is necessary to have a good interface/API\r\n- define the interface (eg like pybids, bids-matlab, matbids or something else)\r\n- inventorize BIDS compatible packages (Python & Matlab) and identify distinct implementations\r\n- compare current Matlab packages (BIDS-matlab, matbids, ...)\r\n- what about adding files to the Matlab BIDS data structure on the fly during analysis (not possible in current packages)\r\n- a completely Matlab-based BIDS converter\r\n- what is necessary to make a (Matlab) BIDS interpreter tool future proof: what are the good design practices to make sure that the package can easily deal with new extensions\r\n- For the coders: improve BIDS-matlab, matbids or other custom Matlab scripts, compare them, do code-profiling, improve design, improve interface, clean-up etc.\r\n\r\nThis list is obviously non-exhaustive and not-binding!\r\n\r\n## Outcome\r\nIdeally, we end with a well-defined interface for a Matlab package (based or not on one of the existing ones), have and idea on good practices, a working-plan, etc.\r\n \r\n## Skills to participate\r\n### General\r\nNo real skills are necessary to discuss on data sharing. However, some knowledge of the BIDS specification is recommended.\r\n\r\n### Coding \r\nIf you would like to work on the code, knowledge of Matlab and eventually Python is recommended.\r\n\r\n## Organization\r\nDepending on the group size and interests, we will need to split up in taskforces.\r\n\r\n## Links\r\n[https://bids.neuroimaging.io/](url)\r\n[https://github.com/bids-standard](url)\r\n[https://www.nature.com/articles/sdata201644](url)\r\nhttps://medium.com/stanford-center-for-reproducible-neuroscience/bids-usage-survey-results-72637ff039c4",
        "reactions": {
            "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/10/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/10/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/9",
        "repository_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon",
        "labels_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/9/labels{/name}",
        "comments_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/9/comments",
        "events_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/9/events",
        "html_url": "https://github.com/OpenMRBenelux/openmrb2020-hackathon/issues/9",
        "id": 550654606,
        "node_id": "MDU6SXNzdWU1NTA2NTQ2MDY=",
        "number": 9,
        "title": "Comparing cortical and subcortical brain dynamics",
        "user": {
            "login": "dr-xenia",
            "id": 26187290,
            "node_id": "MDQ6VXNlcjI2MTg3Mjkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/26187290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dr-xenia",
            "html_url": "https://github.com/dr-xenia",
            "followers_url": "https://api.github.com/users/dr-xenia/followers",
            "following_url": "https://api.github.com/users/dr-xenia/following{/other_user}",
            "gists_url": "https://api.github.com/users/dr-xenia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dr-xenia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dr-xenia/subscriptions",
            "organizations_url": "https://api.github.com/users/dr-xenia/orgs",
            "repos_url": "https://api.github.com/users/dr-xenia/repos",
            "events_url": "https://api.github.com/users/dr-xenia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dr-xenia/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1678765999,
                "node_id": "MDU6TGFiZWwxNjc4NzY1OTk5",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "c94528",
                "default": false,
                "description": ""
            },
            {
                "id": 1688060677,
                "node_id": "MDU6TGFiZWwxNjg4MDYwNjc3",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/git%20-%200",
                "name": "git - 0",
                "color": "7ae2b3",
                "default": false,
                "description": "no prior git knowledge"
            },
            {
                "id": 1688068681,
                "node_id": "MDU6TGFiZWwxNjg4MDY4Njgx",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/python",
                "name": "python",
                "color": "159119",
                "default": false,
                "description": "python based project"
            },
            {
                "id": 1781622965,
                "node_id": "MDU6TGFiZWwxNzgxNjIyOTY1",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/unix%20command%20line",
                "name": "unix command line",
                "color": "c5def5",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-01-16T08:36:52Z",
        "updated_at": "2020-01-21T20:42:58Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Comparing cortical and subcortical brain dynamics\r\n\r\n## Project Description\r\nI would like to compare the dynamics of cortical and subcortical brain areas. I imagine this project to be partly an open discussion about what metrics might be useful for comparison and partly playing around with awesome toolboxes and code. The project should be fun and creative but teach us at the same time about brain dynamics and the available toolboxes. The data is already preprocessed by me, so we will not lose time on that. If you have questions about preprocessing, you can of course ask me!\r\n\r\n### Specific goal\r\n- research, discuss and decide which metrics are most informative for comparing brain regions\r\n- calculate brain dynamics in two different sets of regions and compare them\r\n- for those interested: create mindblowing visualisations \r\n\r\n## Skills required to participate\r\nWhat different types of people could contribute?\r\n\r\n### Creative skills\r\nPeople who would like to dive into a new topic and get inspired by the different toolboxes out there.\r\n\r\n### Coding skills\r\nCoding skills might be nice for the some parts, but we also need people who would like to read about brain dynamics as well! So you can join independent of your coding expertise.\r\n\r\n| language          | level of expertise (optional)   |\r\n|-------------------|-------------------------------|\r\n| python            | beginner / **confirmed** / expert |\r\n| unix command line | **beginner** / confirmed / expert |\r\n\r\n### software specific skills\r\n- no software specific skills required\r\n\r\n### GIT / GITHUB skills \r\n- no software specific skills required\r\n\r\n## Integration\r\nIn this project I am looking for people from different backgrounds interested in learning more about brain dynamics. No coding skills are necessarily required. People who have fun diving into a new topic or who would like to play around with visualising brain dynamics would be a great asset as well! \r\n\r\n## Preparation material\r\nYou can, for example, have a look at the [OHBM  list of online tutorials](https://github.com/ohbm/hackathon2019/blob/master/Tutorial_Resources.md).\r\n\r\n## Link to the GitHub repo\r\nAll the code from the project will be stored  [here](https://github.com/dr-xenia/cortical_vs_subcortical_dynamics).\r\n\r\n## Communication\r\nCommunication will be mostly through slack via the #hackathon_cortical_subcortical channel. Write me via the channel if you'd like to join :). Looking forward to meeting you!\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/9/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/9/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/8",
        "repository_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon",
        "labels_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/8/labels{/name}",
        "comments_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/8/comments",
        "events_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/8/events",
        "html_url": "https://github.com/OpenMRBenelux/openmrb2020-hackathon/issues/8",
        "id": 549493480,
        "node_id": "MDU6SXNzdWU1NDk0OTM0ODA=",
        "number": 8,
        "title": "A functional parcellation of the mouse brain",
        "user": {
            "login": "grandjeanlab",
            "id": 22633767,
            "node_id": "MDQ6VXNlcjIyNjMzNzY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/22633767?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/grandjeanlab",
            "html_url": "https://github.com/grandjeanlab",
            "followers_url": "https://api.github.com/users/grandjeanlab/followers",
            "following_url": "https://api.github.com/users/grandjeanlab/following{/other_user}",
            "gists_url": "https://api.github.com/users/grandjeanlab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/grandjeanlab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/grandjeanlab/subscriptions",
            "organizations_url": "https://api.github.com/users/grandjeanlab/orgs",
            "repos_url": "https://api.github.com/users/grandjeanlab/repos",
            "events_url": "https://api.github.com/users/grandjeanlab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/grandjeanlab/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1678765999,
                "node_id": "MDU6TGFiZWwxNjc4NzY1OTk5",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "c94528",
                "default": false,
                "description": ""
            },
            {
                "id": 1688060677,
                "node_id": "MDU6TGFiZWwxNjg4MDYwNjc3",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/git%20-%200",
                "name": "git - 0",
                "color": "7ae2b3",
                "default": false,
                "description": "no prior git knowledge"
            },
            {
                "id": 1688068256,
                "node_id": "MDU6TGFiZWwxNjg4MDY4MjU2",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/matlab",
                "name": "matlab",
                "color": "e8336c",
                "default": false,
                "description": "matlab based project"
            },
            {
                "id": 1688068681,
                "node_id": "MDU6TGFiZWwxNjg4MDY4Njgx",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/python",
                "name": "python",
                "color": "159119",
                "default": false,
                "description": "python based project"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-14T11:06:06Z",
        "updated_at": "2020-01-14T16:16:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Functional parcellation of the mouse brain\r\n\r\n## Project Description\r\nA precise atlas of the brain is an essential step to uncover brain functional mechanisms in the healthy and diseased brain. Non-invasive neuroimaging have provided reproducible parcellations of the human brain. In animal models of neuroscience, parcellations have usually relied on cytoarchitecture (changes in cellular density over space) to infer on parcellation. We propose to implement homologous parcellation methods derived from human fMRI data to develop a mouse brain atlas using a collection of >1000 high-resolution mouse fMRI data previously acquired using dedicated MRI systems.     \r\n\r\n### Specific goal\r\nwe propose to implement the 'Gordon' method (https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4677978/) to brain parcellation to mouse fMRI data preprocessed and normalized into a common space (AIBS ccfv3). The mouse fMRI data is a collection from different dataset published since 2014 on the central.xnat.org and openneuro.org repository. The data is available in readily preprocess format  \r\n\r\nThe outcome is a 3D volumetric mouse brain atlas, and a comparison to its cytoarchitecture counterpart, and to human atlases.  \r\n\r\n## Skills required to participate\r\nAn interest in neuroscience. \r\n\r\n### Coding skills\r\nPython or matlab. The original method was carried out using the watershed function in matlab. Such a function should exist in python too. \r\n\r\n| language          | level of expertise required   |\r\n|-------------------|-------------------------------|\r\n| python            | beginner  |\r\n| matlab        | beginner  |\r\n\r\n### software specific sills\r\n\r\n- no software specific skills required\r\n\r\n### GIT / GITHUB skills required\r\n\r\n- no software specific sills required                                              |\r\n\r\n## Integration\r\nThe project is a basic science project that can interest a range of people interested in neuroscience, including comparative neuroanatomy, physiology, imaging, and computational neuroscience. \r\n\r\n## Preparation material\r\nhttps://www.ncbi.nlm.nih.gov/pmc/articles/PMC4677978/ : the original method described. \r\nhttps://www.ncbi.nlm.nih.gov/pmc/articles/PMC3174820/ : an alternative method. \r\nhttps://www.ncbi.nlm.nih.gov/pmc/articles/PMC6596781/ : an exemple of mouse fMRI data being implemented and compared to neuroanatomy\r\n\r\n## Link to your GitHub repo\r\nhttps://grandjeanlab.github.io/\r\n\r\n## Communication\r\nTo be determined. I intended to attend the lectures rather than hackathon. \r\nReach me at: https://grandjeanlab.github.io/pages/contact.html",
        "reactions": {
            "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/8/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/8/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/7",
        "repository_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon",
        "labels_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/7/labels{/name}",
        "comments_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/7/comments",
        "events_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/7/events",
        "html_url": "https://github.com/OpenMRBenelux/openmrb2020-hackathon/issues/7",
        "id": 549065115,
        "node_id": "MDU6SXNzdWU1NDkwNjUxMTU=",
        "number": 7,
        "title": "Wacky brain explosions with the slowest particle simulator on earth",
        "user": {
            "login": "ofgulban",
            "id": 4668327,
            "node_id": "MDQ6VXNlcjQ2NjgzMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4668327?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ofgulban",
            "html_url": "https://github.com/ofgulban",
            "followers_url": "https://api.github.com/users/ofgulban/followers",
            "following_url": "https://api.github.com/users/ofgulban/following{/other_user}",
            "gists_url": "https://api.github.com/users/ofgulban/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ofgulban/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ofgulban/subscriptions",
            "organizations_url": "https://api.github.com/users/ofgulban/orgs",
            "repos_url": "https://api.github.com/users/ofgulban/repos",
            "events_url": "https://api.github.com/users/ofgulban/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ofgulban/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1678765999,
                "node_id": "MDU6TGFiZWwxNjc4NzY1OTk5",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "c94528",
                "default": false,
                "description": ""
            },
            {
                "id": 1688063469,
                "node_id": "MDU6TGFiZWwxNjg4MDYzNDY5",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/git%20-%202",
                "name": "git - 2",
                "color": "7ae2b3",
                "default": false,
                "description": "comfortable working with branches and can do a pull request on another repository"
            },
            {
                "id": 1688068681,
                "node_id": "MDU6TGFiZWwxNjg4MDY4Njgx",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/python",
                "name": "python",
                "color": "159119",
                "default": false,
                "description": "python based project"
            },
            {
                "id": 1781622965,
                "node_id": "MDU6TGFiZWwxNzgxNjIyOTY1",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/unix%20command%20line",
                "name": "unix command line",
                "color": "c5def5",
                "default": false,
                "description": ""
            },
            {
                "id": 1785666680,
                "node_id": "MDU6TGFiZWwxNzg1NjY2Njgw",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/C%20/%20C++%20/%20Cython",
                "name": "C / C++ / Cython",
                "color": "4ad350",
                "default": false,
                "description": "Cython"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-01-13T17:07:07Z",
        "updated_at": "2020-01-15T14:49:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Wacky brain explosions with the slowest particle simulator on earth\r\n[Omer Faruk Gulban](http://orcid.org/0000-0001-7761-3727)\r\n\r\n## Project Description\r\nParticle simulations are used to generate visual effects (in [movies](https://www.youtube.com/watch?v=9H1gRQ6S7gg), [games](https://www.gdcvault.com/play/1025695/Exploring-the-Tech-and-Design) etc...). In this project, I want to explore how we can use magnetic resonance imaging (MRI) data to generate interesting visual effects by using (2D) particle simulations. My aim is to start with simple simulations to create unrealistic visuals and add complexity gradually. I have had this idea after reading [this excellent blog post](https://nialltl.neocities.org/articles/mpm_guide.html) on particle simulations.\r\n\r\n![animation](https://user-images.githubusercontent.com/4668327/72275576-7ce50200-362e-11ea-8d5e-c6cd88d49ab2.gif)\r\n\r\nAs can be seen in the gif above, I already have a rudimentary implementation. This implementation is in Python, which is very slow but highly understandable. So other than adding complexity to the simulations, there will be some optimization and parallelization effort. However the focus will be on understanding the algorithm behind. Therefore I would like to keep the implementation easy to follow, which might result in not going for the *optimal* optimization at times (following the spirit of the main [reference](https://nialltl.neocities.org/articles/mpm_guide.html)).\r\n\r\nI am also planning to add a simple *command line interface* to allow people to generate such animations from nifti files (as similarly done in [here](https://github.com/miykael/gif_your_nifti)).\r\n\r\n## Skills required to participate\r\n- Experience in programming (mainly Python; C or Cython might come in handy too.\r\n- Experience with git version control system.\r\n- Desire to generate wacky visual effects with brains.\r\n\r\n## Specific goals\r\n1. Discuss conceptual and implementation details.\r\n2. Do a bit of optimization.\r\n3. Build a command line interface.\r\n4. Apply it to different sorts of brain images.\r\n\r\n## Integration\r\nPeople can help with programming, testing, documenting, or *in other ways that I couldn't think of*.\r\n\r\n## Preparation material\r\n- [This blog post](https://nialltl.neocities.org/articles/mpm_guide.html) and the references within.\r\n\r\n## Link to your GitHub repo\r\nThis project will live on [in this repository](https://github.com/ofgulban/slowest-particle-simulator-on-earth)\r\n\r\n## Communication\r\nSee [this OpenMR Benelux slack channel](https://openmrworkspace.slack.com/archives/CS951AN7L).",
        "reactions": {
            "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/7/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/7/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/6",
        "repository_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon",
        "labels_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/6/labels{/name}",
        "comments_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/6/comments",
        "events_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/6/events",
        "html_url": "https://github.com/OpenMRBenelux/openmrb2020-hackathon/issues/6",
        "id": 548443991,
        "node_id": "MDU6SXNzdWU1NDg0NDM5OTE=",
        "number": 6,
        "title": "Translating MATLAB code to Python: Cortical Lesion Finder",
        "user": {
            "login": "barbrakr",
            "id": 50030195,
            "node_id": "MDQ6VXNlcjUwMDMwMTk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/50030195?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/barbrakr",
            "html_url": "https://github.com/barbrakr",
            "followers_url": "https://api.github.com/users/barbrakr/followers",
            "following_url": "https://api.github.com/users/barbrakr/following{/other_user}",
            "gists_url": "https://api.github.com/users/barbrakr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/barbrakr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/barbrakr/subscriptions",
            "organizations_url": "https://api.github.com/users/barbrakr/orgs",
            "repos_url": "https://api.github.com/users/barbrakr/repos",
            "events_url": "https://api.github.com/users/barbrakr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/barbrakr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1678765999,
                "node_id": "MDU6TGFiZWwxNjc4NzY1OTk5",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "c94528",
                "default": false,
                "description": ""
            },
            {
                "id": 1688063469,
                "node_id": "MDU6TGFiZWwxNjg4MDYzNDY5",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/git%20-%202",
                "name": "git - 2",
                "color": "7ae2b3",
                "default": false,
                "description": "comfortable working with branches and can do a pull request on another repository"
            },
            {
                "id": 1688068256,
                "node_id": "MDU6TGFiZWwxNjg4MDY4MjU2",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/matlab",
                "name": "matlab",
                "color": "e8336c",
                "default": false,
                "description": "matlab based project"
            },
            {
                "id": 1688068681,
                "node_id": "MDU6TGFiZWwxNjg4MDY4Njgx",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/python",
                "name": "python",
                "color": "159119",
                "default": false,
                "description": "python based project"
            },
            {
                "id": 1688078601,
                "node_id": "MDU6TGFiZWwxNjg4MDc4NjAx",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/SPM",
                "name": "SPM",
                "color": "0052cc",
                "default": false,
                "description": "project needs some SPM related knowledge"
            },
            {
                "id": 1688080975,
                "node_id": "MDU6TGFiZWwxNjg4MDgwOTc1",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/FSL",
                "name": "FSL",
                "color": "d3ffb2",
                "default": false,
                "description": "project needs some FSL related knowledge"
            },
            {
                "id": 1688081506,
                "node_id": "MDU6TGFiZWwxNjg4MDgxNTA2",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/freesurfer",
                "name": "freesurfer",
                "color": "ea4fbe",
                "default": false,
                "description": "project needs some Freesurfer related knowledge"
            },
            {
                "id": 1781622965,
                "node_id": "MDU6TGFiZWwxNzgxNjIyOTY1",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/unix%20command%20line",
                "name": "unix command line",
                "color": "c5def5",
                "default": false,
                "description": ""
            },
            {
                "id": 1781623110,
                "node_id": "MDU6TGFiZWwxNzgxNjIzMTEw",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/nipype",
                "name": "nipype",
                "color": "f2d28c",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-01-11T15:39:23Z",
        "updated_at": "2020-01-23T13:25:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Cortical Lesion Finder\r\n[Barbara A.K. Kreilkamp](https://orcid.org/0000-0001-6881-5191)\r\n## Project Description\r\nThe high anatomic specificity of MRI may depict focal lesions and can be expertly assessed by visual analysis through neuroradiologists (Von Oertzen et al. 2002). Still, it is important to find ways to improve the diagnostic yield from MRI through optimized MRI protocols, expert neuroradiological assessment and quantitative analysis of post-processed volumetric MRI (Sisodiya et al. 1995, Huppertz et al. 2005).\r\n\r\nThis project focuses on quantitative analysis to improve detection of focal cortical dysplasia (FCD), which is a common lesion associated with medically refractory epilepsy and often epileptogenic. FCD is a type of cortical malformation that is neuroradiologically characterized by cortical thickening, GM/WM blurring and transmantle signs, which are abnormal extensions of GM towards the ventricles (Barkovich et al. 1997, Huppertz et al. 2005). FCDs are the most common lesions in children and is the third most common lesion after hippocampal sclerosis (HS) and tumors in adult patients. \r\n\r\nWithin our study, a dedicated epilepsy MRI research protocol including isotropic 3D T1-weighted and FLAIR was performed on patients with medically refractory focal epilepsy, who were deemed to be non-lesional based on previous MRI. The most recent MRIs conducted in context of this study allowed (i) a clinical diagnostic assessment by an experienced neuroradiologist and (ii) the application of an automated quantitative voxel-based lesion detection technique on patients' MRIs in order to find potentially epileptogenic lesions such as FCDs. \r\n\r\nI have used MATLAB to program an automatic cortical lesion finder tool and would like to translate it into Python together with you!\r\n\r\n![image](https://user-images.githubusercontent.com/50030195/58573888-003c1980-823f-11e9-96e1-6321c1ce2b46.png)\r\n\r\n### Specific goal\r\n\r\n- overall: making a python version of the MATLAB-based toolbox\r\n- merge the GUI with the rest of the code\r\n- implement more image processing steps from MATLAB pipeline\r\n\r\n\r\n## Skills required to participate\r\nCreativity for incorporating [nipype](https://nipype.readthedocs.io/en/latest/) and [nilearn](https://nilearn.github.io) (for voxel-based morphometry)\r\n\r\n### Coding skills\r\n\r\n| language          | level of expertise required   |\r\n|-------------------|-------------------------------|\r\n| python            | beginner / **confirmed** / expert |\r\n| unix command line | **beginner** / confirmed / expert |\r\n| MATLAB             | **beginner** / confirmed / expert |\r\n\r\n### software specific sills\r\n\r\n| software   | level of expertise required   |\r\n|------------|-------------------------------|\r\n| SPM        | **beginner** / confirmed / expert |\r\n| FSL        | **beginner** / confirmed / expert |\r\n| Freesurfer | **beginner** / confirmed / expert |\r\n| Nipype     | beginner / **confirmed** / expert |\r\n\r\n\r\n### GIT / GITHUB skills required\r\n\r\n| level   | description                                                                       |\r\n|---------|-----------------------------------------------------------------------------------|\r\n| GIT - 1 | can commit and push to a repository                                               |\r\n| GIT - 2 | comfortable working with branches and can do a pull request on another repository |\r\n\r\n\r\n## Integration\r\nAs of now, we only have a limited number of cortical lesions. The idea is to make this project available to clinicians as collaborators, incorporate their feedback and improve the detection rate and usability of the software.\r\n\r\n## Milestones:\r\n(i) Incorporate the Graphical User Interface into rest of package; \r\n(ii) Translate MATLAB/SPM12 algorithms using GitHub packages\r\n(iii) Incorporate these steps into the package\r\n\r\n## Preparation material\r\n- [Python programming tutorials](https://github.com/ohbm/hackathon2019/blob/master/Tutorial_Resources.md#python)\r\n- [Proper documenting/commenting](https://realpython.com/documenting-python-code/#why-documenting-your-code-is-so-important)\r\n- [nipype](https://nipype.readthedocs.io/en/latest/) and [nipype introduction](https://miykael.github.io/nipype_tutorial/notebooks/introduction_nipype.html#5)\r\n- Not totally necessary but perhaps useful: [nilearn](https://nilearn.github.io), [SPM12](https://github.com/spm/spm12), [CAT12](http://www.neuro.uni-jena.de/vbm/download/)\r\n- Huppertz H.-J., Grimm C., Fauser S., Kassubek J., Mader I., Hochmuth A., et al. (2005). Enhanced visualization of blurred gray-white matter junctions in focal cortical dysplasia by voxel-based 3D MRI analysis. Epilepsy Research, 67(1-2), 35\u201350. http://doi.org/10.1016/j.eplepsyres.2005.07.009\r\n- Kreilkamp, B.A.K., Das, K., Wieshmann, U.C., Biswas, S., Marson, A.G., Keller, S.S. (2019). Neuroradiological findings in patients with \u2018non-lesional\u2019 focal epilepsy revealed by research protocol. Clinical Radiology, 74(1):78.e1\u201378.e11. [http://doi.org/10.1016/j.crad.2018.08.013](http://doi.org/10.1016/j.crad.2018.08.013)\r\n- Kreilkamp, B.A.K., Das, K., Wieshmann, U.C., Tyler, K., Kiel, S., Gould, S., Marson, A.G., Keller, S.S. (2017) Voxel-based MRI Analysis Can Assist Clinical Diagnostics in Patients with MRI-negative Epilepsy. Organization of Human Brain Mapping, Vancouver, Canada. [http://tiny.cc/VBM_epilepsy](http://tiny.cc/VBM_epilepsy)\r\n\r\n## Join Slack channel\r\n [@cortical_lesion_finder](https://app.slack.com/client/TFKL50SKV/CS8A5AQQZ)\r\n\r\n## GitHub Repository\r\n[Cortical Lesion Finder](https://github.com/barbrakr/CLF-python)\r\n\r\n## More References\r\n- Von Oertzen, T.J., Urbach, H., Jungbluth, S., Kurthen, M., Reuber, M., Fernandez, G. et al. (2002). Standard magnetic resonance imaging is inadequate for patients with refractory focal epilepsy. Journal of Neurology, Neurosurgery, and Psychiatry, 73(6), 643-647. http://doi.org/10.1136/jnnp.73.6.643\r\n- Sisodiya, S.M., Free, S.L., Fish, D.R., Shorvon, S.D. (1995) Increasing the yield from volumetric MRI in patients with epilepsy. Magnetic Resonance Imaging 13:1147\u20131152.\r\n- Barkovich, A.J., Kuzniecky, R.I., Bollen, A.W., Grant, P.E. (1997) Focal transmantle dysplasia: a specific malformation of cortical development. Neurology 49, 1148\u20131152.",
        "reactions": {
            "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/6/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/6/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/4",
        "repository_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon",
        "labels_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/4/labels{/name}",
        "comments_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/4/comments",
        "events_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/4/events",
        "html_url": "https://github.com/OpenMRBenelux/openmrb2020-hackathon/issues/4",
        "id": 528129457,
        "node_id": "MDU6SXNzdWU1MjgxMjk0NTc=",
        "number": 4,
        "title": "Drafting a decision tree about sharing MRI data",
        "user": {
            "login": "DorienHuijser",
            "id": 58177697,
            "node_id": "MDQ6VXNlcjU4MTc3Njk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/58177697?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DorienHuijser",
            "html_url": "https://github.com/DorienHuijser",
            "followers_url": "https://api.github.com/users/DorienHuijser/followers",
            "following_url": "https://api.github.com/users/DorienHuijser/following{/other_user}",
            "gists_url": "https://api.github.com/users/DorienHuijser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DorienHuijser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DorienHuijser/subscriptions",
            "organizations_url": "https://api.github.com/users/DorienHuijser/orgs",
            "repos_url": "https://api.github.com/users/DorienHuijser/repos",
            "events_url": "https://api.github.com/users/DorienHuijser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DorienHuijser/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1678765999,
                "node_id": "MDU6TGFiZWwxNjc4NzY1OTk5",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/Hackathon%20Project",
                "name": "Hackathon Project",
                "color": "c94528",
                "default": false,
                "description": ""
            },
            {
                "id": 1688060677,
                "node_id": "MDU6TGFiZWwxNjg4MDYwNjc3",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/git%20-%200",
                "name": "git - 0",
                "color": "7ae2b3",
                "default": false,
                "description": "no prior git knowledge"
            },
            {
                "id": 1688069459,
                "node_id": "MDU6TGFiZWwxNjg4MDY5NDU5",
                "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/labels/no%20code",
                "name": "no code",
                "color": "8f9b0d",
                "default": false,
                "description": "no coding experience required"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2019-11-25T14:37:59Z",
        "updated_at": "2020-01-23T12:36:52Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "# Drafting a decision tree about sharing MRI data\r\n\r\n## Project Description\r\nWith the increasing amount of data sharing initiatives, researchers collecting MRI data cannot and do not want to stay behind. However, many researchers do not know where to start, what they can share and where, where they can find information or support, etc. Therefore, at Leiden University (the Netherlands), we started to develop a decision tree on sharing MRI data for researchers who are new to open science and data sharing. Among our group are both researchers and support people, but we would like to have more input on possible solutions and questions to be asked in the decision tree. \r\n\r\nA possible extension of this initiative may include multiple types of data besides MRI data, as well as more details about tackling the GDPR. These are however outside of the scope of the current decision tree.\r\n\r\n## Skills required to participate\r\nYou are very welcome to contribute if you know anything about:\r\n- MRI data\r\n- GDPR / other privacy issues\r\n- Ethical issues with regard to data sharing\r\n- Data sharing or archiving repositories, or\r\n- Platforms suitable for hosting such a decision tree\r\n\r\n## Integration\r\nWe welcome people from all stages of research (student to PI) as well as research supporters (e.g., librarians, ICT support, technicians, etc.) in order to gather as much useful input as possible.\r\n\r\nIntermediate goals:\r\n- [ ] Formulate all relevant questions that the decision tree must contain\r\n- [ ] Prioritize questions: which question should be posed when?\r\n- [ ] Formulate possible solutions to most pressing scenarios\r\n- [ ] Finish a first version of the decision tree\r\n- [ ] Discuss how to implement the decision tree\r\n- [ ] Discuss where to implement the decision tree (platform, website, etc.)\r\n\r\n## Preparation material\r\nThe brainstorm document can be found [here](https://docs.google.com/document/d/154ZdLjEpUR4M1FMJ_a5JP_aCkRR7LinEomKuRgusfvM/edit?usp=sharing) and a first draft version of a tree for Leiden University can be found [here](https://drive.google.com/file/d/11jNYYZEGVEw9p2QN344TTMlb-PpKqpuM/view?usp=sharing). For other material and tutorials, see the [OHBM  list of online tutorials](https://github.com/ohbm/hackathon2019/blob/master/Tutorial_Resources.md).\r\n\r\n## Link to your GitHub repo\r\n[GitHubRepo](https://github.com/DorienHuijser/DecisionTreeMRIData)\r\n\r\n## Communication\r\nNot available yet. Please e-mail me.",
        "reactions": {
            "url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/4/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/OpenMRBenelux/openmrb2020-hackathon/issues/4/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]